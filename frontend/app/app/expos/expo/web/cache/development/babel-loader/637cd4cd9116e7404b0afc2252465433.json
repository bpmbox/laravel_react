{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/app/node_modules/react-native-calendars/src/expandableCalendar/agendaList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport { isToday } from \"../dateutils\";\nimport { getMoment } from \"../momentResolver\";\nimport styleConstructor from \"./style\";\nimport asCalendarConsumer from \"./asCalendarConsumer\";\n\nvar commons = require(\"./commons\");\n\nvar updateSources = commons.UpdateSources;\n\nvar AgendaList = function (_Component) {\n  _inherits(AgendaList, _Component);\n\n  var _super = _createSuper(AgendaList);\n\n  function AgendaList() {\n    var _this;\n\n    _classCallCheck(this, AgendaList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.style = styleConstructor(_this.props.theme);\n    _this._topSection = _.get(_this.props, 'sections[0].title');\n    _this.didScroll = false;\n    _this.sectionScroll = false;\n    _this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20\n    };\n    _this.list = React.createRef();\n    _this.sectionHeight = 0;\n\n    _this.onViewableItemsChanged = function (info) {\n      if (info != null && info.viewableItems && !_this.sectionScroll) {\n        var topSection = _.get(info == null ? void 0 : info.viewableItems[0], 'section.title');\n\n        if (topSection && topSection !== _this._topSection) {\n          _this._topSection = topSection;\n\n          if (_this.didScroll && !_this.props.avoidDateUpdates) {\n            _.invoke(_this.props.context, 'setDate', _this._topSection, updateSources.LIST_DRAG);\n          }\n        }\n      }\n    };\n\n    _this.onScroll = function (event) {\n      if (!_this.didScroll) {\n        _this.didScroll = true;\n      }\n\n      _.invoke(_this.props, 'onScroll', event);\n    };\n\n    _this.onMomentumScrollBegin = function (event) {\n      _.invoke(_this.props.context, 'setDisabled', true);\n\n      _.invoke(_this.props, 'onMomentumScrollBegin', event);\n    };\n\n    _this.onMomentumScrollEnd = function (event) {\n      _this.sectionScroll = false;\n\n      _.invoke(_this.props.context, 'setDisabled', false);\n\n      _.invoke(_this.props, 'onMomentumScrollEnd', event);\n    };\n\n    _this.onScrollToIndexFailed = function (info) {\n      if (_this.props.onScrollToIndexFailed) {\n        _this.props.onScrollToIndexFailed(info);\n      } else {\n        console.warn('onScrollToIndexFailed info: ', info);\n      }\n    };\n\n    _this.onHeaderLayout = function (event) {\n      _this.sectionHeight = event.nativeEvent.layout.height;\n    };\n\n    _this.renderSectionHeader = function (info) {\n      var _info$section;\n\n      var _this$props = _this.props,\n          renderSectionHeader = _this$props.renderSectionHeader,\n          sectionStyle = _this$props.sectionStyle;\n      var title = info == null ? void 0 : (_info$section = info.section) == null ? void 0 : _info$section.title;\n\n      if (renderSectionHeader) {\n        return renderSectionHeader(title);\n      }\n\n      return React.createElement(Text, {\n        allowFontScaling: false,\n        style: [_this.style.sectionText, sectionStyle],\n        onLayout: _this.onHeaderLayout,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }, _this.getSectionTitle(title));\n    };\n\n    _this.keyExtractor = function (item, index) {\n      var keyExtractor = _this.props.keyExtractor;\n      return _.isFunction(keyExtractor) ? keyExtractor(item, index) : String(index);\n    };\n\n    return _this;\n  }\n\n  _createClass(AgendaList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var date = this.props.context.date;\n\n      if (date !== this._topSection) {\n        setTimeout(function () {\n          var sectionIndex = _this2.getSectionIndex(date);\n\n          if (sectionIndex) {\n            _this2.scrollToSection(sectionIndex);\n          }\n        }, 500);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props$context = this.props.context,\n          updateSource = _this$props$context.updateSource,\n          date = _this$props$context.date;\n\n      if (date !== prevProps.context.date) {\n        if (updateSource !== updateSources.LIST_DRAG && updateSource !== updateSources.CALENDAR_INIT) {\n          var sectionIndex = this.getSectionIndex(date);\n\n          if (sectionIndex) {\n            this.scrollToSection(sectionIndex);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getSectionIndex\",\n    value: function getSectionIndex(date) {\n      var i;\n\n      _.map(this.props.sections, function (section, index) {\n        if (section.title === date) {\n          i = index;\n          return;\n        }\n      });\n\n      return i;\n    }\n  }, {\n    key: \"getSectionTitle\",\n    value: function getSectionTitle(title) {\n      if (!title) return;\n      var _this$props2 = this.props,\n          dayFormatter = _this$props2.dayFormatter,\n          dayFormat = _this$props2.dayFormat,\n          useMoment = _this$props2.useMoment,\n          markToday = _this$props2.markToday;\n      var sectionTitle = title;\n\n      if (dayFormatter) {\n        sectionTitle = dayFormatter(title);\n      } else if (dayFormat) {\n        if (useMoment) {\n          var moment = getMoment();\n          sectionTitle = moment(title).format(dayFormat);\n        } else {\n          sectionTitle = new XDate(title).toString(dayFormat);\n        }\n      }\n\n      if (markToday) {\n        var todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n        var today = isToday(new XDate(title));\n        sectionTitle = today ? todayString + \", \" + sectionTitle : sectionTitle;\n      }\n\n      return sectionTitle;\n    }\n  }, {\n    key: \"scrollToSection\",\n    value: function scrollToSection(sectionIndex) {\n      var _this$list;\n\n      if ((_this$list = this.list) != null && _this$list.current && sectionIndex !== undefined) {\n        var _this$props3 = this.props,\n            sections = _this$props3.sections,\n            _this$props3$viewOffs = _this$props3.viewOffset,\n            viewOffset = _this$props3$viewOffs === void 0 ? 0 : _this$props3$viewOffs;\n        this.sectionScroll = true;\n        this._topSection = sections[sectionIndex].title;\n        this.list.current.scrollToLocation({\n          animated: true,\n          sectionIndex: sectionIndex,\n          itemIndex: 0,\n          viewPosition: 0,\n          viewOffset: (commons.isAndroid ? this.sectionHeight : 0) + viewOffset\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _.omit(this.props, 'context');\n\n      return React.createElement(SectionList, _extends({}, props, {\n        ref: this.list,\n        keyExtractor: this.keyExtractor,\n        showsVerticalScrollIndicator: false,\n        onViewableItemsChanged: this.onViewableItemsChanged,\n        viewabilityConfig: this.viewabilityConfig,\n        renderSectionHeader: this.renderSectionHeader,\n        onScroll: this.onScroll,\n        onMomentumScrollBegin: this.onMomentumScrollBegin,\n        onMomentumScrollEnd: this.onMomentumScrollEnd,\n        onScrollToIndexFailed: this.onScrollToIndexFailed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return AgendaList;\n}(Component);\n\nAgendaList.displayName = 'AgendaList';\nAgendaList.propTypes = {\n  dayFormat: PropTypes.string,\n  dayFormatter: PropTypes.func,\n  useMoment: PropTypes.bool,\n  markToday: PropTypes.bool,\n  sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  avoidDateUpdates: PropTypes.bool\n};\nAgendaList.defaultProps = {\n  dayFormat: 'dddd, MMM d',\n  stickySectionHeadersEnabled: true,\n  markToday: true\n};\nexport default asCalendarConsumer(AgendaList);","map":{"version":3,"sources":["/app/node_modules/react-native-calendars/src/expandableCalendar/agendaList.js"],"names":["_","PropTypes","XDate","React","Component","isToday","getMoment","styleConstructor","asCalendarConsumer","commons","require","updateSources","UpdateSources","AgendaList","style","props","theme","_topSection","get","didScroll","sectionScroll","viewabilityConfig","itemVisiblePercentThreshold","list","createRef","sectionHeight","onViewableItemsChanged","info","viewableItems","topSection","avoidDateUpdates","invoke","context","LIST_DRAG","onScroll","event","onMomentumScrollBegin","onMomentumScrollEnd","onScrollToIndexFailed","console","warn","onHeaderLayout","nativeEvent","layout","height","renderSectionHeader","sectionStyle","title","section","sectionText","getSectionTitle","keyExtractor","item","index","isFunction","String","date","setTimeout","sectionIndex","getSectionIndex","scrollToSection","prevProps","updateSource","CALENDAR_INIT","i","map","sections","dayFormatter","dayFormat","useMoment","markToday","sectionTitle","moment","format","toString","todayString","locales","defaultLocale","today","current","undefined","viewOffset","scrollToLocation","animated","itemIndex","viewPosition","isAndroid","omit","displayName","propTypes","string","func","bool","oneOfType","object","number","array","defaultProps","stickySectionHeadersEnabled"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { Text, SectionList } from 'react-native';\n// @ts-expect-error\nimport { isToday } from '../dateutils';\n// @ts-expect-error\nimport { getMoment } from '../momentResolver';\nimport styleConstructor from './style';\nimport asCalendarConsumer from './asCalendarConsumer';\nconst commons = require('./commons');\nconst updateSources = commons.UpdateSources;\n/**\n * @description: AgendaList component\n * @note: Should be wrapped with 'CalendarProvider'\n * @extends: SectionList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nclass AgendaList extends Component {\n    static displayName = 'AgendaList';\n    static propTypes = {\n        // ...SectionList.propTypes,\n        /** day format in section title. Formatting values: http://arshaw.com/xdate/#Formatting */\n        dayFormat: PropTypes.string,\n        /** a function to custom format the section header's title */\n        dayFormatter: PropTypes.func,\n        /** whether to use moment.js for date string formatting\n         * (remember to pass 'dayFormat' with appropriate format, like 'dddd, MMM D') */\n        useMoment: PropTypes.bool,\n        /** whether to mark today's title with the \"Today, ...\" string. Default = true */\n        markToday: PropTypes.bool,\n        /** style passed to the section view */\n        sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n        /** whether to block the date change in calendar (and calendar context provider) when agenda scrolls */\n        avoidDateUpdates: PropTypes.bool\n    };\n    static defaultProps = {\n        dayFormat: 'dddd, MMM d',\n        stickySectionHeadersEnabled: true,\n        markToday: true\n    };\n    style = styleConstructor(this.props.theme);\n    _topSection = _.get(this.props, 'sections[0].title');\n    didScroll = false;\n    sectionScroll = false;\n    viewabilityConfig = {\n        itemVisiblePercentThreshold: 20 // 50 means if 50% of the item is visible\n    };\n    list = React.createRef();\n    sectionHeight = 0;\n    componentDidMount() {\n        const { date } = this.props.context;\n        if (date !== this._topSection) {\n            setTimeout(() => {\n                const sectionIndex = this.getSectionIndex(date);\n                if (sectionIndex) {\n                    this.scrollToSection(sectionIndex);\n                }\n            }, 500);\n        }\n    }\n    componentDidUpdate(prevProps) {\n        const { updateSource, date } = this.props.context;\n        if (date !== prevProps.context.date) {\n            // NOTE: on first init data should set first section to the current date!!!\n            if (updateSource !== updateSources.LIST_DRAG && updateSource !== updateSources.CALENDAR_INIT) {\n                const sectionIndex = this.getSectionIndex(date);\n                if (sectionIndex) {\n                    this.scrollToSection(sectionIndex);\n                }\n            }\n        }\n    }\n    getSectionIndex(date) {\n        let i;\n        _.map(this.props.sections, (section, index) => {\n            // NOTE: sections titles should match current date format!!!\n            if (section.title === date) {\n                i = index;\n                return;\n            }\n        });\n        return i;\n    }\n    getSectionTitle(title) {\n        if (!title)\n            return;\n        const { dayFormatter, dayFormat, useMoment, markToday } = this.props;\n        let sectionTitle = title;\n        if (dayFormatter) {\n            sectionTitle = dayFormatter(title);\n        }\n        else if (dayFormat) {\n            if (useMoment) {\n                const moment = getMoment();\n                sectionTitle = moment(title).format(dayFormat);\n            }\n            else {\n                sectionTitle = new XDate(title).toString(dayFormat);\n            }\n        }\n        if (markToday) {\n            // @ts-expect-error\n            const todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n            const today = isToday(new XDate(title));\n            sectionTitle = today ? `${todayString}, ${sectionTitle}` : sectionTitle;\n        }\n        return sectionTitle;\n    }\n    scrollToSection(sectionIndex) {\n        if (this.list?.current && sectionIndex !== undefined) {\n            const { sections, viewOffset = 0 } = this.props;\n            this.sectionScroll = true; // to avoid setDate() in onViewableItemsChanged\n            this._topSection = sections[sectionIndex].title;\n            this.list.current.scrollToLocation({\n                animated: true,\n                sectionIndex: sectionIndex,\n                itemIndex: 0,\n                viewPosition: 0,\n                viewOffset: (commons.isAndroid ? this.sectionHeight : 0) + viewOffset\n            });\n        }\n    }\n    onViewableItemsChanged = ((info) => {\n        if (info?.viewableItems && !this.sectionScroll) {\n            const topSection = _.get(info?.viewableItems[0], 'section.title');\n            if (topSection && topSection !== this._topSection) {\n                this._topSection = topSection;\n                if (this.didScroll && !this.props.avoidDateUpdates) {\n                    // to avoid setDate() on first load (while setting the initial context.date value)\n                    _.invoke(this.props.context, 'setDate', this._topSection, updateSources.LIST_DRAG);\n                }\n            }\n        }\n    });\n    onScroll = (event) => {\n        if (!this.didScroll) {\n            this.didScroll = true;\n        }\n        _.invoke(this.props, 'onScroll', event);\n    };\n    onMomentumScrollBegin = (event) => {\n        _.invoke(this.props.context, 'setDisabled', true);\n        _.invoke(this.props, 'onMomentumScrollBegin', event);\n    };\n    onMomentumScrollEnd = (event) => {\n        // when list momentum ends AND when scrollToSection scroll ends\n        this.sectionScroll = false;\n        _.invoke(this.props.context, 'setDisabled', false);\n        _.invoke(this.props, 'onMomentumScrollEnd', event);\n    };\n    onScrollToIndexFailed = (info) => {\n        if (this.props.onScrollToIndexFailed) {\n            this.props.onScrollToIndexFailed(info);\n        }\n        else {\n            console.warn('onScrollToIndexFailed info: ', info);\n        }\n    };\n    onHeaderLayout = (event) => {\n        this.sectionHeight = event.nativeEvent.layout.height;\n    };\n    renderSectionHeader = (info) => {\n        const { renderSectionHeader, sectionStyle } = this.props;\n        const title = info?.section?.title;\n        if (renderSectionHeader) {\n            return renderSectionHeader(title);\n        }\n        return (<Text allowFontScaling={false} style={[this.style.sectionText, sectionStyle]} onLayout={this.onHeaderLayout}>\n        {this.getSectionTitle(title)}\n      </Text>);\n    };\n    keyExtractor = (item, index) => {\n        const { keyExtractor } = this.props;\n        return _.isFunction(keyExtractor) ? keyExtractor(item, index) : String(index);\n    };\n    render() {\n        const props = _.omit(this.props, 'context');\n        return (<SectionList {...props} ref={this.list} keyExtractor={this.keyExtractor} showsVerticalScrollIndicator={false} onViewableItemsChanged={this.onViewableItemsChanged} viewabilityConfig={this.viewabilityConfig} renderSectionHeader={this.renderSectionHeader} onScroll={this.onScroll} onMomentumScrollBegin={this.onMomentumScrollBegin} onMomentumScrollEnd={this.onMomentumScrollEnd} onScrollToIndexFailed={this.onScrollToIndexFailed}/>);\n    }\n}\nexport default asCalendarConsumer(AgendaList);\n"]},"metadata":{},"sourceType":"module"}