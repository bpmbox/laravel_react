{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.TDefaultBlockRenderer = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _TChildrenRendererContext = require(\"./context/TChildrenRendererContext\");\n\nvar _GenericPressable = _interopRequireDefault(require(\"./GenericPressable\"));\n\nvar _useAssembledCommonProps = _interopRequireDefault(require(\"./hooks/useAssembledCommonProps\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar TDefaultBlockRenderer = function TDefaultBlockRenderer(_ref) {\n  var tnode = _ref.tnode,\n      overridingChildren = _ref.children,\n      style = _ref.style,\n      onPress = _ref.onPress,\n      viewProps = _ref.viewProps,\n      propsForChildren = _ref.propsForChildren;\n  var TNodeChildrenRenderer = (0, _TChildrenRendererContext.useTNodeChildrenRenderer)();\n  var children = overridingChildren !== null && overridingChildren !== void 0 ? overridingChildren : _react.default.createElement(TNodeChildrenRenderer, {\n    tnode: tnode,\n    propsForChildren: propsForChildren\n  });\n\n  var commonProps = _objectSpread(_objectSpread({}, viewProps), {}, {\n    style: viewProps !== null && viewProps !== void 0 && viewProps.style ? [style, viewProps.style] : style,\n    testID: tnode.tagName\n  });\n\n  if (typeof onPress === 'function') {\n    return _react.default.createElement(_GenericPressable.default, _objectSpread({\n      onPress: onPress\n    }, commonProps), children);\n  }\n\n  return _react.default.createElement(_reactNative.View, commonProps, children);\n};\n\nexports.TDefaultBlockRenderer = TDefaultBlockRenderer;\n\nvar TBlockRenderer = function TBlockRenderer(props) {\n  var _ref2 = (0, _useAssembledCommonProps.default)(props, TDefaultBlockRenderer),\n      assembledProps = _ref2.assembledProps,\n      Renderer = _ref2.Renderer;\n\n  return _react.default.createElement(Renderer, assembledProps);\n};\n\nvar _default = TBlockRenderer;\nexports.default = _default;","map":{"version":3,"sources":["TBlockRenderer.tsx"],"names":["TDefaultBlockRenderer","children","propsForChildren","TNodeChildrenRenderer","overridingChildren","commonProps","style","viewProps","testID","tnode","tagName","GenericPressable","onPress","React","View","TBlockRenderer","props","Renderer"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAGA,IAAA,yBAAA,GAAA,OAAA,sCAAA;;AAGA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA;;AACA,IAAA,wBAAA,GAAA,sBAAA,CAAA,OAAA,mCAAA,CAAA;;;;;;;;AAEO,IAAMA,qBAA+C,GAAG,SAAlDA,qBAAkD,OAOzD;AAAA,MAP0D,KAO1D,QAP0D,KAO1D;AAAA,MAP0D,kBAO1D,QALJC,QAKI;AAAA,MAP0D,KAO1D,QAP0D,KAO1D;AAAA,MAP0D,OAO1D,QAP0D,OAO1D;AAAA,MAP0D,SAO1D,QAP0D,SAO1D;AAAA,MADJC,gBACI,QADJA,gBACI;AACJ,MAAMC,qBAAqB,GAAG,CAAA,GAAA,yBAAA,CAA9B,wBAA8B,GAA9B;AACA,MAAMF,QAAQ,GAAGG,kBAAH,KAAA,IAAGA,IAAAA,kBAAH,KAAA,KAAA,CAAGA,GAAH,kBAAGA,GACf,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,qBAAA,EAAA;AAAuB,IAAA,KAAK,EAA5B,KAAA;AAAqC,IAAA,gBAAgB,EAAEF;AAAvD,GAAA,CADF;;AAGA,MAAMG,WAAW,mCAAG,SAAH;AAEfC,IAAAA,KAAK,EAAEC,SAAS,KAATA,IAAAA,IAAAA,SAAS,KAAA,KAATA,CAAAA,IAAAA,SAAS,CAATA,KAAAA,GAAmB,CAAA,KAAA,EAAQA,SAAS,CAApCA,KAAmB,CAAnBA,GAFW,KAAH;AAGfC,IAAAA,MAAM,EAAEC,KAAK,CAACC;AAHC,IAAjB;;AAKA,MAAI,OAAA,OAAA,KAAJ,UAAA,EAAmC;AACjC,WAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CACLC,iBAAAA,CADK,OAAA;AAEHC,MAAAA,OAAF,EAAEA;AAFG,OAESP,WAFT,GAAP,QAAO,CAAP;AAKD;;AACD,SAAOQ,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAAoBC,YAAAA,CAApBD,IAAAA,EAAAA,WAAAA,EAAP,QAAOA,CAAP;AAxBK,CAAA;;;;AA2BP,IAAME,cAAc,GAAIC,SAAlBD,cAAkBC,CAAAA,KAAD,EAA0C;AAC/D,cAAqC,CAAA,GAAA,wBAAA,CAAA,OAAA,EAAA,KAAA,EAArC,qBAAqC,CAArC;AAAA,MAAM,cAAN,SAAM,cAAN;AAAA,MAAwBC,QAAxB,SAAwBA,QAAxB;;AAIA,SAAOJ,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAAAA,QAAAA,EAAP,cAAOA,CAAP;AALF,CAAA;;eAQeE,c","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { TBlock } from '@native-html/transient-render-engine';\nimport { useTNodeChildrenRenderer } from './context/TChildrenRendererContext';\nimport { TDefaultRenderer } from './shared-types';\nimport { TNodeSubRendererProps } from './internal-types';\nimport GenericPressable from './GenericPressable';\nimport useAssembledCommonProps from './hooks/useAssembledCommonProps';\n\nexport const TDefaultBlockRenderer: TDefaultRenderer<TBlock> = ({\n  tnode,\n  children: overridingChildren,\n  style,\n  onPress,\n  viewProps,\n  propsForChildren\n}) => {\n  const TNodeChildrenRenderer = useTNodeChildrenRenderer();\n  const children = overridingChildren ?? (\n    <TNodeChildrenRenderer tnode={tnode} propsForChildren={propsForChildren} />\n  );\n  const commonProps = {\n    ...viewProps,\n    style: viewProps?.style ? [style, viewProps.style] : style,\n    testID: tnode.tagName\n  };\n  if (typeof onPress === 'function') {\n    return React.createElement(\n      GenericPressable,\n      { onPress, ...commonProps },\n      children\n    );\n  }\n  return React.createElement(View, commonProps, children);\n};\n\nconst TBlockRenderer = (props: TNodeSubRendererProps<TBlock>) => {\n  const { assembledProps, Renderer } = useAssembledCommonProps(\n    props,\n    TDefaultBlockRenderer\n  );\n  return React.createElement(Renderer, assembledProps);\n};\n\nexport default TBlockRenderer;\n"]},"metadata":{},"sourceType":"script"}