{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/app/examples/3-the-light/1.TheLight.js\";\nimport React, { useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Constants from \"expo-constants\";\nimport bulbOff from \"../../assets/the-light/bulb-off.jpg\";\nimport bulbOn from \"../../assets/the-light/bulb-on.jpg\";\nexport default function TheLight() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), React.createElement(Image, {\n    fadeDuration: 0,\n    source: isEnabled ? bulbOn : bulbOff,\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(Switch, {\n    trackColor: {\n      false: \"#fff\",\n      true: \"#52d964\"\n    },\n    thumbColor: \"#fff\",\n    onValueChange: toggleSwitch,\n    value: isEnabled,\n    style: styles.switch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n}\nvar screenHeight = Dimensions.get(\"window\").height;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    paddingTop: Constants.statusBarHeight\n  },\n  image: {\n    maxWidth: \"100%\",\n    maxHeight: screenHeight - Constants.statusBarHeight - 150,\n    resizeMode: \"contain\",\n    marginBottom: 20\n  },\n  switch: {\n    alignSelf: \"center\",\n    transform: Platform.OS === \"android\" ? [{\n      scale: 1.5\n    }] : []\n  }\n});","map":{"version":3,"sources":["/app/examples/3-the-light/1.TheLight.js"],"names":["React","useState","StatusBar","Constants","bulbOff","bulbOn","TheLight","isEnabled","setIsEnabled","toggleSwitch","previousState","styles","container","image","false","true","switch","screenHeight","Dimensions","get","height","StyleSheet","create","flex","backgroundColor","paddingTop","statusBarHeight","maxWidth","maxHeight","resizeMode","marginBottom","alignSelf","transform","Platform","OS","scale"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AASA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,QAAT,GAAoB;AAEjC,kBAAkCL,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMD,YAAY,CAAC,UAACE,aAAD;AAAA,aAAmB,CAACA,aAApB;AAAA,KAAD,CAAlB;AAAA,GAArB;;AAEA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,KAAD;AACE,IAAA,YAAY,EAAE,CADhB;AAEE,IAAA,MAAM,EAAEL,SAAS,GAAGF,MAAH,GAAYD,OAF/B;AAGE,IAAA,KAAK,EAAEO,MAAM,CAACE,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAaE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,IAAI,EAAE;AAAvB,KADd;AAEE,IAAA,UAAU,EAAE,MAFd;AAGE,IAAA,aAAa,EAAEN,YAHjB;AAIE,IAAA,KAAK,EAAEF,SAJT;AAKE,IAAA,KAAK,EAAEI,MAAM,CAACK,MALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAuBD;AAGD,IAAMC,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAA9C;AAEA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,OAFR;AAGTC,IAAAA,UAAU,EAAEtB,SAAS,CAACuB;AAHb,GADoB;AAM/Bb,EAAAA,KAAK,EAAE;AACLc,IAAAA,QAAQ,EAAE,MADL;AAELC,IAAAA,SAAS,EAAEX,YAAY,GAAGd,SAAS,CAACuB,eAAzB,GAA2C,GAFjD;AAGLG,IAAAA,UAAU,EAAE,SAHP;AAILC,IAAAA,YAAY,EAAE;AAJT,GANwB;AAY/Bd,EAAAA,MAAM,EAAE;AACNe,IAAAA,SAAS,EAAE,QADL;AAINC,IAAAA,SAAS,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,CAAC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAD,CAA5B,GAA+C;AAJpD;AAZuB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  StyleSheet,\n  SafeAreaView,\n  Image,\n  Switch,\n  Platform,\n} from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Constants from \"expo-constants\";\nimport bulbOff from \"../../assets/the-light/bulb-off.jpg\";\nimport bulbOn from \"../../assets/the-light/bulb-on.jpg\";\n\nexport default function TheLight() {\n  // https://reactjs.org/docs/hooks-reference.html#usestate\n  const [isEnabled, setIsEnabled] = useState(false);\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar style=\"light\" />\n\n      <Image\n        fadeDuration={0}\n        source={isEnabled ? bulbOn : bulbOff}\n        style={styles.image}\n      />\n\n      {/* https://reactnative.dev/docs/switch */}\n      {/* 説明はこういう風に記載がいいかな*/\n      /* 改行もいけるか*/\n      }\n      <Switch\n        trackColor={{ false: \"#fff\", true: \"#52d964\" }}\n        thumbColor={\"#fff\"}\n        onValueChange={toggleSwitch}\n        value={isEnabled}\n        style={styles.switch}\n      />\n    </SafeAreaView>\n  );\n}\n\n// https://reactnative.dev/docs/dimensions\nconst screenHeight = Dimensions.get(\"window\").height;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    paddingTop: Constants.statusBarHeight,\n  },\n  image: {\n    maxWidth: \"100%\",\n    maxHeight: screenHeight - Constants.statusBarHeight - 150,\n    resizeMode: \"contain\",\n    marginBottom: 20,\n  },\n  switch: {\n    alignSelf: \"center\",\n    // https://reactnative.dev/docs/transforms\n    // https://reactnative.dev/docs/platform-specific-code\n    transform: Platform.OS === \"android\" ? [{ scale: 1.5 }] : [],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}