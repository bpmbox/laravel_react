{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/app/examples/13-calender/calender.tsx\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Calendar, LocaleConfig, Agenda } from 'react-native-calendars';\nimport { Button } from 'react-native-paper';\n\nvar testIDs = require(\"./testIDs\");\n\nvar image = {\n  uri: \"https://user-images.githubusercontent.com/68040080/118057532-2117be00-b3c7-11eb-8264-a9330f02f954.png\"\n};\nReact.createElement(Calendar, {\n  current: '2012-03-01',\n  minDate: '2012-05-10',\n  maxDate: '2012-05-30',\n  onDayPress: function onDayPress(day) {\n    console.log('selected day', day);\n  },\n  onDayLongPress: function onDayLongPress(day) {\n    console.log('selected day', day);\n  },\n  monthFormat: 'yyyy MM',\n  onMonthChange: function onMonthChange(month) {\n    console.log('month changed', month);\n  },\n  hideArrows: true,\n  renderArrow: function renderArrow(direction) {\n    return React.createElement(Arrow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 32\n      }\n    });\n  },\n  hideExtraDays: true,\n  disableMonthChange: true,\n  firstDay: 1,\n  hideDayNames: true,\n  showWeekNumbers: true,\n  onPressArrowLeft: function onPressArrowLeft(subtractMonth) {\n    return subtractMonth();\n  },\n  onPressArrowRight: function onPressArrowRight(addMonth) {\n    return addMonth();\n  },\n  disableArrowLeft: true,\n  disableArrowRight: true,\n  disableAllTouchEventsForDisabledDays: true,\n  renderHeader: function renderHeader(date) {},\n  enableSwipeMonths: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 1\n  }\n});\nLocaleConfig.locales.jp = {\n  monthNames: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n  monthNamesShort: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n  dayNames: ['日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日'],\n  dayNamesShort: ['日', '月', '火', '水', '木', '金', '土']\n};\nLocaleConfig.defaultLocale = 'jp';\n\nvar AgendaScreen = function (_Component) {\n  _inherits(AgendaScreen, _Component);\n\n  var _super = _createSuper(AgendaScreen);\n\n  function AgendaScreen(props) {\n    var _this2;\n\n    _classCallCheck(this, AgendaScreen);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      items: {}\n    };\n    return _this2;\n  }\n\n  _createClass(AgendaScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Agenda, {\n        testID: testIDs.agenda.CONTAINER,\n        items: this.state.items,\n        loadItemsForMonth: this.loadItems.bind(this),\n        selected: '2021-05-24',\n        renderItem: this.renderItem.bind(this),\n        renderEmptyDate: this.renderEmptyDate.bind(this),\n        rowHasChanged: this.rowHasChanged.bind(this),\n        firstDay: 1,\n        renderDay: function renderDay(day, item) {\n          return React.createElement(Text, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 38\n            }\n          }, day ? '' : '');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        icon: \"camera\",\n        mode: \"contained\",\n        onPress: function onPress() {\n          return console.log('Pressed');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, \"Press me\")));\n    }\n  }, {\n    key: \"loadItems\",\n    value: function loadItems(day) {\n      var _this4 = this;\n\n      setTimeout(function () {\n        var count = 0;\n\n        for (var i = -1; i < 2; i++) {\n          var time = day.timestamp + i * 24 * 60 * 60 * 1000;\n\n          var strTime = _this4.timeToString(time);\n\n          if (!_this4.state.items[strTime]) {\n            _this4.state.items[strTime] = [];\n            var numItems = Math.floor(Math.random() * 10 + 1);\n\n            for (var j = 0; j < numItems; j++) {\n              if (j === 0) {\n                _this4.state.items[strTime].push({\n                  name: 'Workstyle Item for ' + strTime + ' #' + j,\n                  height: 70,\n                  header: 1\n                });\n              }\n\n              _this4.state.items[strTime].push({\n                name: 'Workstyle Item for ' + strTime + ' #' + j,\n                height: 70\n              });\n            }\n          }\n        }\n\n        var newItems = {};\n        Object.keys(_this4.state.items).forEach(function (key) {\n          newItems[key] = _this4.state.items[key];\n        });\n\n        _this4.setState({\n          items: newItems\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item, i) {\n      console.log(\"----------------------------------\");\n      console.log(JSON.stringify(item));\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: {\n          flex: 1,\n          width: '100%',\n          flexDirection: 'row',\n          marginLeft: 190\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }, item.header === 1 && React.createElement(Button, {\n        icon: \"camera\",\n        mode: \"contained\",\n        onPress: function onPress() {\n          return console.log('Pressed');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }\n      }, \"\\u4E88\\u5B9A\\u3092\\u78BA\\u5B9A\\u3059\\u308B\")), React.createElement(View, {\n        style: {\n          flex: 1,\n          width: '100%',\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }\n      }, item.header === 1 && React.createElement(ImageBackground, {\n        source: image,\n        style: styles.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 12\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }, item.name)), item.header !== 1 && React.createElement(TouchableOpacity, {\n        testID: testIDs.agenda.ITEM,\n        style: [styles.item, {\n          height: item.height\n        }],\n        onPress: function onPress() {\n          return Alert.alert(item.name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }, item.name)), React.createElement(TouchableOpacity, {\n        testID: testIDs.agenda.ITEM,\n        style: [styles.item2, {\n          height: item.height\n        }],\n        onPress: function onPress() {\n          return Alert.alert(item.name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, item.name))));\n    }\n  }, {\n    key: \"renderItemH\",\n    value: function renderItemH(item, i) {\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: {\n          flex: 1,\n          width: '100%',\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, \"\\u3001\"));\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        style: styles.emptyDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"rowHasChanged\",\n    value: function rowHasChanged(r1, r2) {\n      return r1.name !== r2.name;\n    }\n  }, {\n    key: \"timeToString\",\n    value: function timeToString(time) {\n      var date = new Date(time);\n      return date.toISOString().split('T')[0];\n    }\n  }]);\n\n  return AgendaScreen;\n}(Component);\n\nexport { AgendaScreen as default };\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: 'white',\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  item2: {\n    backgroundColor: '#800080',\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  image: {\n    backgroundColor: '#800080',\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  }\n});","map":{"version":3,"sources":["/app/examples/13-calender/calender.tsx"],"names":["React","Component","Calendar","LocaleConfig","Agenda","Button","testIDs","require","image","uri","day","console","log","month","direction","subtractMonth","addMonth","date","locales","jp","monthNames","monthNamesShort","dayNames","dayNamesShort","defaultLocale","AgendaScreen","props","state","items","agenda","CONTAINER","loadItems","bind","renderItem","renderEmptyDate","rowHasChanged","item","setTimeout","count","i","time","timestamp","strTime","timeToString","numItems","Math","floor","random","j","push","name","height","header","newItems","Object","keys","forEach","key","setState","JSON","stringify","flex","width","flexDirection","marginLeft","styles","ITEM","Alert","alert","item2","emptyDate","r1","r2","Date","toISOString","split","StyleSheet","create","backgroundColor","borderRadius","padding","marginRight","marginTop","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ImageBackground,Alert, StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { Calendar,LocaleConfig, Agenda } from 'react-native-calendars';\r\nimport { Button } from 'react-native-paper';\r\nconst testIDs = require('./testIDs');\r\nconst image = { uri: \"https://user-images.githubusercontent.com/68040080/118057532-2117be00-b3c7-11eb-8264-a9330f02f954.png\" };\r\n//日本語化\r\n<Calendar\r\n  // Initially visible month. Default = Date()\r\n  current={'2012-03-01'}\r\n  // Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined\r\n  minDate={'2012-05-10'}\r\n  // Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined\r\n  maxDate={'2012-05-30'}\r\n  // Handler which gets executed on day press. Default = undefined\r\n  onDayPress={(day) => {console.log('selected day', day)}}\r\n  // Handler which gets executed on day long press. Default = undefined\r\n  onDayLongPress={(day) => {console.log('selected day', day)}}\r\n  // Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting\r\n  monthFormat={'yyyy MM'}\r\n  // Handler which gets executed when visible month changes in calendar. Default = undefined\r\n  onMonthChange={(month) => {console.log('month changed', month)}}\r\n  // Hide month navigation arrows. Default = false\r\n  hideArrows={true}\r\n  // Replace default arrows with custom ones (direction can be 'left' or 'right')\r\n  renderArrow={(direction) => (<Arrow/>)}\r\n  // Do not show days of other months in month page. Default = false\r\n  hideExtraDays={true}\r\n  // If hideArrows=false and hideExtraDays=false do not switch month when tapping on greyed out\r\n  // day from another month that is visible in calendar page. Default = false\r\n  disableMonthChange={true}\r\n  // If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday.\r\n  firstDay={1}\r\n  // Hide day names. Default = false\r\n  hideDayNames={true}\r\n  // Show week numbers to the left. Default = false\r\n  showWeekNumbers={true}\r\n  // Handler which gets executed when press arrow icon left. It receive a callback can go back month\r\n  onPressArrowLeft={subtractMonth => subtractMonth()}\r\n  // Handler which gets executed when press arrow icon right. It receive a callback can go next month\r\n  onPressArrowRight={addMonth => addMonth()}\r\n  // Disable left arrow. Default = false\r\n  disableArrowLeft={true}\r\n  // Disable right arrow. Default = false\r\n  disableArrowRight={true}\r\n  // Disable all touch events for disabled days. can be override with disableTouchEvent in markedDates\r\n  disableAllTouchEventsForDisabledDays={true}\r\n  // Replace default month and year title with custom one. the function receive a date as parameter.\r\n  renderHeader={(date) => {/*Return JSX*/}}\r\n  // Enable the option to swipe between months. Default = false\r\n  enableSwipeMonths={true}\r\n/>\r\nLocaleConfig.locales.jp = {\r\n  monthNames: [\r\n    '1月',\r\n    '2月',\r\n    '3月',\r\n    '4月',\r\n    '5月',\r\n    '6月',\r\n    '7月',\r\n    '8月',\r\n    '9月',\r\n    '10月',\r\n    '11月',\r\n    '12月',\r\n  ],\r\n  monthNamesShort: [\r\n    '1月',\r\n    '2月',\r\n    '3月',\r\n    '4月',\r\n    '5月',\r\n    '6月',\r\n    '7月',\r\n    '8月',\r\n    '9月',\r\n    '10月',\r\n    '11月',\r\n    '12月',\r\n  ],\r\n  dayNames: [\r\n    '日曜日',\r\n    '月曜日',\r\n    '火曜日',\r\n    '水曜日',\r\n    '木曜日',\r\n    '金曜日',\r\n    '土曜日',\r\n  ],\r\n  dayNamesShort: ['日', '月', '火', '水', '木', '金', '土'],\r\n};\r\nLocaleConfig.defaultLocale = 'jp';\r\nexport default class AgendaScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    /**\r\n     * ITEMの取得\r\n     */\r\n    this.state = {\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Agenda\r\n          testID={testIDs.agenda.CONTAINER}\r\n          items={this.state.items}\r\n          //時間のロード\r\n          loadItemsForMonth={this.loadItems.bind(this)}\r\n          //開始日時\r\n          selected={'2021-05-24'}\r\n          //表示用データの表示\r\n          renderItem={this.renderItem.bind(this)}\r\n          renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n          rowHasChanged={this.rowHasChanged.bind(this)}\r\n          firstDay={1}\r\n          // markingType={'period'}\r\n          // markedDates={{\r\n          //    '2017-05-08': {textColor: '#43515c'},\r\n          //    '2017-05-09': {textColor: '#43515c'},\r\n          //    '2017-05-14': {startingDay: true, endingDay: true, color: 'blue'},\r\n          //    '2017-05-21': {startingDay: true, color: 'blue'},\r\n          //    '2017-05-22': {endingDay: true, color: 'gray'},\r\n          //    '2017-05-24': {startingDay: true, color: 'gray'},\r\n          //    '2017-05-25': {color: 'gray'},\r\n          //    '2017-05-26': {endingDay: true, color: 'gray'}}}\r\n          // monthFormat={'yyyy'}\r\n          // theme={{calendarBackground: 'red', agendaKnobColor: 'green'}}\r\n          renderDay={(day, item) => (<Text>{day ? '': ''}</Text>)}\r\n          // hideExtraDays={false}\r\n        />\r\n        <Button\r\n          icon=\"camera\"\r\n          mode=\"contained\"\r\n          onPress={() => console.log('Pressed')}>\r\n          <Text>Press me</Text>\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n////\r\n  loadItems(day) {\r\n    setTimeout(() => {\r\n      //strTime = this.timeToString(time);\r\n      //this.state.items[\"\"].push(<Button>sssssssssssssss</Button>)\r\n      let count = 0;\r\n      for (let i = -1; i < 2; i++) {\r\n        const time = day.timestamp + i * 24 * 60 * 60 * 1000;\r\n        const strTime = this.timeToString(time);\r\n\r\n        if (!this.state.items[strTime]) {\r\n          this.state.items[strTime] = [];\r\n          //予定内容の設定\r\n          const numItems = Math.floor(Math.random() * 10 + 1); //日別の予定設定\r\n          for (let j = 0; j < numItems; j++) {\r\n            if (j === 0) {\r\n              this.state.items[strTime].push({\r\n                name: 'Workstyle Item for ' + strTime + ' #' + j,\r\n                height: 70,//Math.max(50, Math.floor(Math.random() * 150)),\r\n                header:1\r\n              });\r\n            }\r\n            this.state.items[strTime].push({\r\n              name: 'Workstyle Item for ' + strTime + ' #' + j,\r\n              height: 70,//Math.max(50, Math.floor(Math.random() * 150)),\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const newItems = {};\r\n      //キーの設定\r\n      Object.keys(this.state.items).forEach((key) => {\r\n        newItems[key] = this.state.items[key];\r\n      });\r\n      //render calender\r\n      this.setState({\r\n        items: newItems,\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * @function カレンダー明細の記載\r\n   * @params item:<any> item object\r\n   */\r\n  renderItem(item, i) {\r\n    console.log(\"----------------------------------\")\r\n    console.log(JSON.stringify(item))\r\n    return (\r\n      <>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            width: '100%',\r\n            flexDirection: 'row',\r\n            marginLeft: 190\r\n          }}>\r\n {item.header===1 && (\r\n        <Button\r\n          icon=\"camera\"\r\n          mode=\"contained\"\r\n          onPress={() => console.log('Pressed')}>\r\n          予定を確定する\r\n        </Button>\r\n )}\r\n        </View>\r\n        {}\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            width: '100%',\r\n            flexDirection: 'row',\r\n          }}>\r\n          {item.header===1 && (\r\n           <ImageBackground source={image} style={styles.image}>\r\n            <Text>{item.name}</Text>\r\n          </ImageBackground>\r\n          )}\r\n          {item.header!==1 && (\r\n             <TouchableOpacity\r\n            testID={testIDs.agenda.ITEM}\r\n            style={[styles.item, { height: item.height }]}\r\n            onPress={() => Alert.alert(item.name)}>\r\n            <Text>{item.name}</Text>\r\n          </TouchableOpacity>\r\n          )}\r\n\r\n          <TouchableOpacity\r\n            testID={testIDs.agenda.ITEM}\r\n            style={[styles.item2, { height: item.height }]}\r\n            onPress={() => Alert.alert(item.name)}>\r\n            <Text>{item.name}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderItemH(item, i) {\r\n    return (\r\n      <>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            width: '100%',\r\n            flexDirection: 'row',\r\n          }}>\r\n          、\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View style={styles.emptyDate}>\r\n        <Text>This is empty date!</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  rowHasChanged(r1, r2) {\r\n    return r1.name !== r2.name;\r\n  }\r\n\r\n  timeToString(time) {\r\n    const date = new Date(time);\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: 'white',\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  item2: {\r\n    backgroundColor: '#800080',\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  image: {\r\n    backgroundColor: '#800080',\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}