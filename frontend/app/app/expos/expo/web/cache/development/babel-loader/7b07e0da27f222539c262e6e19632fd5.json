{"ast":null,"code":"var _require = require(\"./dateutils\"),\n    isToday = _require.isToday,\n    isDateNotInTheRange = _require.isDateNotInTheRange,\n    sameMonth = _require.sameMonth;\n\nvar _require2 = require(\"./interface\"),\n    parseDate = _require2.parseDate,\n    toMarkingFormat = _require2.toMarkingFormat;\n\nfunction getState(day, current, props) {\n  var minDate = props.minDate,\n      maxDate = props.maxDate,\n      disabledByDefault = props.disabledByDefault,\n      context = props.context;\n\n  var _minDate = parseDate(minDate);\n\n  var _maxDate = parseDate(maxDate);\n\n  var state = '';\n\n  if ((context == null ? void 0 : context.date) === toMarkingFormat(day)) {\n    state = 'selected';\n  } else if (isToday(day)) {\n    state = 'today';\n  }\n\n  if (disabledByDefault) {\n    state = 'disabled';\n  } else if (isDateNotInTheRange(_minDate, _maxDate, day)) {\n    state = 'disabled';\n  } else if (!sameMonth(day, current)) {\n    state = 'disabled';\n  }\n\n  return state;\n}\n\nexport { getState };","map":{"version":3,"sources":["/app/node_modules/react-native-calendars/src/day-state-manager.js"],"names":["require","isToday","isDateNotInTheRange","sameMonth","parseDate","toMarkingFormat","getState","day","current","props","minDate","maxDate","disabledByDefault","context","_minDate","_maxDate","state","date"],"mappings":"eAAkDA,OAAO,e;IAAlDC,O,YAAAA,O;IAASC,mB,YAAAA,mB;IAAqBC,S,YAAAA,S;;gBACAH,OAAO,e;IAArCI,S,aAAAA,S;IAAWC,e,aAAAA,e;;AAElB,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuC;AAAA,MAC9BC,OAD8B,GACkBD,KADlB,CAC9BC,OAD8B;AAAA,MACrBC,OADqB,GACkBF,KADlB,CACrBE,OADqB;AAAA,MACZC,iBADY,GACkBH,KADlB,CACZG,iBADY;AAAA,MACOC,OADP,GACkBJ,KADlB,CACOI,OADP;;AAErC,MAAMC,QAAQ,GAAGV,SAAS,CAACM,OAAD,CAA1B;;AACA,MAAMK,QAAQ,GAAGX,SAAS,CAACO,OAAD,CAA1B;;AACA,MAAIK,KAAK,GAAG,EAAZ;;AAEA,MAAI,CAAAH,OAAO,QAAP,YAAAA,OAAO,CAAEI,IAAT,MAAkBZ,eAAe,CAACE,GAAD,CAArC,EAA4C;AAC1CS,IAAAA,KAAK,GAAG,UAAR;AACD,GAFD,MAEO,IAAIf,OAAO,CAACM,GAAD,CAAX,EAAkB;AACvBS,IAAAA,KAAK,GAAG,OAAR;AACD;;AACD,MAAIJ,iBAAJ,EAAuB;AACrBI,IAAAA,KAAK,GAAG,UAAR;AACD,GAFD,MAEO,IAAId,mBAAmB,CAACY,QAAD,EAAWC,QAAX,EAAqBR,GAArB,CAAvB,EAAkD;AACvDS,IAAAA,KAAK,GAAG,UAAR;AACD,GAFM,MAEA,IAAI,CAACb,SAAS,CAACI,GAAD,EAAMC,OAAN,CAAd,EAA8B;AACnCQ,IAAAA,KAAK,GAAG,UAAR;AACD;;AAED,SAAOA,KAAP;AACD;;AAED,SAAQV,QAAR","sourcesContent":["const {isToday, isDateNotInTheRange, sameMonth} = require('./dateutils');\nconst {parseDate, toMarkingFormat} = require('./interface');\n\nfunction getState(day, current, props) {\n  const {minDate, maxDate, disabledByDefault, context} = props;\n  const _minDate = parseDate(minDate);\n  const _maxDate = parseDate(maxDate);\n  let state = '';\n\n  if (context?.date === toMarkingFormat(day)) {\n    state = 'selected';\n  } else if (isToday(day)) {\n    state = 'today';\n  }\n  if (disabledByDefault) {\n    state = 'disabled';\n  } else if (isDateNotInTheRange(_minDate, _maxDate, day)) {\n    state = 'disabled';\n  } else if (!sameMonth(day, current)) {\n    state = 'disabled';\n  }\n\n  return state;\n}\n\nexport {getState};\n"]},"metadata":{},"sourceType":"module"}