{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/app/node_modules/react-native-calendars/src/agenda/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { extractComponentProps } from \"../component-updater.js\";\nimport { parseDate, xdateToData, toMarkingFormat } from \"../interface\";\nimport { weekDayNames, sameDate, sameMonth } from \"../dateutils\";\nimport { AGENDA_CALENDAR_KNOB } from \"../testIDs\";\nimport { VelocityTracker } from \"../input\";\nimport styleConstructor from \"./style\";\nimport CalendarList from \"../calendar-list\";\nimport ReservationList from \"./reservation-list\";\nvar HEADER_HEIGHT = 104;\nvar KNOB_HEIGHT = 24;\n\nvar Agenda = function (_Component) {\n  _inherits(Agenda, _Component);\n\n  var _super = _createSuper(Agenda);\n\n  function Agenda(props) {\n    var _this;\n\n    _classCallCheck(this, Agenda);\n\n    _this = _super.call(this, props);\n    _this.scrollPad = React.createRef();\n    _this.calendar = React.createRef();\n    _this.knob = React.createRef();\n    _this.list = React.createRef();\n\n    _this.initialScrollPadPosition = function () {\n      return Math.max(0, _this.viewHeight - HEADER_HEIGHT);\n    };\n\n    _this.setScrollPadPosition = function (y, animated) {\n      var _this$scrollPad, _this$scrollPad$curre;\n\n      if ((_this$scrollPad = _this.scrollPad) != null && (_this$scrollPad$curre = _this$scrollPad.current) != null && _this$scrollPad$curre.scrollTo) {\n        _this.scrollPad.current.scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      } else {\n        var _this$scrollPad2, _this$scrollPad2$curr;\n\n        (_this$scrollPad2 = _this.scrollPad) == null ? void 0 : (_this$scrollPad2$curr = _this$scrollPad2.current) == null ? void 0 : _this$scrollPad2$curr.getNode().scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      }\n    };\n\n    _this.toggleCalendarPosition = function (open) {\n      var maxY = _this.initialScrollPadPosition();\n\n      _this.setScrollPadPosition(open ? 0 : maxY, true);\n\n      _this.enableCalendarScrolling(open);\n    };\n\n    _this.chooseDayFromCalendar = function (d) {\n      _this.chooseDay(d, !_this.state.calendarScrollable);\n    };\n\n    _this.generateMarkings = memoize(function (selectedDay, markedDates) {\n      var items = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (!markedDates) {\n        markedDates = {};\n        Object.keys(items).forEach(function (key) {\n          if (items[key] && items[key].length) {\n            markedDates[key] = {\n              marked: true\n            };\n          }\n        });\n      }\n\n      var key = toMarkingFormat(selectedDay);\n      return _objectSpread(_objectSpread({}, markedDates), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, markedDates[key] || {}), {\n        selected: true\n      })));\n    });\n\n    _this.onScrollPadLayout = function () {\n      _this.setScrollPadPosition(_this.initialScrollPadPosition(), false);\n\n      setTimeout(function () {\n        return _this.setState({\n          calendarIsReady: true\n        });\n      }, 0);\n    };\n\n    _this.onCalendarListLayout = function () {\n      var _this$calendar, _this$calendar$curren;\n\n      (_this$calendar = _this.calendar) == null ? void 0 : (_this$calendar$curren = _this$calendar.current) == null ? void 0 : _this$calendar$curren.scrollToDay(_this.state.selectedDay.clone(), _this.calendarOffset(), false);\n    };\n\n    _this.onLayout = function (event) {\n      _this.viewHeight = event.nativeEvent.layout.height;\n      _this.viewWidth = event.nativeEvent.layout.width;\n\n      _this.forceUpdate();\n    };\n\n    _this.onTouchStart = function () {\n      var _this$knob, _this$knob$current;\n\n      _this.headerState = 'touched';\n      (_this$knob = _this.knob) == null ? void 0 : (_this$knob$current = _this$knob.current) == null ? void 0 : _this$knob$current.setNativeProps({\n        style: {\n          opacity: 0.5\n        }\n      });\n    };\n\n    _this.onTouchEnd = function () {\n      var _this$knob2, _this$knob2$current;\n\n      (_this$knob2 = _this.knob) == null ? void 0 : (_this$knob2$current = _this$knob2.current) == null ? void 0 : _this$knob2$current.setNativeProps({\n        style: {\n          opacity: 1\n        }\n      });\n\n      if (_this.headerState === 'touched') {\n        var isOpen = _this.state.calendarScrollable;\n\n        _this.toggleCalendarPosition(!isOpen);\n      }\n\n      _this.headerState = 'idle';\n    };\n\n    _this.onStartDrag = function () {\n      _this.headerState = 'dragged';\n\n      _this.knobTracker.reset();\n    };\n\n    _this.onSnapAfterDrag = function (e) {\n      _this.onTouchEnd();\n\n      var currentY = e.nativeEvent.contentOffset.y;\n\n      _this.knobTracker.add(currentY);\n\n      var projectedY = currentY + _this.knobTracker.estimateSpeed() * 250;\n\n      var maxY = _this.initialScrollPadPosition();\n\n      var snapY = projectedY > maxY / 2 ? maxY : 0;\n\n      _this.setScrollPadPosition(snapY, true);\n\n      _this.enableCalendarScrolling(snapY === 0);\n    };\n\n    _this.onVisibleMonthsChange = function (months) {\n      _.invoke(_this.props, 'onVisibleMonthsChange', months);\n\n      if (_this.props.items && !_this.state.firstReservationLoad) {\n        clearTimeout(_this.scrollTimeout);\n        _this.scrollTimeout = setTimeout(function () {\n          if (_this._isMounted) {\n            _.invoke(_this.props, 'loadItemsForMonth', months[0]);\n          }\n        }, 200);\n      }\n    };\n\n    _this.onDayChange = function (day) {\n      var _this$calendar2, _this$calendar2$curre;\n\n      var newDate = parseDate(day);\n      var withAnimation = sameMonth(newDate, _this.state.selectedDay);\n      (_this$calendar2 = _this.calendar) == null ? void 0 : (_this$calendar2$curre = _this$calendar2.current) == null ? void 0 : _this$calendar2$curre.scrollToDay(day, _this.calendarOffset(), withAnimation);\n\n      _this.setState({\n        selectedDay: newDate\n      });\n\n      _.invoke(_this.props, 'onDayChange', xdateToData(newDate));\n    };\n\n    _this.renderWeekDaysNames = memoize(function (weekDaysNames) {\n      return weekDaysNames.map(function (day, index) {\n        return React.createElement(Text, {\n          allowFontScaling: false,\n          key: day + index,\n          style: _this.style.weekday,\n          numberOfLines: 1,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 51\n          }\n        }, day);\n      });\n    });\n\n    _this.renderWeekNumbersSpace = function () {\n      return _this.props.showWeekNumbers && React.createElement(View, {\n        style: _this.style.weekday,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 46\n        }\n      });\n    };\n\n    _this.style = styleConstructor(props.theme);\n    var windowSize = Dimensions.get('window');\n    _this.viewHeight = windowSize.height;\n    _this.viewWidth = windowSize.width;\n    _this.scrollTimeout = undefined;\n    _this.headerState = 'idle';\n    _this.state = {\n      scrollY: new Animated.Value(0),\n      calendarIsReady: false,\n      calendarScrollable: false,\n      firstReservationLoad: false,\n      selectedDay: parseDate(props.selected) || new XDate(true),\n      topDay: parseDate(props.selected) || new XDate(true)\n    };\n    _this.currentMonth = _this.state.selectedDay.clone();\n    _this.knobTracker = new VelocityTracker();\n\n    _this.state.scrollY.addListener(function (_ref) {\n      var value = _ref.value;\n      return _this.knobTracker.add(value);\n    });\n\n    return _this;\n  }\n\n  _createClass(Agenda, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.loadReservations(this.props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      this.state.scrollY.removeAllListeners();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.selected && !sameDate(parseDate(this.props.selected), parseDate(prevProps.selected))) {\n        this.setState({\n          selectedDay: parseDate(this.props.selected)\n        });\n      } else if (!prevProps.items) {\n        this.loadReservations(this.props);\n      }\n    }\n  }, {\n    key: \"calendarOffset\",\n    value: function calendarOffset() {\n      return 96 - this.viewHeight / 2;\n    }\n  }, {\n    key: \"enableCalendarScrolling\",\n    value: function enableCalendarScrolling() {\n      var _this$calendar3, _this$calendar3$curre;\n\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.setState({\n        calendarScrollable: enable\n      });\n\n      _.invoke(this.props, 'onCalendarToggled', enable);\n\n      (_this$calendar3 = this.calendar) == null ? void 0 : (_this$calendar3$curre = _this$calendar3.current) == null ? void 0 : _this$calendar3$curre.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n    }\n  }, {\n    key: \"loadReservations\",\n    value: function loadReservations(props) {\n      var _this2 = this;\n\n      if ((!props.items || !Object.keys(props.items).length) && !this.state.firstReservationLoad) {\n        this.setState({\n          firstReservationLoad: true\n        }, function () {\n          _.invoke(_this2.props, 'loadItemsForMonth', xdateToData(_this2.state.selectedDay));\n        });\n      }\n    }\n  }, {\n    key: \"chooseDay\",\n    value: function chooseDay(d, optimisticScroll) {\n      var _this$calendar4, _this$calendar4$curre;\n\n      var day = parseDate(d);\n      this.setState({\n        calendarScrollable: false,\n        selectedDay: day.clone()\n      });\n\n      _.invoke(this.props, 'onCalendarToggled', false);\n\n      if (!optimisticScroll) {\n        this.setState({\n          topDay: day.clone()\n        });\n      }\n\n      this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n      (_this$calendar4 = this.calendar) == null ? void 0 : (_this$calendar4$curre = _this$calendar4.current) == null ? void 0 : _this$calendar4$curre.scrollToDay(day, this.calendarOffset(), true);\n\n      _.invoke(this.props, 'loadItemsForMonth', xdateToData(day));\n\n      _.invoke(this.props, 'onDayPress', xdateToData(day));\n    }\n  }, {\n    key: \"renderReservations\",\n    value: function renderReservations() {\n      var reservationListProps = extractComponentProps(ReservationList, this.props);\n      return React.createElement(ReservationList, _extends({}, reservationListProps, {\n        ref: this.list,\n        reservations: this.props.items,\n        selectedDay: this.state.selectedDay,\n        topDay: this.state.topDay,\n        onDayChange: this.onDayChange,\n        onScroll: function onScroll() {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"renderCalendarList\",\n    value: function renderCalendarList() {\n      var _this$props = this.props,\n          markedDates = _this$props.markedDates,\n          items = _this$props.items;\n      var shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n      var calendarListProps = extractComponentProps(CalendarList, this.props);\n      return React.createElement(CalendarList, _extends({}, calendarListProps, {\n        ref: this.calendar,\n        current: this.currentMonth,\n        markedDates: this.generateMarkings(this.state.selectedDay, markedDates, items),\n        calendarWidth: this.viewWidth,\n        scrollEnabled: this.state.calendarScrollable,\n        hideExtraDays: shouldHideExtraDays,\n        onLayout: this.onCalendarListLayout,\n        onDayPress: this.chooseDayFromCalendar,\n        onVisibleMonthsChange: this.onVisibleMonthsChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"renderKnob\",\n    value: function renderKnob() {\n      var _this$props2 = this.props,\n          showClosingKnob = _this$props2.showClosingKnob,\n          hideKnob = _this$props2.hideKnob,\n          renderKnob = _this$props2.renderKnob;\n      var knob = React.createElement(View, {\n        style: this.style.knobContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 20\n        }\n      });\n\n      if (!hideKnob) {\n        var knobView = renderKnob ? renderKnob() : React.createElement(View, {\n          style: this.style.knob,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 58\n          }\n        });\n        knob = !this.state.calendarScrollable || showClosingKnob ? React.createElement(View, {\n          style: this.style.knobContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 73\n          }\n        }, React.createElement(View, {\n          ref: this.knob,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 11\n          }\n        }, knobView)) : null;\n      }\n\n      return knob;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          firstDay = _this$props3.firstDay,\n          hideKnob = _this$props3.hideKnob,\n          style = _this$props3.style,\n          testID = _this$props3.testID;\n      var weekDaysNames = weekDayNames(firstDay);\n      var agendaHeight = this.initialScrollPadPosition();\n      var weekdaysStyle = [this.style.weekdays, {\n        opacity: this.state.scrollY.interpolate({\n          inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        }),\n        transform: [{\n          translateY: this.state.scrollY.interpolate({\n            inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n            outputRange: [-HEADER_HEIGHT, 0],\n            extrapolate: 'clamp'\n          })\n        }]\n      }];\n      var headerTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [agendaHeight, 0],\n        extrapolate: 'clamp'\n      });\n      var contentTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [0, agendaHeight / 2],\n        extrapolate: 'clamp'\n      });\n      var headerStyle = [this.style.header, {\n        bottom: agendaHeight,\n        transform: [{\n          translateY: headerTranslate\n        }]\n      }];\n\n      if (!this.state.calendarIsReady) {\n        headerStyle.push({\n          height: 0\n        });\n        weekdaysStyle.push({\n          height: HEADER_HEIGHT\n        });\n      }\n\n      var openCalendarScrollPadPosition = !hideKnob && this.state.calendarScrollable && this.props.showClosingKnob ? agendaHeight + HEADER_HEIGHT : 0;\n      var shouldAllowDragging = !hideKnob && !this.state.calendarScrollable;\n      var scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : openCalendarScrollPadPosition) - KNOB_HEIGHT;\n      var scrollPadStyle = {\n        height: KNOB_HEIGHT,\n        top: scrollPadPosition,\n        left: (this.viewWidth - 80) / 2\n      };\n      return React.createElement(View, {\n        testID: testID,\n        onLayout: this.onLayout,\n        style: [style, this.style.container],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: this.style.reservations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 9\n        }\n      }, this.renderReservations()), React.createElement(Animated.View, {\n        style: headerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: [this.style.animatedContainer, {\n          transform: [{\n            translateY: contentTranslate\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }\n      }, this.renderCalendarList()), this.renderKnob()), React.createElement(Animated.View, {\n        style: weekdaysStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 9\n        }\n      }, this.renderWeekNumbersSpace(), this.renderWeekDaysNames(weekDaysNames)), React.createElement(Animated.ScrollView, {\n        ref: this.scrollPad,\n        style: [this.style.scrollPadStyle, scrollPadStyle],\n        overScrollMode: \"never\",\n        showsHorizontalScrollIndicator: false,\n        showsVerticalScrollIndicator: false,\n        scrollEventThrottle: 8,\n        scrollsToTop: false,\n        onTouchStart: this.onTouchStart,\n        onTouchEnd: this.onTouchEnd,\n        onScrollBeginDrag: this.onStartDrag,\n        onScrollEndDrag: this.onSnapAfterDrag,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: this.state.scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        testID: AGENDA_CALENDAR_KNOB,\n        style: {\n          height: agendaHeight + KNOB_HEIGHT\n        },\n        onLayout: this.onScrollPadLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if (nextProps.items) {\n        return {\n          firstReservationLoad: false\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Agenda;\n}(Component);\n\nAgenda.displayName = 'Agenda';\nAgenda.propTypes = _objectSpread(_objectSpread(_objectSpread({}, CalendarList.propTypes), ReservationList.propTypes), {}, {\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n  items: PropTypes.object,\n  loadItemsForMonth: PropTypes.func,\n  onCalendarToggled: PropTypes.func,\n  onDayPress: PropTypes.func,\n  onDayChange: PropTypes.func,\n  renderKnob: PropTypes.func,\n  selected: PropTypes.any,\n  hideKnob: PropTypes.bool,\n  showClosingKnob: PropTypes.bool\n});\nexport { Agenda as default };","map":{"version":3,"sources":["/app/node_modules/react-native-calendars/src/agenda/index.js"],"names":["_","PropTypes","XDate","memoize","React","Component","extractComponentProps","parseDate","xdateToData","toMarkingFormat","weekDayNames","sameDate","sameMonth","AGENDA_CALENDAR_KNOB","VelocityTracker","styleConstructor","CalendarList","ReservationList","HEADER_HEIGHT","KNOB_HEIGHT","Agenda","props","scrollPad","createRef","calendar","knob","list","initialScrollPadPosition","Math","max","viewHeight","setScrollPadPosition","y","animated","current","scrollTo","x","getNode","toggleCalendarPosition","open","maxY","enableCalendarScrolling","chooseDayFromCalendar","d","chooseDay","state","calendarScrollable","generateMarkings","selectedDay","markedDates","items","Object","keys","forEach","key","length","marked","selected","onScrollPadLayout","setTimeout","setState","calendarIsReady","onCalendarListLayout","scrollToDay","clone","calendarOffset","onLayout","event","nativeEvent","layout","height","viewWidth","width","forceUpdate","onTouchStart","headerState","setNativeProps","style","opacity","onTouchEnd","isOpen","onStartDrag","knobTracker","reset","onSnapAfterDrag","e","currentY","contentOffset","add","projectedY","estimateSpeed","snapY","onVisibleMonthsChange","months","invoke","firstReservationLoad","clearTimeout","scrollTimeout","_isMounted","onDayChange","day","newDate","withAnimation","renderWeekDaysNames","weekDaysNames","map","index","weekday","renderWeekNumbersSpace","showWeekNumbers","theme","windowSize","Dimensions","get","undefined","scrollY","Animated","Value","topDay","currentMonth","addListener","value","loadReservations","removeAllListeners","prevProps","enable","optimisticScroll","reservationListProps","shouldHideExtraDays","hideExtraDays","calendarListProps","showClosingKnob","hideKnob","renderKnob","knobContainer","knobView","firstDay","testID","agendaHeight","weekdaysStyle","weekdays","interpolate","inputRange","outputRange","extrapolate","transform","translateY","headerTranslate","contentTranslate","headerStyle","header","bottom","push","openCalendarScrollPadPosition","shouldAllowDragging","scrollPadPosition","scrollPadStyle","top","left","container","reservations","renderReservations","animatedContainer","renderCalendarList","useNativeDriver","nextProps","displayName","propTypes","oneOfType","object","array","number","loadItemsForMonth","func","onCalendarToggled","onDayPress","any","bool"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport { Text, View, Dimensions, Animated } from 'react-native';\n// @ts-expect-error\nimport { extractComponentProps } from '../component-updater.js';\n// @ts-expect-error\nimport { parseDate, xdateToData, toMarkingFormat } from '../interface';\n// @ts-expect-error\nimport { weekDayNames, sameDate, sameMonth } from '../dateutils';\n// @ts-expect-error\nimport { AGENDA_CALENDAR_KNOB } from '../testIDs';\n// @ts-expect-error\nimport { VelocityTracker } from '../input';\nimport styleConstructor from './style';\nimport CalendarList from '../calendar-list';\nimport ReservationList from './reservation-list';\nconst HEADER_HEIGHT = 104;\nconst KNOB_HEIGHT = 24;\n/**\n * @description: Agenda component\n * @extends: CalendarList\n * @extendslink: docs/CalendarList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/agenda.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/agenda.gif\n */\nexport default class Agenda extends Component {\n    static displayName = 'Agenda';\n    static propTypes = {\n        ...CalendarList.propTypes,\n        ...ReservationList.propTypes,\n        /** agenda container style */\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n        /** the list of items that have to be displayed in agenda. If you want to render item as empty date\n         the value of date key has to be an empty array []. If there exists no value for date key it is\n         considered that the date in question is not yet loaded */\n        items: PropTypes.object,\n        /** callback that gets called when items for a certain month should be loaded (month became visible) */\n        loadItemsForMonth: PropTypes.func,\n        /** callback that fires when the calendar is opened or closed */\n        onCalendarToggled: PropTypes.func,\n        /** callback that gets called on day press */\n        onDayPress: PropTypes.func,\n        /** callback that gets called when day changes while scrolling agenda list */\n        onDayChange: PropTypes.func,\n        /** specify how agenda knob should look like */\n        renderKnob: PropTypes.func,\n        /** initially selected day */\n        selected: PropTypes.any,\n        /** Hide knob button. Default = false */\n        hideKnob: PropTypes.bool,\n        /** When `true` and `hideKnob` prop is `false`, the knob will always be visible and the user will be able to drag the knob up and close the calendar. Default = false */\n        showClosingKnob: PropTypes.bool\n    };\n    style;\n    viewHeight;\n    viewWidth;\n    scrollTimeout;\n    headerState;\n    currentMonth;\n    knobTracker;\n    _isMounted;\n    scrollPad = React.createRef();\n    calendar = React.createRef();\n    knob = React.createRef();\n    list = React.createRef();\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n        const windowSize = Dimensions.get('window');\n        this.viewHeight = windowSize.height;\n        this.viewWidth = windowSize.width;\n        this.scrollTimeout = undefined;\n        this.headerState = 'idle';\n        this.state = {\n            scrollY: new Animated.Value(0),\n            calendarIsReady: false,\n            calendarScrollable: false,\n            firstReservationLoad: false,\n            selectedDay: parseDate(props.selected) || new XDate(true),\n            topDay: parseDate(props.selected) || new XDate(true)\n        };\n        this.currentMonth = this.state.selectedDay.clone();\n        this.knobTracker = new VelocityTracker();\n        this.state.scrollY.addListener(({ value }) => this.knobTracker.add(value));\n    }\n    componentDidMount() {\n        this._isMounted = true;\n        this.loadReservations(this.props);\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n        this.state.scrollY.removeAllListeners();\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.selected && !sameDate(parseDate(this.props.selected), parseDate(prevProps.selected))) {\n            this.setState({ selectedDay: parseDate(this.props.selected) });\n        }\n        else if (!prevProps.items) {\n            this.loadReservations(this.props);\n        }\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.items) {\n            return { firstReservationLoad: false };\n        }\n        return null;\n    }\n    calendarOffset() {\n        return 96 - this.viewHeight / 2;\n    }\n    initialScrollPadPosition = () => {\n        return Math.max(0, this.viewHeight - HEADER_HEIGHT);\n    };\n    setScrollPadPosition = (y, animated) => {\n        if (this.scrollPad?.current?.scrollTo) {\n            this.scrollPad.current.scrollTo({ x: 0, y, animated });\n        }\n        else {\n            // Support for RN O.61 (Expo 37)\n            this.scrollPad?.current?.getNode().scrollTo({ x: 0, y, animated });\n        }\n    };\n    toggleCalendarPosition = (open) => {\n        const maxY = this.initialScrollPadPosition();\n        this.setScrollPadPosition(open ? 0 : maxY, true);\n        this.enableCalendarScrolling(open);\n    };\n    enableCalendarScrolling(enable = true) {\n        this.setState({\n            calendarScrollable: enable\n        });\n        _.invoke(this.props, 'onCalendarToggled', enable);\n        // Enlarge calendarOffset here as a workaround on iOS to force repaint.\n        // Otherwise the month after current one or before current one remains invisible.\n        // The problem is caused by overflow: 'hidden' style, which we need for dragging\n        // to be performant.\n        // Another working solution for this bug would be to set removeClippedSubviews={false}\n        // in CalendarList listView, but that might impact performance when scrolling\n        // month list in expanded CalendarList.\n        // Further info https://github.com/facebook/react-native/issues/1831\n        this.calendar?.current?.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n    }\n    loadReservations(props) {\n        if ((!props.items || !Object.keys(props.items).length) && !this.state.firstReservationLoad) {\n            this.setState({\n                firstReservationLoad: true\n            }, () => {\n                _.invoke(this.props, 'loadItemsForMonth', xdateToData(this.state.selectedDay));\n            });\n        }\n    }\n    chooseDayFromCalendar = (d) => {\n        this.chooseDay(d, !this.state.calendarScrollable);\n    };\n    chooseDay(d, optimisticScroll) {\n        const day = parseDate(d);\n        this.setState({\n            calendarScrollable: false,\n            selectedDay: day.clone()\n        });\n        _.invoke(this.props, 'onCalendarToggled', false);\n        if (!optimisticScroll) {\n            this.setState({\n                topDay: day.clone()\n            });\n        }\n        this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n        this.calendar?.current?.scrollToDay(day, this.calendarOffset(), true);\n        _.invoke(this.props, 'loadItemsForMonth', xdateToData(day));\n        _.invoke(this.props, 'onDayPress', xdateToData(day));\n    }\n    generateMarkings = memoize((selectedDay, markedDates, items = {}) => {\n        if (!markedDates) {\n            markedDates = {};\n            Object.keys(items).forEach(key => {\n                if (items[key] && items[key].length) {\n                    markedDates[key] = { marked: true };\n                }\n            });\n        }\n        const key = toMarkingFormat(selectedDay);\n        return { ...markedDates, [key]: { ...(markedDates[key] || {}), ...{ selected: true } } };\n    });\n    onScrollPadLayout = () => {\n        // When user touches knob, the actual component that receives touch events is a ScrollView.\n        // It needs to be scrolled to the bottom, so that when user moves finger downwards,\n        // scroll position actually changes (it would stay at 0, when scrolled to the top).\n        this.setScrollPadPosition(this.initialScrollPadPosition(), false);\n        // delay rendering calendar in full height because otherwise it still flickers sometimes\n        setTimeout(() => this.setState({ calendarIsReady: true }), 0);\n    };\n    onCalendarListLayout = () => {\n        this.calendar?.current?.scrollToDay(this.state.selectedDay.clone(), this.calendarOffset(), false);\n    };\n    onLayout = (event) => {\n        this.viewHeight = event.nativeEvent.layout.height;\n        this.viewWidth = event.nativeEvent.layout.width;\n        this.forceUpdate();\n    };\n    onTouchStart = () => {\n        this.headerState = 'touched';\n        this.knob?.current?.setNativeProps({ style: { opacity: 0.5 } });\n    };\n    onTouchEnd = () => {\n        this.knob?.current?.setNativeProps({ style: { opacity: 1 } });\n        if (this.headerState === 'touched') {\n            const isOpen = this.state.calendarScrollable;\n            this.toggleCalendarPosition(!isOpen);\n        }\n        this.headerState = 'idle';\n    };\n    onStartDrag = () => {\n        this.headerState = 'dragged';\n        this.knobTracker.reset();\n    };\n    onSnapAfterDrag = (e) => {\n        // on Android onTouchEnd is not called if dragging was started\n        this.onTouchEnd();\n        const currentY = e.nativeEvent.contentOffset.y;\n        this.knobTracker.add(currentY);\n        const projectedY = currentY + this.knobTracker.estimateSpeed() * 250; /*ms*/\n        const maxY = this.initialScrollPadPosition();\n        const snapY = projectedY > maxY / 2 ? maxY : 0;\n        this.setScrollPadPosition(snapY, true);\n        this.enableCalendarScrolling(snapY === 0);\n    };\n    onVisibleMonthsChange = (months) => {\n        _.invoke(this.props, 'onVisibleMonthsChange', months);\n        if (this.props.items && !this.state.firstReservationLoad) {\n            clearTimeout(this.scrollTimeout);\n            this.scrollTimeout = setTimeout(() => {\n                if (this._isMounted) {\n                    _.invoke(this.props, 'loadItemsForMonth', months[0]);\n                }\n            }, 200);\n        }\n    };\n    onDayChange = (day) => {\n        const newDate = parseDate(day);\n        const withAnimation = sameMonth(newDate, this.state.selectedDay);\n        this.calendar?.current?.scrollToDay(day, this.calendarOffset(), withAnimation);\n        this.setState({\n            selectedDay: newDate\n        });\n        _.invoke(this.props, 'onDayChange', xdateToData(newDate));\n    };\n    renderReservations() {\n        const reservationListProps = extractComponentProps(ReservationList, this.props);\n        return (<ReservationList {...reservationListProps} ref={this.list} reservations={this.props.items} selectedDay={this.state.selectedDay} topDay={this.state.topDay} onDayChange={this.onDayChange} onScroll={() => { }}/>);\n    }\n    renderCalendarList() {\n        const { markedDates, items } = this.props;\n        const shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n        const calendarListProps = extractComponentProps(CalendarList, this.props);\n        return (<CalendarList {...calendarListProps} ref={this.calendar} current={this.currentMonth} markedDates={this.generateMarkings(this.state.selectedDay, markedDates, items)} calendarWidth={this.viewWidth} scrollEnabled={this.state.calendarScrollable} hideExtraDays={shouldHideExtraDays} onLayout={this.onCalendarListLayout} onDayPress={this.chooseDayFromCalendar} onVisibleMonthsChange={this.onVisibleMonthsChange}/>);\n    }\n    renderKnob() {\n        const { showClosingKnob, hideKnob, renderKnob } = this.props;\n        let knob = <View style={this.style.knobContainer}/>;\n        if (!hideKnob) {\n            const knobView = renderKnob ? renderKnob() : <View style={this.style.knob}/>;\n            knob = !this.state.calendarScrollable || showClosingKnob ? (<View style={this.style.knobContainer}>\n          <View ref={this.knob}>{knobView}</View>\n        </View>) : null;\n        }\n        return knob;\n    }\n    renderWeekDaysNames = memoize((weekDaysNames) => {\n        return weekDaysNames.map((day, index) => (<Text allowFontScaling={false} key={day + index} style={this.style.weekday} numberOfLines={1}>\n        {day}\n      </Text>));\n    });\n    renderWeekNumbersSpace = () => {\n        return this.props.showWeekNumbers && <View style={this.style.weekday}/>;\n    };\n    render() {\n        const { firstDay, hideKnob, style, testID } = this.props;\n        const weekDaysNames = weekDayNames(firstDay);\n        const agendaHeight = this.initialScrollPadPosition();\n        const weekdaysStyle = [\n            this.style.weekdays,\n            {\n                opacity: this.state.scrollY.interpolate({\n                    inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n                    outputRange: [0, 1],\n                    extrapolate: 'clamp'\n                }),\n                transform: [\n                    {\n                        translateY: this.state.scrollY.interpolate({\n                            inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n                            outputRange: [-HEADER_HEIGHT, 0],\n                            extrapolate: 'clamp'\n                        })\n                    }\n                ]\n            }\n        ];\n        const headerTranslate = this.state.scrollY.interpolate({\n            inputRange: [0, agendaHeight],\n            outputRange: [agendaHeight, 0],\n            extrapolate: 'clamp'\n        });\n        const contentTranslate = this.state.scrollY.interpolate({\n            inputRange: [0, agendaHeight],\n            outputRange: [0, agendaHeight / 2],\n            extrapolate: 'clamp'\n        });\n        const headerStyle = [\n            this.style.header,\n            {\n                bottom: agendaHeight,\n                transform: [{ translateY: headerTranslate }]\n            }\n        ];\n        if (!this.state.calendarIsReady) {\n            // limit header height until everything is setup for calendar dragging\n            headerStyle.push({ height: 0 });\n            // fill header with appStyle.calendarBackground background to reduce flickering\n            weekdaysStyle.push({ height: HEADER_HEIGHT });\n        }\n        const openCalendarScrollPadPosition = !hideKnob && this.state.calendarScrollable && this.props.showClosingKnob ? agendaHeight + HEADER_HEIGHT : 0;\n        const shouldAllowDragging = !hideKnob && !this.state.calendarScrollable;\n        const scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : openCalendarScrollPadPosition) - KNOB_HEIGHT;\n        const scrollPadStyle = {\n            height: KNOB_HEIGHT,\n            top: scrollPadPosition,\n            left: (this.viewWidth - 80) / 2\n        };\n        return (<View testID={testID} onLayout={this.onLayout} style={[style, this.style.container]}>\n        <View style={this.style.reservations}>{this.renderReservations()}</View>\n        <Animated.View style={headerStyle}>\n          <Animated.View style={[this.style.animatedContainer, { transform: [{ translateY: contentTranslate }] }]}>\n            {this.renderCalendarList()}\n          </Animated.View>\n          {this.renderKnob()}\n        </Animated.View>\n        <Animated.View style={weekdaysStyle}>\n          {this.renderWeekNumbersSpace()}\n          {this.renderWeekDaysNames(weekDaysNames)}\n        </Animated.View>\n        <Animated.ScrollView ref={this.scrollPad} style={[this.style.scrollPadStyle, scrollPadStyle]} overScrollMode=\"never\" showsHorizontalScrollIndicator={false} showsVerticalScrollIndicator={false} scrollEventThrottle={8} scrollsToTop={false} onTouchStart={this.onTouchStart} onTouchEnd={this.onTouchEnd} onScrollBeginDrag={this.onStartDrag} onScrollEndDrag={this.onSnapAfterDrag} onScroll={Animated.event([{ nativeEvent: { contentOffset: { y: this.state.scrollY } } }], { useNativeDriver: true })}>\n          <View testID={AGENDA_CALENDAR_KNOB} style={{ height: agendaHeight + KNOB_HEIGHT }} onLayout={this.onScrollPadLayout}/>\n        </Animated.ScrollView>\n      </View>);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}