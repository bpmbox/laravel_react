{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/app/examples/8-stopwatch/StopWatch.js\";\nimport React, { useState, useRef, useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Constants from \"expo-constants\";\nimport Result from \"./Result\";\nimport Control from \"./Control\";\nimport { displayTime } from \"./util\";\nexport default function StopWatch() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRunning = _useState4[0],\n      setRunning = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      results = _useState6[0],\n      setResults = _useState6[1];\n\n  var timer = useRef(null);\n  var handleLeftButtonPress = useCallback(function () {\n    if (isRunning) {\n      setResults(function (previousResults) {\n        return [time].concat(_toConsumableArray(previousResults));\n      });\n    } else {\n      alert(\"sssss\");\n      setResults([]);\n      setTime(0);\n    }\n  }, [isRunning]);\n  var handleRightButtonPress = useCallback(function () {\n    if (!isRunning) {\n      var interval = setInterval(function () {\n        setTime(function (previousTime) {\n          return previousTime + 1;\n        });\n      }, 10);\n      timer.current = interval;\n    } else {\n      clearInterval(timer.current);\n    }\n\n    setRunning(function (previousState) {\n      return !previousState;\n    });\n  }, [isRunning]);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.display,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.displayText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, displayTime(time))), React.createElement(View, {\n    style: styles.control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(Control, {\n    isRunning: isRunning,\n    handleLeftButtonPress: handleLeftButtonPress,\n    handleRightButtonPress: handleRightButtonPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.result,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Result, {\n    results: results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    paddingTop: Constants.statusBarHeight\n  },\n  display: {\n    flex: 3 / 5,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  displayText: {\n    color: \"#fff\",\n    fontSize: 70,\n    fontWeight: \"200\",\n    fontFamily: Platform.OS === \"ios\" ? \"Helvetica Neue\" : null\n  },\n  control: {\n    height: 70,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  result: {\n    flex: 2 / 5\n  }\n});","map":{"version":3,"sources":["/app/examples/8-stopwatch/StopWatch.js"],"names":["React","useState","useRef","useCallback","StatusBar","Constants","Result","Control","displayTime","StopWatch","time","setTime","isRunning","setRunning","results","setResults","timer","handleLeftButtonPress","previousResults","alert","handleRightButtonPress","interval","setInterval","previousTime","current","clearInterval","previousState","styles","container","display","displayText","control","result","StyleSheet","create","flex","backgroundColor","paddingTop","statusBarHeight","justifyContent","alignItems","color","fontSize","fontWeight","fontFamily","Platform","OS","height","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\nimport { StyleSheet, SafeAreaView, Text, View, Platform } from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Constants from \"expo-constants\";\nimport Result from \"./Result\";\nimport Control from \"./Control\";\nimport { displayTime } from \"./util\";\n\nexport default function StopWatch() {\n  const [time, setTime] = useState(0);\n  const [isRunning, setRunning] = useState(false);\n  const [results, setResults] = useState([]);\n  const timer = useRef(null);\n\n  // https://reactjs.org/docs/hooks-reference.html#usecallback\n  const handleLeftButtonPress = useCallback(() => {\n    if (isRunning) {\n      setResults((previousResults) => [time, ...previousResults]);\n    } else {\n      alert(\"sssss\")\n      setResults([]);\n      setTime(0);\n    }\n  }, [isRunning]);\n\n  const handleRightButtonPress = useCallback(() => {\n    if (!isRunning) {\n      const interval = setInterval(() => {\n        setTime((previousTime) => previousTime + 1);\n      }, 10);\n\n      timer.current = interval;\n    } else {\n      clearInterval(timer.current);\n    }\n\n    setRunning((previousState) => !previousState);\n  }, [isRunning]);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar style=\"light\" />\n\n      <View style={styles.display}>\n        <Text style={styles.displayText}>{displayTime(time)}</Text>\n      </View>\n\n      <View style={styles.control}>\n        <Control\n          isRunning={isRunning}\n          handleLeftButtonPress={handleLeftButtonPress}\n          handleRightButtonPress={handleRightButtonPress}\n        />\n      </View>\n\n      <View style={styles.result}>\n        <Result results={results} />\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    paddingTop: Constants.statusBarHeight,\n  },\n  display: {\n    flex: 3 / 5,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  displayText: {\n    color: \"#fff\",\n    fontSize: 70,\n    fontWeight: \"200\",\n    fontFamily: Platform.OS === \"ios\" ? \"Helvetica Neue\" : null,\n  },\n  control: {\n    height: 70,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n  },\n  result: { flex: 2 / 5 },\n});\n"]},"metadata":{},"sourceType":"module"}