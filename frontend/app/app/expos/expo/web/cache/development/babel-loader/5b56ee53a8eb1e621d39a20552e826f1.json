{"ast":null,"code":"var _jsxFileName = \"/app/examples/apitest/index.js\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Constants from 'expo-constants';\nimport { Card } from 'react-native-paper';\nexport default function Apitest() {\n  var query1 = \"\\n query test($id:JSONString!){\\n  vwsearchFeature(jsonInput:$id){\\n    value\\n    featureType\\n    spaceId\\n  }\\n} \";\n  var qa = {\n    \"spaceid\": \"814e1aa3-d128-4d3f-9054-501975030e2d\",\n    \"name\": \"ddd\",\n    \"name2\": \"ddd\"\n  };\n  var sq = JSON.stringify(qa);\n  var val1 = {\n    \"id\": sq\n  };\n  var query2 = \"\\n query test($id:JSONString!){\\n  vwsearchroom(jsonInput:$id){\\n\\t\\troomId\\n    workspaceId\\n    workspaceName\\n    workplaceId\\n    workspaceName\\n    startTime\\n    endTime\\n    postCode\\n    prefectures\\n    address\\n    buildingName\\n    latitude\\n    longitude\\n    roomSet{\\n      roomName\\n      id\\n      roomId\\n      workspaceId\\n      workplaceId\\n      featureSet{\\n        featureId\\n        roomId\\n        value\\n        featureType\\n      }\\n    }\\n  }\\n}\\n\";\n  var test = {\n    \"room_id\": \"7be5cc3c-5c29-4116-906f-25e1462e7bfe\",\n    \"workplace_id\": \"c3a52999-6cb1-4850-bc6a-48316a648cd8\",\n    \"space_id\": \"4223c88c-fe49-4013-aa2b-e984b8a19bc7\"\n  };\n  var sq1 = JSON.stringify(test);\n  var val2 = {\n    \"id\": JSON.stringify(test)\n  };\n  var query3 = \"\\n query test($id:JSONString!){\\n  vwsearchroom(jsonInput:$id){\\n\\t\\troomId\\n    workspaceId\\n    workspaceName\\n    workplaceId\\n    workspaceName\\n    startTime\\n    endTime\\n    postCode\\n    prefectures\\n    address\\n    buildingName\\n    latitude\\n    longitude\\n    roomSet{\\n      roomName\\n      id\\n      roomId\\n      workspaceId\\n      workplaceId\\n      featureSet{\\n        featureId\\n        roomId\\n        value\\n        featureType\\n      }\\n    }\\n  }\\n}\\n//\\u691C\\u7D22\\u30C7\\u30FC\\u30BF\\u3092\\u5909\\u66F4\\u3059\\u308C\\u3070\\u81EA\\u52D5\\u3067\\u691C\\u7D22\\u304C\\u5909\\u308F\\u308A\\u307E\\u3059\";\n  var qa3 = {\n    \"space_id\": \"51011eaa-8991-4276-a881-a9a12e59fb8a\",\n    \"workplace_id\": \"51011eaa-8991-4276-a881-a9a12e59fb8a\",\n    \"workplace_name\": \"51011eaa-8991-4276-a881-a9a12e59fb8a\",\n    \"workplace_name_with_fuature\": \"51011eaa-8991-4276-a881-a9a12e59fb8a\",\n    \"wcapacity\": \"51011eaa-8991-4276-a881-a9a12e59fb8a\"\n  };\n  var sq3 = JSON.stringify(test);\n  var val3 = {\n    \"id\": sq3\n  };\n  console.log(val3);\n  var result = fetch(\"https://api.dreamso.net/graphql\", {\n    \"headers\": {\n      \"accept\": \"*/*\",\n      \"accept-language\": \"en-GB,en-US;q=0.9,en;q=0.8\",\n      \"content-type\": \"application/json\"\n    },\n    \"referrer\": \"https://api.dreamso.net/graphql\",\n    \"referrerPolicy\": \"strict-origin-when-cross-origin\",\n    \"operationName\": \"\",\n    \"variables\": {},\n    body: JSON.stringify({\n      query: query2,\n      variables: val2\n    }),\n    \"method\": \"POST\",\n    \"mode\": \"cors\"\n  }).then(function (res) {\n    return res.json();\n  }).then(function (result) {\n    console.log(\"//----------------------\");\n    console.log(JSON.stringify(result));\n    console.log(\"//-----------------------\");\n    console.log(result[\"data\"][\"vwsearchroom\"].length);\n    var i = 0;\n    console.log(\"startlllll\");\n\n    for (i = 0; i <= result[\"data\"][\"vwsearchroom\"].length; i++) {\n      console.log(\"start\");\n      console.log(result[\"data\"][\"vwsearchroom\"][i].workspaceId);\n      console.log(result[\"data\"][\"vwsearchroom\"][i].featureType);\n      console.log(result[\"data\"][\"vwsearchroom\"][i].value);\n    }\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.paragraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, \"Change code in the editor and watch it change on your phone! Save to get a shareable url.\"), React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/app/examples/apitest/index.js"],"names":["React","Constants","Card","Apitest","query1","qa","sq","JSON","stringify","val1","query2","test","sq1","val2","query3","qa3","sq3","val3","console","log","result","fetch","body","query","variables","then","res","json","length","i","workspaceId","featureType","value","styles","container","paragraph","StyleSheet","create","flex","justifyContent","paddingTop","statusBarHeight","backgroundColor","padding","margin","fontSize","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Text, View, StyleSheet } from 'react-native';\r\nimport Constants from 'expo-constants';\r\n// You can import from local files\r\n\r\n// or any pure javascript modules available in npm\r\nimport { Card } from 'react-native-paper';\r\n\r\nexport default function Apitest() {\r\n//特徴検索設定\r\n const query1 = `\r\n query test($id:JSONString!){\r\n  vwsearchFeature(jsonInput:$id){\r\n    value\r\n    featureType\r\n    spaceId\r\n  }\r\n} `\r\n\r\n/*\r\n検索用クエリー\r\n{\r\n  \"spaceid\":  \"{\\\"test\\\":\\\"51011eaa-8991-4276-a881-a9a12e59fb8a\\\",\\\"name\\\": \\\"51011eaa-8991-4276-a881-a9a12e59fb8a\\\",\\\"name2\\\": \\\"51011eaa-8991-4276-a881-a9a12e59fb8a\\\"}\"\r\n\r\n}\r\n*/\r\nconst qa = {\r\n  \"spaceid\":\"814e1aa3-d128-4d3f-9054-501975030e2d\",\r\n  \"name\":\"ddd\",\r\n  \"name2\":\"ddd\"\r\n}\r\n\r\nconst sq = JSON.stringify(qa)\r\nconst val1 = {\r\n \"id\": sq\r\n}\r\n/**  \r\n * ルーム詳細検索設定\r\n */\r\n\r\n//検索クエリー\r\nconst query2 = `\r\n query test($id:JSONString!){\r\n  vwsearchroom(jsonInput:$id){\r\n\t\troomId\r\n    workspaceId\r\n    workspaceName\r\n    workplaceId\r\n    workspaceName\r\n    startTime\r\n    endTime\r\n    postCode\r\n    prefectures\r\n    address\r\n    buildingName\r\n    latitude\r\n    longitude\r\n    roomSet{\r\n      roomName\r\n      id\r\n      roomId\r\n      workspaceId\r\n      workplaceId\r\n      featureSet{\r\n        featureId\r\n        roomId\r\n        value\r\n        featureType\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n/*\r\n{\r\n  \"id\":  \"{\\\"test\\\":\\\"51011eaa-8991-4276-a881-a9a12e59fb8a\\\",\\\"workplace_id\\\": \\\"51011eaa-8991-4276-a881-a9a12e59fb8a\\\",\\\"name2\\\": \\\"51011eaa-8991-4276-a881-a9a12e59fb8a\\\"}\"\r\n\r\n}\r\n*/\r\n////////////////\r\nconst test = {\r\n  \"room_id\":\"7be5cc3c-5c29-4116-906f-25e1462e7bfe\",\r\n  \"workplace_id\":\"c3a52999-6cb1-4850-bc6a-48316a648cd8\",\r\n  \"space_id\": \"4223c88c-fe49-4013-aa2b-e984b8a19bc7\"\r\n  }\r\n\r\nconst sq1 = JSON.stringify(test)\r\n\r\n\r\n/*\r\n      \r\nconst val2 = {\r\n  \"id\": sq1 ///\r\n}.*/\r\n\r\n\r\n    const val2 = {\r\n      \"id\": JSON.stringify(test),\r\n    }\r\n\r\n\r\n//ルーム検索\r\nconst query3 = `\r\n query test($id:JSONString!){\r\n  vwsearchroom(jsonInput:$id){\r\n\t\troomId\r\n    workspaceId\r\n    workspaceName\r\n    workplaceId\r\n    workspaceName\r\n    startTime\r\n    endTime\r\n    postCode\r\n    prefectures\r\n    address\r\n    buildingName\r\n    latitude\r\n    longitude\r\n    roomSet{\r\n      roomName\r\n      id\r\n      roomId\r\n      workspaceId\r\n      workplaceId\r\n      featureSet{\r\n        featureId\r\n        roomId\r\n        value\r\n        featureType\r\n      }\r\n    }\r\n  }\r\n}\r\n//検索データを変更すれば自動で検索が変わります`\r\nconst qa3 = {\r\n  \"space_id\":\"51011eaa-8991-4276-a881-a9a12e59fb8a\",\r\n  \"workplace_id\":\"51011eaa-8991-4276-a881-a9a12e59fb8a\",\r\n  \"workplace_name\": \"51011eaa-8991-4276-a881-a9a12e59fb8a\",\r\n  \"workplace_name_with_fuature\": \"51011eaa-8991-4276-a881-a9a12e59fb8a\",\r\n  \"wcapacity\": \"51011eaa-8991-4276-a881-a9a12e59fb8a\"\r\n  }\r\n\r\nconst sq3 = JSON.stringify(test)\r\n   \r\nconst val3 = {\r\n  \"id\": sq3 \r\n}\r\n\r\nconsole.log(val3)\r\n\r\n/**\r\n * 検索に”　が付くとエラーになるので　variavle の方にデータを設定\r\n */\r\n const result = fetch(\"https://api.dreamso.net/graphql\", {\r\n  \"headers\": {\r\n    \"accept\": \"*/*\",\r\n    \"accept-language\": \"en-GB,en-US;q=0.9,en;q=0.8\",\r\n    \"content-type\": \"application/json\"\r\n  },\r\n  \"referrer\": \"https://api.dreamso.net/graphql\",\r\n  \"referrerPolicy\": \"strict-origin-when-cross-origin\",\r\n  \"operationName\":\"\",\r\n  \"variables\":{},\r\n  body: JSON.stringify({\r\n    query: query2,\r\n    variables: val2,\r\n  }),\r\n  \"method\": \"POST\",\r\n  \"mode\": \"cors\"\r\n}).then((res) => res.json())\r\n  .then((result) => {\r\n    //console.dir(result);\r\n    console.log(\"//----------------------\")\r\n    console.log(JSON.stringify(result))//[\"data\"][\"vwsearchroom\"]))\r\n    console.log(\"//-----------------------\")\r\n    console.log(result[\"data\"][\"vwsearchroom\"].length)\r\n    let i = 0;\r\n    console.log(\"startlllll\")\r\n    for(i=0;i<=result[\"data\"][\"vwsearchroom\"].length;i++){\r\n      console.log(\"start\")\r\n      console.log(result[\"data\"][\"vwsearchroom\"][i].workspaceId)\r\n      console.log(result[\"data\"][\"vwsearchroom\"][i].featureType)\r\n      console.log(result[\"data\"][\"vwsearchroom\"][i].value)\r\n      \r\n      \r\n    }\r\n    });\r\n\r\n////\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.paragraph}>\r\n        Change code in the editor and watch it change on your phone! Save to get a shareable url.\r\n      </Text>\r\n      <Card>\r\n      \r\n      </Card>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingTop: Constants.statusBarHeight,\r\n    backgroundColor: '#ecf0f1',\r\n    padding: 8,\r\n  },\r\n  paragraph: {\r\n    margin: 24,\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}