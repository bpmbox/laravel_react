{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/app/examples/3-the-light/2.TrafficLight.js\";\nimport React, { useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Constants from \"expo-constants\";\nimport trafficLight from \"../../assets/the-light/traffic-light.png\";\nimport trafficLightGreen from \"../../assets/the-light/traffic-light-green.png\";\nimport trafficLightYellow from \"../../assets/the-light/traffic-light-yellow.png\";\nimport trafficLightRed from \"../../assets/the-light/traffic-light-red.png\";\nexport default function TrafficLight() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var imageSource = trafficLight;\n\n  if (color === \"red\") {\n    imageSource = trafficLightRed;\n  } else if (color === \"yellow\") {\n    imageSource = trafficLightYellow;\n  } else if (color === \"green\") {\n    imageSource = trafficLightGreen;\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(Image, {\n    fadeDuration: 0,\n    source: imageSource,\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.buttonGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: [styles.button, {\n      backgroundColor: \"#ce0100\"\n    }],\n    underlayColor: \"#9b0100\",\n    onPress: function onPress() {\n      return setColor(\"red\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Red\")), React.createElement(TouchableHighlight, {\n    style: [styles.button, {\n      backgroundColor: \"#ff8300\"\n    }],\n    underlayColor: \"#cc6900\",\n    onPress: function onPress() {\n      return setColor(\"yellow\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Yellow\")), React.createElement(TouchableHighlight, {\n    style: [styles.button, {\n      backgroundColor: \"#54a111\"\n    }],\n    underlayColor: \"#3c730c\",\n    onPress: function onPress() {\n      return setColor(\"green\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Green\"))));\n}\nvar screenHeight = Dimensions.get(\"window\").height;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    paddingTop: Constants.statusBarHeight\n  },\n  image: {\n    maxWidth: \"100%\",\n    maxHeight: screenHeight - Constants.statusBarHeight - 150,\n    resizeMode: \"contain\",\n    marginBottom: 20\n  },\n  buttonGroup: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\"\n  },\n  button: {\n    width: 80,\n    paddingVertical: 8,\n    borderRadius: 4,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["/app/examples/3-the-light/2.TrafficLight.js"],"names":["React","useState","StatusBar","Constants","trafficLight","trafficLightGreen","trafficLightYellow","trafficLightRed","TrafficLight","color","setColor","imageSource","styles","container","image","buttonGroup","button","backgroundColor","buttonText","screenHeight","Dimensions","get","height","StyleSheet","create","flex","paddingTop","statusBarHeight","maxWidth","maxHeight","resizeMode","marginBottom","flexDirection","justifyContent","width","paddingVertical","borderRadius","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  StyleSheet,\n  SafeAreaView,\n  View,\n  Text,\n  Image,\n  TouchableHighlight,\n} from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Constants from \"expo-constants\";\nimport trafficLight from \"../../assets/the-light/traffic-light.png\";\nimport trafficLightGreen from \"../../assets/the-light/traffic-light-green.png\";\nimport trafficLightYellow from \"../../assets/the-light/traffic-light-yellow.png\";\nimport trafficLightRed from \"../../assets/the-light/traffic-light-red.png\";\n\nexport default function TrafficLight() {\n  const [color, setColor] = useState(\"\");\n\n  let imageSource = trafficLight;\n  if (color === \"red\") {\n    imageSource = trafficLightRed;\n  } else if (color === \"yellow\") {\n    imageSource = trafficLightYellow;\n  } else if (color === \"green\") {\n    imageSource = trafficLightGreen;\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar style=\"light\" />\n\n      <Image fadeDuration={0} source={imageSource} style={styles.image} />\n\n      <View style={styles.buttonGroup}>\n        {/* https://reactnative.dev/docs/touchablehighlight */\n        /*fucntion TouchableHighlight(style.unde,onperess objectも対応だからややこしい*/\n        /*setstatde で色を設定*/\n        }\n        <TouchableHighlight\n          style={[styles.button, { backgroundColor: \"#ce0100\" }]}\n          underlayColor=\"#9b0100\"\n          onPress={() => setColor(\"red\")}\n        >\n          <Text style={styles.buttonText}>Red</Text>\n        </TouchableHighlight>\n\n        <TouchableHighlight\n          style={[styles.button, { backgroundColor: \"#ff8300\" }]}\n          underlayColor=\"#cc6900\"\n          onPress={() => setColor(\"yellow\")}\n        >\n          <Text style={styles.buttonText}>Yellow</Text>\n        </TouchableHighlight>\n\n        <TouchableHighlight\n          style={[styles.button, { backgroundColor: \"#54a111\" }]}\n          underlayColor=\"#3c730c\"\n          onPress={() => setColor(\"green\")}\n        >\n          <Text style={styles.buttonText}>Green</Text>\n        </TouchableHighlight>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst screenHeight = Dimensions.get(\"window\").height;\n\nconst styles = StyleSheet.create({\n  container: {\n    //コメントはかける\n    flex: 1,\n    backgroundColor: \"black\",\n    paddingTop: Constants.statusBarHeight,\n  },\n  image: {\n    maxWidth: \"100%\",\n    maxHeight: screenHeight - Constants.statusBarHeight - 150,\n    resizeMode: \"contain\",\n    marginBottom: 20,\n  },\n  buttonGroup: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n  },\n  button: {\n    width: 80,\n    paddingVertical: 8,\n    borderRadius: 4,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  buttonText: {\n    color: \"#fff\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}