{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useIMGElementProps = useIMGElementProps;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IMGElement = _interopRequireDefault(require(\"../elements/IMGElement\"));\n\nvar _SharedPropsProvider = require(\"../context/SharedPropsProvider\");\n\nvar _useNormalizedUrl = _interopRequireDefault(require(\"../hooks/useNormalizedUrl\"));\n\nvar _RenderersPropsProvider = require(\"../context/RenderersPropsProvider\");\n\nvar _useContentWidth = _interopRequireDefault(require(\"../hooks/useContentWidth\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction useIMGElementProps(props) {\n  var style = props.style,\n      tnode = props.tnode,\n      onPress = props.onPress;\n  var contentWidth = (0, _useContentWidth.default)();\n\n  var _ref = (0, _RenderersPropsProvider.useRendererProps)('img'),\n      initialDimensions = _ref.initialDimensions,\n      enableExperimentalPercentWidth = _ref.enableExperimentalPercentWidth;\n\n  var computeImagesMaxWidth = (0, _SharedPropsProvider.useComputeMaxWidthForTag)('img');\n  var src = tnode.attributes.src || '';\n  return {\n    contentWidth: contentWidth,\n    computeMaxWidth: computeImagesMaxWidth,\n    enableExperimentalPercentWidth: enableExperimentalPercentWidth,\n    initialDimensions: initialDimensions,\n    onPress: onPress,\n    alt: tnode.attributes.alt,\n    testID: 'img',\n    altColor: tnode.styles.nativeTextFlow.color,\n    source: {\n      uri: (0, _useNormalizedUrl.default)(src)\n    },\n    style: style,\n    width: tnode.attributes.width,\n    height: tnode.attributes.height,\n    objectFit: tnode.styles.webBlockRet.objectFit\n  };\n}\n\nvar IMGRenderer = function IMGRenderer(props) {\n  return _react.default.createElement(_IMGElement.default, useIMGElementProps(props));\n};\n\nvar _default = IMGRenderer;\nexports.default = _default;","map":{"version":3,"sources":["IMGRenderer.tsx"],"names":["onPress","contentWidth","enableExperimentalPercentWidth","computeImagesMaxWidth","src","tnode","computeMaxWidth","initialDimensions","alt","testID","altColor","source","uri","style","width","height","objectFit","IMGRenderer","props","React","IMGElement","useIMGElementProps"],"mappings":";;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,0BAAA,CAAA;;AAEA,IAAA,oBAAA,GAAA,OAAA,kCAAA;;AAGA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,6BAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,qCAAA;;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,4BAAA,CAAA;;;;;;;;AAMO,SAAA,kBAAA,CAAA,KAAA,EAEY;AACjB,MAAM,KAAN,GAAA,KAAA,CAAM,KAAN;AAAA,MAAM,KAAN,GAAA,KAAA,CAAM,KAAN;AAAA,MAAsBA,OAAtB,GAAA,KAAA,CAAsBA,OAAtB;AACA,MAAMC,YAAY,GAAG,CAAA,GAAA,gBAAA,CAArB,OAAqB,GAArB;;AACA,aACE,CAAA,GAAA,uBAAA,CAAA,gBAAA,EADF,KACE,CADF;AAAA,MAAM,iBAAN,QAAM,iBAAN;AAAA,MAA2BC,8BAA3B,QAA2BA,8BAA3B;;AAEA,MAAMC,qBAAqB,GAAG,CAAA,GAAA,oBAAA,CAAA,wBAAA,EAA9B,KAA8B,CAA9B;AACA,MAAMC,GAAG,GAAGC,KAAK,CAALA,UAAAA,CAAAA,GAAAA,IAAZ,EAAA;AACA,SAAO;AACLJ,IAAAA,YADK,EACLA,YADK;AAELK,IAAAA,eAAe,EAFV,qBAAA;AAGLJ,IAAAA,8BAHK,EAGLA,8BAHK;AAILK,IAAAA,iBAJK,EAILA,iBAJK;AAKLP,IAAAA,OALK,EAKLA,OALK;AAMLQ,IAAAA,GAAG,EAAEH,KAAK,CAALA,UAAAA,CANA,GAAA;AAOLI,IAAAA,MAAM,EAPD,KAAA;AAQLC,IAAAA,QAAQ,EAAEL,KAAK,CAALA,MAAAA,CAAAA,cAAAA,CARL,KAAA;AASLM,IAAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE,CAAA,GAAA,iBAAA,CAAA,OAAA,EAAA,GAAA;AAAP,KATH;AAULC,IAAAA,KAAK,EAVA,KAAA;AAWLC,IAAAA,KAAK,EAAET,KAAK,CAALA,UAAAA,CAXF,KAAA;AAYLU,IAAAA,MAAM,EAAEV,KAAK,CAALA,UAAAA,CAZH,MAAA;AAaLW,IAAAA,SAAS,EAAEX,KAAK,CAALA,MAAAA,CAAAA,WAAAA,CAAyBW;AAb/B,GAAP;AAeD;;AAED,IAAMC,WAAkC,GAAIC,SAAtCD,WAAsCC,CAAAA,KAAD,EAAW;AACpD,SAAOC,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAAoBC,WAAAA,CAApBD,OAAAA,EAAgCE,kBAAkB,CAAzD,KAAyD,CAAlDF,CAAP;AADF,CAAA;;eAIeF,W","sourcesContent":["import React from 'react';\nimport { TBlock } from '@native-html/transient-render-engine';\nimport IMGElement, { IMGElementProps } from '../elements/IMGElement';\nimport { InternalBlockRenderer } from '../render/render-types';\nimport { useComputeMaxWidthForTag } from '../context/SharedPropsProvider';\nimport { ImageStyle } from 'react-native';\nimport { InternalRendererProps } from '../shared-types';\nimport useNormalizedUrl from '../hooks/useNormalizedUrl';\nimport { useRendererProps } from '../context/RenderersPropsProvider';\nimport useContentWidth from '../hooks/useContentWidth';\n\n/**\n * A hook to produce props consumable by {@link IMGElement} component\n * from custom renderer props.\n */\nexport function useIMGElementProps(\n  props: InternalRendererProps<TBlock>\n): IMGElementProps {\n  const { style, tnode, onPress } = props;\n  const contentWidth = useContentWidth();\n  const { initialDimensions, enableExperimentalPercentWidth } =\n    useRendererProps('img');\n  const computeImagesMaxWidth = useComputeMaxWidthForTag('img');\n  const src = tnode.attributes.src || '';\n  return {\n    contentWidth,\n    computeMaxWidth: computeImagesMaxWidth,\n    enableExperimentalPercentWidth,\n    initialDimensions,\n    onPress,\n    alt: tnode.attributes.alt,\n    testID: 'img',\n    altColor: tnode.styles.nativeTextFlow.color as string,\n    source: { uri: useNormalizedUrl(src) },\n    style: style as ImageStyle,\n    width: tnode.attributes.width,\n    height: tnode.attributes.height,\n    objectFit: tnode.styles.webBlockRet.objectFit\n  };\n}\n\nconst IMGRenderer: InternalBlockRenderer = (props) => {\n  return React.createElement(IMGElement, useIMGElementProps(props));\n};\n\nexport default IMGRenderer;\n"]},"metadata":{},"sourceType":"script"}