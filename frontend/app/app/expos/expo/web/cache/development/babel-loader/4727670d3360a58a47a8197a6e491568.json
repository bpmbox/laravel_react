{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIMGElementStateWithCache;\n\nvar _defaultInitialImageDimensions = _interopRequireDefault(require(\"./defaultInitialImageDimensions\"));\n\nvar _getIMGState = require(\"./getIMGState\");\n\nvar _useImageConcreteDimensions = _interopRequireDefault(require(\"./useImageConcreteDimensions\"));\n\nvar _useImageNaturalDimensions = _interopRequireDefault(require(\"./useImageNaturalDimensions\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction useIMGElementStateWithCache(props) {\n  var alt = props.alt,\n      altColor = props.altColor,\n      source = props.source,\n      contentWidth = props.contentWidth,\n      computeMaxWidth = props.computeMaxWidth,\n      objectFit = props.objectFit,\n      _props$initialDimensi = props.initialDimensions,\n      initialDimensions = _props$initialDimensi === void 0 ? _defaultInitialImageDimensions.default : _props$initialDimensi;\n\n  var _ref = (0, _useImageNaturalDimensions.default)(props),\n      naturalDimensions = _ref.naturalDimensions,\n      specifiedDimensions = _ref.specifiedDimensions,\n      flatStyle = _ref.flatStyle,\n      error = _ref.error,\n      onError = _ref.onError;\n\n  var concreteDimensions = (0, _useImageConcreteDimensions.default)({\n    flatStyle: flatStyle,\n    naturalDimensions: naturalDimensions,\n    specifiedDimensions: specifiedDimensions,\n    computeMaxWidth: computeMaxWidth,\n    contentWidth: contentWidth\n  });\n  return (0, _getIMGState.getIMGState)({\n    error: error,\n    concreteDimensions: concreteDimensions,\n    containerStyle: flatStyle,\n    initialDimensions: initialDimensions,\n    objectFit: objectFit,\n    onError: onError,\n    source: source,\n    alt: alt,\n    altColor: altColor\n  });\n}","map":{"version":3,"sources":["useIMGElementStateWithCache.ts"],"names":["initialDimensions","defaultImageInitialDimensions","onError","concreteDimensions","flatStyle","naturalDimensions","specifiedDimensions","computeMaxWidth","contentWidth","error","containerStyle","objectFit","source","alt","altColor"],"mappings":";;;;;;;AAAA,IAAA,8BAAA,GAAA,sBAAA,CAAA,OAAA,mCAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,iBAAA;;AAMA,IAAA,2BAAA,GAAA,sBAAA,CAAA,OAAA,gCAAA,CAAA;;AACA,IAAA,0BAAA,GAAA,sBAAA,CAAA,OAAA,+BAAA,CAAA;;;;;;;;AAOe,SAAA,2BAAA,CAAA,KAAA,EAEkC;AAC/C,MAAM,GAAN,GAAA,KAAA,CAAM,GAAN;AAAA,MAAM,QAAN,GAAA,KAAA,CAAM,QAAN;AAAA,MAAM,MAAN,GAAA,KAAA,CAAM,MAAN;AAAA,MAAM,YAAN,GAAA,KAAA,CAAM,YAAN;AAAA,MAAM,eAAN,GAAA,KAAA,CAAM,eAAN;AAAA,MAAM,SAAN,GAAA,KAAA,CAAM,SAAN;AAAA,8BAAA,KAAA,CAOEA,iBAPF;AAAA,MAOEA,iBAPF,sCAOsBC,8BAAAA,CAAAA,OAPtB;;AASA,aACE,CAAA,GAAA,0BAAA,CAAA,OAAA,EADF,KACE,CADF;AAAA,MAAM,iBAAN,QAAM,iBAAN;AAAA,MAAM,mBAAN,QAAM,mBAAN;AAAA,MAAM,SAAN,QAAM,SAAN;AAAA,MAAM,KAAN,QAAM,KAAN;AAAA,MAAkEC,OAAlE,QAAkEA,OAAlE;;AAEA,MAAMC,kBAAkB,GAAG,CAAA,GAAA,2BAAA,CAAA,OAAA,EAA2B;AACpDC,IAAAA,SADoD,EACpDA,SADoD;AAEpDC,IAAAA,iBAFoD,EAEpDA,iBAFoD;AAGpDC,IAAAA,mBAHoD,EAGpDA,mBAHoD;AAIpDC,IAAAA,eAJoD,EAIpDA,eAJoD;AAKpDC,IAAAA,YAAAA,EAAAA;AALoD,GAA3B,CAA3B;AAOA,SAAO,CAAA,GAAA,YAAA,CAAA,WAAA,EAAY;AACjBC,IAAAA,KADiB,EACjBA,KADiB;AAEjBN,IAAAA,kBAFiB,EAEjBA,kBAFiB;AAGjBO,IAAAA,cAAc,EAHG,SAAA;AAIjBV,IAAAA,iBAJiB,EAIjBA,iBAJiB;AAKjBW,IAAAA,SALiB,EAKjBA,SALiB;AAMjBT,IAAAA,OANiB,EAMjBA,OANiB;AAOjBU,IAAAA,MAPiB,EAOjBA,MAPiB;AAQjBC,IAAAA,GARiB,EAQjBA,GARiB;AASjBC,IAAAA,QAAAA,EAAAA;AATiB,GAAZ,CAAP;AAWD","sourcesContent":["import defaultImageInitialDimensions from './defaultInitialImageDimensions';\nimport { getIMGState } from './getIMGState';\nimport type {\n  UseIMGElementStateWithCacheProps,\n  IMGElementStateError,\n  IMGElementStateSuccess\n} from './img-types';\nimport useImageConcreteDimensions from './useImageConcreteDimensions';\nimport useImageNaturalDimensions from './useImageNaturalDimensions';\n\n/**\n * This hook is useful when one has access to image natural dimensions prior to\n * loading. The `cachedNaturalDimensions` prop must be passed to immediately\n * compute concrete dimensions.\n */\nexport default function useIMGElementStateWithCache(\n  props: UseIMGElementStateWithCacheProps\n): IMGElementStateError | IMGElementStateSuccess {\n  const {\n    alt,\n    altColor,\n    source,\n    contentWidth,\n    computeMaxWidth,\n    objectFit,\n    initialDimensions = defaultImageInitialDimensions\n  } = props;\n  const { naturalDimensions, specifiedDimensions, flatStyle, error, onError } =\n    useImageNaturalDimensions(props);\n  const concreteDimensions = useImageConcreteDimensions({\n    flatStyle,\n    naturalDimensions,\n    specifiedDimensions,\n    computeMaxWidth,\n    contentWidth\n  });\n  return getIMGState({\n    error,\n    concreteDimensions,\n    containerStyle: flatStyle,\n    initialDimensions,\n    objectFit,\n    onError,\n    source,\n    alt,\n    altColor\n  });\n}\n"]},"metadata":{},"sourceType":"script"}