{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAElementProps = useAElementProps;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _AElement = _interopRequireDefault(require(\"../elements/AElement\"));\n\nvar _useNormalizedUrl = _interopRequireDefault(require(\"../hooks/useNormalizedUrl\"));\n\nvar _DocumentMetadataProvider = require(\"../context/DocumentMetadataProvider\");\n\nvar _RenderersPropsProvider = require(\"../context/RenderersPropsProvider\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction useAnchorOnLinkPress(tnode, onPress) {\n  var href = tnode.attributes.href;\n  var normalizedHref = (0, _useNormalizedUrl.default)(href);\n\n  var _ref = (0, _DocumentMetadataProvider.useDocumentMetadata)(),\n      baseTarget = _ref.baseTarget;\n\n  var shouldHandleLinkPress = tnode.tagName === 'a' && typeof normalizedHref === 'string' && typeof onPress === 'function';\n  return shouldHandleLinkPress ? function (e) {\n    return onPress(e, normalizedHref, tnode.attributes, tnode.attributes.target || baseTarget);\n  } : undefined;\n}\n\nfunction useAElementProps(props) {\n  var tnode = props.tnode;\n\n  var _ref2 = (0, _RenderersPropsProvider.useRendererProps)('a'),\n      onPress = _ref2.onPress;\n\n  var syntheticAnchorOnLinkPress = useAnchorOnLinkPress(tnode, onPress);\n\n  if (typeof syntheticAnchorOnLinkPress !== 'function') {\n    return props;\n  }\n\n  var accessibilityProps = {\n    accessible: true,\n    accessibilityRole: 'link'\n  };\n  return _objectSpread(_objectSpread({}, props), {}, {\n    onPress: syntheticAnchorOnLinkPress,\n    textProps: accessibilityProps,\n    viewProps: accessibilityProps\n  });\n}\n\nvar ARenderer = function ARenderer(props) {\n  return _react.default.createElement(_AElement.default, useAElementProps(props));\n};\n\nvar _default = ARenderer;\nexports.default = _default;","map":{"version":3,"sources":["ARenderer.tsx"],"names":["href","tnode","normalizedHref","baseTarget","shouldHandleLinkPress","e","onPress","syntheticAnchorOnLinkPress","useAnchorOnLinkPress","accessibilityProps","accessible","accessibilityRole","textProps","viewProps","ARenderer","props","React","AElement","useAElementProps"],"mappings":";;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAKA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,6BAAA,CAAA;;AACA,IAAA,yBAAA,GAAA,OAAA,uCAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,qCAAA;;;;;;;;AAEA,SAAA,oBAAA,CAAA,KAAA,EAAA,OAAA,EAGE;AACA,MAAMA,IAAY,GAAGC,KAAK,CAALA,UAAAA,CAArB,IAAA;AACA,MAAMC,cAAc,GAAG,CAAA,GAAA,iBAAA,CAAA,OAAA,EAAvB,IAAuB,CAAvB;;AAFA,aAGuB,CAAA,GAAA,yBAAA,CAAvB,mBAAuB,GAHvB;AAAA,MAGQC,UAHR,QAGQA,UAHR;;AAIA,MAAMC,qBAAqB,GACzBH,KAAK,CAALA,OAAAA,KAAAA,GAAAA,IACA,OAAA,cAAA,KADAA,QAAAA,IAEA,OAAA,OAAA,KAHF,UAAA;AAIA,SAAOG,qBAAqB,GACvBC,UAAAA,CAAD;AAAA,WACEC,OAAO,CAAA,CAAA,EAAA,cAAA,EAGLL,KAAK,CAHA,UAAA,EAIJA,KAAK,CAALA,UAAAA,CAAD,MAACA,IANmB,UAEf,CADT;AAAA,GADwB,GAA5B,SAAA;AAUD;;AAEM,SAAA,gBAAA,CAAA,KAAA,EAEqB;AAAA,MAClBA,KADkB,GAC1B,KAD0B,CAClBA,KADkB;;AAAA,cAEN,CAAA,GAAA,uBAAA,CAAA,gBAAA,EAApB,GAAoB,CAFM;AAAA,MAElBK,OAFkB,SAElBA,OAFkB;;AAG1B,MAAMC,0BAA0B,GAAGC,oBAAoB,CAAA,KAAA,EAAvD,OAAuD,CAAvD;;AACA,MAAI,OAAA,0BAAA,KAAJ,UAAA,EAAsD;AACpD,WAAA,KAAA;AACD;;AACD,MAAMC,kBAAsC,GAAG;AAC7CC,IAAAA,UAAU,EADmC,IAAA;AAE7CC,IAAAA,iBAAiB,EAAE;AAF0B,GAA/C;AAIA,yCAAO,KAAP;AAEEL,IAAAA,OAAO,EAFF,0BAAP;AAGEM,IAAAA,SAAS,EAHJ,kBAAP;AAIEC,IAAAA,SAAS,EAAEJ;AAJb;AAMD;;AAED,IAAMK,SAAgC,GAAIC,SAApCD,SAAoCC,CAAAA,KAAD,EAAW;AAClD,SAAOC,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAAoBC,SAAAA,CAApBD,OAAAA,EAA8BE,gBAAgB,CAArD,KAAqD,CAA9CF,CAAP;AADF,CAAA;;eAIeF,S","sourcesContent":["import React from 'react';\nimport { InternalMixedRenderer } from '../render/render-types';\nimport { TNode, DocumentContext } from '@native-html/transient-render-engine';\nimport { InternalRendererProps, RenderersProps } from '../shared-types';\nimport { AccessibilityProps, GestureResponderEvent } from 'react-native';\nimport AElement from '../elements/AElement';\nimport useNormalizedUrl from '../hooks/useNormalizedUrl';\nimport { useDocumentMetadata } from '../context/DocumentMetadataProvider';\nimport { useRendererProps } from '../context/RenderersPropsProvider';\n\nfunction useAnchorOnLinkPress(\n  tnode: TNode,\n  onPress: RenderersProps['a']['onPress']\n) {\n  const href: string = tnode.attributes.href;\n  const normalizedHref = useNormalizedUrl(href);\n  const { baseTarget } = useDocumentMetadata();\n  const shouldHandleLinkPress =\n    tnode.tagName === 'a' &&\n    typeof normalizedHref === 'string' &&\n    typeof onPress === 'function';\n  return shouldHandleLinkPress\n    ? (e: GestureResponderEvent) =>\n        onPress!(\n          e,\n          normalizedHref,\n          tnode.attributes,\n          (tnode.attributes.target as DocumentContext['baseTarget']) ||\n            baseTarget\n        )\n    : undefined;\n}\n\nexport function useAElementProps<T extends TNode>(\n  props: InternalRendererProps<T>\n): InternalRendererProps<T> {\n  const { tnode } = props;\n  const { onPress } = useRendererProps('a');\n  const syntheticAnchorOnLinkPress = useAnchorOnLinkPress(tnode, onPress);\n  if (typeof syntheticAnchorOnLinkPress !== 'function') {\n    return props;\n  }\n  const accessibilityProps: AccessibilityProps = {\n    accessible: true,\n    accessibilityRole: 'link'\n  };\n  return {\n    ...props,\n    onPress: syntheticAnchorOnLinkPress,\n    textProps: accessibilityProps,\n    viewProps: accessibilityProps\n  };\n}\n\nconst ARenderer: InternalMixedRenderer = (props) => {\n  return React.createElement(AElement, useAElementProps(props));\n};\n\nexport default ARenderer;\n"]},"metadata":{},"sourceType":"script"}