{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/app/examples/9-bmi-calculator/components/HeightSelection.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport Slider from \"@react-native-community/slider\";\nimport sliderThumbImage from \"../../../assets/bmi-calculator/slider-thumb-image.png\";\nimport { BOX, TEXT_VALUE, TEXT_LABEL } from \"../style\";\nvar MIN_HEIGHT = 50;\nvar MAX_HEIGHT = 250;\n\nfunction HeightSelection(_ref) {\n  var style = _ref.style,\n      height = _ref.height,\n      setHeight = _ref.setHeight;\n  return React.createElement(View, {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.heightSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"HEIGHT\"), React.createElement(Text, {\n    style: styles.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, height, React.createElement(Text, {\n    style: styles.unit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, \" cm\")), React.createElement(Slider, {\n    style: styles.slider,\n    minimumValue: MIN_HEIGHT,\n    maximumValue: MAX_HEIGHT,\n    minimumTrackTintColor: \"#9a5871\",\n    maximumTrackTintColor: \"#000000\",\n    thumbImage: Platform.OS === \"android\" && sliderThumbImage,\n    onValueChange: function onValueChange(value) {\n      return setHeight(Math.round(value));\n    },\n    value: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  heightSelection: _objectSpread(_objectSpread({}, BOX), {}, {\n    marginVertical: 10\n  }),\n  label: _objectSpread({}, TEXT_LABEL),\n  value: _objectSpread({}, TEXT_VALUE),\n  unit: {\n    fontSize: 16\n  },\n  slider: {\n    width: \"100%\",\n    height: 40,\n    transform: Platform.OS === \"android\" ? [{\n      scale: 1.1\n    }] : []\n  }\n});\nexport default React.memo(HeightSelection);","map":{"version":3,"sources":["/app/examples/9-bmi-calculator/components/HeightSelection.js"],"names":["React","FontAwesome5","Slider","sliderThumbImage","BOX","TEXT_VALUE","TEXT_LABEL","MIN_HEIGHT","MAX_HEIGHT","HeightSelection","style","height","setHeight","styles","heightSelection","label","value","unit","slider","Platform","OS","Math","round","StyleSheet","create","marginVertical","fontSize","width","transform","scale","memo"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,gBAAP;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,UAA1B;AAEA,IAAMC,UAAU,GAAG,EAAnB;AACA,IAAMC,UAAU,GAAG,GAAnB;;AAEA,SAASC,eAAT,OAAuD;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACrD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MADH,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACI,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CAHF,EASE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEJ,MAAM,CAACK,MADhB;AAEE,IAAA,YAAY,EAAEX,UAFhB;AAGE,IAAA,YAAY,EAAEC,UAHhB;AAIE,IAAA,qBAAqB,EAAC,SAJxB;AAKE,IAAA,qBAAqB,EAAC,SALxB;AAME,IAAA,UAAU,EAAEW,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA6BjB,gBAN3C;AAOE,IAAA,aAAa,EAAE,uBAACa,KAAD;AAAA,aAAWJ,SAAS,CAACS,IAAI,CAACC,KAAL,CAAWN,KAAX,CAAD,CAApB;AAAA,KAPjB;AAQE,IAAA,KAAK,EAAEL,MART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF;AAwBD;;AAED,IAAME,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,eAAe,kCACVV,GADU;AAEbqB,IAAAA,cAAc,EAAE;AAFH,IADgB;AAK/BV,EAAAA,KAAK,oBACAT,UADA,CAL0B;AAQ/BU,EAAAA,KAAK,oBACAX,UADA,CAR0B;AAW/BY,EAAAA,IAAI,EAAE;AACJS,IAAAA,QAAQ,EAAE;AADN,GAXyB;AAc/BR,EAAAA,MAAM,EAAE;AACNS,IAAAA,KAAK,EAAE,MADD;AAENhB,IAAAA,MAAM,EAAE,EAFF;AAGNiB,IAAAA,SAAS,EAAET,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,CAAC;AAAES,MAAAA,KAAK,EAAE;AAAT,KAAD,CAA5B,GAA+C;AAHpD;AAduB,CAAlB,CAAf;AAqBA,eAAe7B,KAAK,CAAC8B,IAAN,CAAWrB,eAAX,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View, Text, Platform } from \"react-native\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport Slider from \"@react-native-community/slider\";\nimport sliderThumbImage from \"../../../assets/bmi-calculator/slider-thumb-image.png\";\nimport { BOX, TEXT_VALUE, TEXT_LABEL } from \"../style\";\n\nconst MIN_HEIGHT = 50;\nconst MAX_HEIGHT = 250;\n\nfunction HeightSelection({ style, height, setHeight }) {\n  return (\n    <View style={style}>\n      <View style={styles.heightSelection}>\n        <Text style={styles.label}>HEIGHT</Text>\n\n        <Text style={styles.value}>\n          {height}\n          <Text style={styles.unit}> cm</Text>\n        </Text>\n\n        {/* https://github.com/react-native-community/react-native-slider */}\n        <Slider\n          style={styles.slider}\n          minimumValue={MIN_HEIGHT}\n          maximumValue={MAX_HEIGHT}\n          minimumTrackTintColor=\"#9a5871\"\n          maximumTrackTintColor=\"#000000\"\n          thumbImage={Platform.OS === \"android\" && sliderThumbImage}\n          onValueChange={(value) => setHeight(Math.round(value))}\n          value={height}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  heightSelection: {\n    ...BOX,\n    marginVertical: 10,\n  },\n  label: {\n    ...TEXT_LABEL,\n  },\n  value: {\n    ...TEXT_VALUE,\n  },\n  unit: {\n    fontSize: 16,\n  },\n  slider: {\n    width: \"100%\",\n    height: 40,\n    transform: Platform.OS === \"android\" ? [{ scale: 1.1 }] : [],\n  },\n});\n\nexport default React.memo(HeightSelection);\n"]},"metadata":{},"sourceType":"module"}