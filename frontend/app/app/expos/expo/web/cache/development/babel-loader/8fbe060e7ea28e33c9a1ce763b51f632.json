{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _jsxFileName = \"/app/examples/with-apollo/Appl.js\",\n    _templateObject,\n    _templateObject2;\n\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Picker } from '@react-native-picker/picker';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport gql from 'graphql-tag';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloProvider, useQuery } from \"react-apollo\";\nimport { apolloClient } from \"./apollo\";\nvar PokemonStack = createStackNavigator();\nvar MoveStack = createStackNavigator();\nvar apploStack = createStackNavigator();\nvar stackScreenOptions = {\n  headerShown: false,\n  gestureEnabled: true\n};\n\nfunction PokemonStackScreen() {\n  return React.createElement(PokemonStack.Navigator, {\n    screenOptions: stackScreenOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(PokemonStack.Screen, {\n    name: \"PokemonList\",\n    component: PokemonList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(PokemonStack.Screen, {\n    name: \"PokemonDetail\",\n    component: PokemonDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar defaultStarshipId = 'c3RhcnNoaXBzOjM=';\nvar LIST_STARSHIPTS = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  query listStarships {\\n    allStarships {\\n      starships {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"])));\nvar GET_STARSHIP = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  query getStarship($id: ID!) {\\n    starship(id: $id) {\\n      id\\n      name\\n      model\\n      starshipClass\\n      manufacturers\\n      length\\n      crew\\n      costInCredits\\n      consumables\\n      filmConnection {\\n        films {\\n          id\\n          title\\n        }\\n      }\\n    }\\n  }\\n\"])));\n\nfunction RootComponent(props) {\n  console.log(defaultStarshipId);\n\n  var _useState = useState(defaultStarshipId),\n      _useState2 = _slicedToArray(_useState, 2),\n      starshipId = _useState2[0],\n      setStarshipId = _useState2[1];\n\n  var _useQuery = useQuery(GET_STARSHIP, {\n    variables: {\n      id: starshipId\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (error) {\n    console.log('Error fetching starship', error);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, React.createElement(StarshipPicker, {\n    starshipId: starshipId,\n    onStarshipChange: setStarshipId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), loading ? React.createElement(ActivityIndicator, {\n    color: \"#333\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }) : React.createElement(StarshipDetails, {\n    starship: data.starship,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction StarshipPicker(props) {\n  var _this = this;\n\n  var _useQuery2 = useQuery(LIST_STARSHIPTS),\n      data = _useQuery2.data,\n      error = _useQuery2.error,\n      loading = _useQuery2.loading;\n\n  console.log(data);\n\n  if (error) {\n    console.log('Error listing starships', error);\n  }\n\n  if (loading) return null;\n  var starships = data.allStarships.starships;\n  console.log(starships);\n  return React.createElement(Picker, {\n    selectedValue: props.starshipId,\n    onValueChange: props.onStarshipChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, \"//mapview\", starships.map(function (starship) {\n    return React.createElement(Picker.Item, {\n      key: starship.id,\n      label: starship.name,\n      value: starship.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    });\n  }));\n}\n\nfunction StarshipDetails(_ref) {\n  var _this2 = this;\n\n  var starship = _ref.starship;\n  console.log(starship);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"aaaa\")), React.createElement(View, {\n    style: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.starshipName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, starship.name), React.createElement(Text, {\n    style: styles.starshipModel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, starship.model)), React.createElement(View, {\n    style: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Operational abilities\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"- \", starship.crew, \" crew members\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"- \", starship.consumables, \" without restocking\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Ship attributes\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"- \", starship.length, \"m long\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"- \", starship.costInCredits, \" credits\")), React.createElement(View, {\n    style: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Manufacturers\"), starship.manufacturers.map(function (manufacturer) {\n    return React.createElement(Text, {\n      key: manufacturer,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"- \", manufacturer);\n  })), React.createElement(View, {\n    style: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Appeared in\"), starship.filmConnection.films.map(function (film) {\n    return React.createElement(Text, {\n      key: film.id,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, \"- \", film.title);\n  })));\n}\n\nvar styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 50\n  },\n  label: {\n    marginBottom: 2,\n    fontSize: 12,\n    fontWeight: 'bold',\n    textTransform: 'uppercase'\n  },\n  section: {\n    marginVertical: 12\n  },\n  starshipName: {\n    fontSize: 32,\n    fontWeight: 'bold'\n  },\n  starshipModel: {\n    fontStyle: 'italic'\n  }\n});\nexport default function Appl() {\n  return React.createElement(ApolloProvider, {\n    client: apolloClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }\n  }, React.createElement(RootComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/app/examples/with-apollo/Appl.js"],"names":["React","useState","Picker","NavigationContainer","createStackNavigator","createBottomTabNavigator","gql","ApolloClient","InMemoryCache","createHttpLink","ApolloProvider","useQuery","apolloClient","PokemonStack","MoveStack","apploStack","stackScreenOptions","headerShown","gestureEnabled","PokemonStackScreen","PokemonList","PokemonDetail","defaultStarshipId","LIST_STARSHIPTS","GET_STARSHIP","RootComponent","props","console","log","starshipId","setStarshipId","variables","id","data","error","loading","styles","container","section","starship","StarshipPicker","starships","allStarships","onStarshipChange","map","name","StarshipDetails","starshipName","starshipModel","model","label","crew","consumables","length","costInCredits","manufacturers","manufacturer","filmConnection","films","film","title","StyleSheet","create","loadingContainer","flex","justifyContent","alignItems","paddingHorizontal","marginBottom","fontSize","fontWeight","textTransform","marginVertical","fontStyle","Appl"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Text, View, SafeAreaView, ActivityIndicator, StyleSheet } from 'react-native';\n//import { ApolloProvider, useQuery, gql } from '@apollo/client';\nimport { Picker } from '@react-native-picker/picker';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport gql from 'graphql-tag';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloProvider,useQuery } from \"react-apollo\";\n////\nimport { apolloClient } from './apollo';\n\nconst PokemonStack = createStackNavigator();\nconst MoveStack = createStackNavigator();\nconst apploStack = createStackNavigator();\nconst stackScreenOptions = {\n  headerShown: false,\n  gestureEnabled: true,\n};\n\nfunction PokemonStackScreen() {\n  return (\n    <PokemonStack.Navigator screenOptions={stackScreenOptions}>\n      <PokemonStack.Screen name=\"PokemonList\" component={PokemonList} />\n      <PokemonStack.Screen name=\"PokemonDetail\" component={PokemonDetail} />\n    </PokemonStack.Navigator>\n  );\n}\n\n// Imperial I-class Star Destroyer\nconst defaultStarshipId = 'c3RhcnNoaXBzOjM=';\n\nconst LIST_STARSHIPTS = gql`\n  query listStarships {\n    allStarships {\n      starships {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst GET_STARSHIP = gql`\n  query getStarship($id: ID!) {\n    starship(id: $id) {\n      id\n      name\n      model\n      starshipClass\n      manufacturers\n      length\n      crew\n      costInCredits\n      consumables\n      filmConnection {\n        films {\n          id\n          title\n        }\n      }\n    }\n  }\n`;\n\nfunction RootComponent(props) {\n  console.log(defaultStarshipId);\n  const [starshipId, setStarshipId] = useState(defaultStarshipId);\n  const { data, error, loading } = useQuery(GET_STARSHIP, {\n    variables: { id: starshipId },\n  });\n\n  if (error) { console.log('Error fetching starship', error); }\n//set onstathipchent setstate\n  return (\n    <View style={styles.container}>\n      <View style={styles.section}>\n        <StarshipPicker\n          starshipId={starshipId}\n          onStarshipChange={setStarshipId}\n        />\n      </View>\n      {loading ? (\n        <ActivityIndicator color='#333' />\n      ) : (\n        <StarshipDetails starship={data.starship} />\n      )}\n    </View>\n  );\n}\n\nfunction StarshipPicker(props) {\n  //graphqlでデータ取得\n  const { data, error, loading } = useQuery(LIST_STARSHIPTS);\n  console.log(data);\n\n  if (error) { console.log('Error listing starships', error) }\n  if (loading) return null;\n\n  const { starships } = data.allStarships;\n  console.log(starships)\n//pickerの表示\n  return (\n    <Picker\n      selectedValue={props.starshipId}\n      onValueChange={props.onStarshipChange}\n    >\n    //mapview\n      {starships.map(starship => (\n        <Picker.Item key={starship.id} label={starship.name} value={starship.id} />\n      ))}\n    </Picker>\n  )\n}\n\nfunction StarshipDetails({ starship }) {\n  console.log(starship)\n  return (\n    <>\n      <View><Text>aaaa</Text></View>\n      <View style={styles.section}>\n        <Text style={styles.starshipName}>{starship.name}</Text>\n        <Text style={styles.starshipModel}>{starship.model}</Text>\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.label}>Operational abilities</Text>\n        <Text>- {starship.crew} crew members</Text>\n        <Text>- {starship.consumables} without restocking</Text>\n      </View>\n\n      <View>\n        <Text style={styles.label}>Ship attributes</Text>\n        <Text>- {starship.length}m long</Text>\n        <Text>- {starship.costInCredits} credits</Text>\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.label}>Manufacturers</Text>\n        {starship.manufacturers.map(manufacturer => (\n          <Text key={manufacturer}>- {manufacturer}</Text>\n        ))}\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.label}>Appeared in</Text>\n        {starship.filmConnection.films.map(film => (\n          <Text key={film.id}>- {film.title}</Text>\n        ))}\n      </View>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 50,\n  },\n  label: {\n    marginBottom: 2,\n    fontSize: 12,\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n  },\n  section: {\n    marginVertical: 12,\n  },\n  starshipName: {\n    fontSize: 32,\n    fontWeight: 'bold',\n  },\n  starshipModel: {\n    fontStyle: 'italic',\n  },\n});\n\nexport default function Appl() {\n  return (\n    <ApolloProvider client={apolloClient}>\n      <RootComponent />\n    </ApolloProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}