{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/app/p0005/screens/ChatScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport PropTypes from 'prop-types';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport FirebaseStorage from \"../data/FirebaseStorage\";\n\nvar ChatScreen = function (_React$Component) {\n  _inherits(ChatScreen, _React$Component);\n\n  var _super = _createSuper(ChatScreen);\n\n  function ChatScreen() {\n    var _this;\n\n    _classCallCheck(this, ChatScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(ChatScreen, [{\n    key: \"user\",\n    get: function get() {\n      console.log(this.props.route.params);\n      var _this$props$route$par = this.props.route.params,\n          name = _this$props$route$par.name,\n          chinko = _this$props$route$par.chinko;\n      return {\n        name: name,\n        _id: FirebaseStorage.shared.uid\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      FirebaseStorage.shared.on(function (message) {\n        return _this2.setState(function (previousState) {\n          return {\n            messages: GiftedChat.append(previousState.messages, message)\n          };\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      FirebaseStorage.shared.off();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 12\n        }\n      }, React.createElement(GiftedChat, {\n        messages: this.state.messages,\n        onSend: FirebaseStorage.shared.send,\n        user: this.user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return ChatScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({});\nexport default ChatScreen;","map":{"version":3,"sources":["/app/p0005/screens/ChatScreen.js"],"names":["React","PropTypes","GiftedChat","FirebaseStorage","ChatScreen","state","messages","console","log","props","route","params","name","chinko","_id","shared","uid","on","message","setState","previousState","append","off","flex","send","user","Component","styles","StyleSheet","create"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,eAAP;;IAMMC,U;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;;;;;SAIR,eAAW;AAETC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAA7B;AACA,kCAAyB,KAAKF,KAAL,CAAWC,KAAX,CAAiBC,MAA1C;AAAA,UAAQC,IAAR,yBAAQA,IAAR;AAAA,UAAcC,MAAd,yBAAcA,MAAd;AACA,aAAO;AACLD,QAAAA,IAAI,EAAEA,IADD;AAELE,QAAAA,GAAG,EAAEX,eAAe,CAACY,MAAhB,CAAuBC;AAFvB,OAAP;AAID;;;WAED,6BAAoB;AAAA;;AAClBb,MAAAA,eAAe,CAACY,MAAhB,CAAuBE,EAAvB,CAA0B,UAAAC,OAAO;AAAA,eAC/B,MAAI,CAACC,QAAL,CAAc,UAAAC,aAAa;AAAA,iBAAK;AAC9Bd,YAAAA,QAAQ,EAAEJ,UAAU,CAACmB,MAAX,CAAkBD,aAAa,CAACd,QAAhC,EAA0CY,OAA1C;AADoB,WAAL;AAAA,SAA3B,CAD+B;AAAA,OAAjC;AAKD;;;WAED,gCAAuB;AACrBf,MAAAA,eAAe,CAACY,MAAhB,CAAuBO,GAAvB;AACD;;;WAED,kBAAS;AACP,aAAO,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWC,QADvB;AAEE,QAAA,MAAM,EAAEH,eAAe,CAACY,MAAhB,CAAuBS,IAFjC;AAGE,QAAA,IAAI,EAAE,KAAKC,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,CAAP;AAOD;;;;EApCsBzB,KAAK,CAAC0B,S;;AAuC/B,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAGA,eAAezB,UAAf","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, Platform, SafeAreaView } from 'react-native';\nimport PropTypes from 'prop-types'\nimport { GiftedChat } from 'react-native-gifted-chat'\n\nimport FirebaseStorage from '../data/FirebaseStorage';\n\ntype Props = {\n  name?: string,\n};\n\nclass ChatScreen extends React.Component<Props> {\n\n  state = {\n    messages: [],\n  };\n\n  get user() {\n    //route parame に設定\n    console.log(this.props.route.params)\n    const { name, chinko } = this.props.route.params;\n    return {\n      name: name,\n      _id: FirebaseStorage.shared.uid,\n    };\n  }\n\n  componentDidMount() {\n    FirebaseStorage.shared.on(message =>\n      this.setState(previousState => ({\n        messages: GiftedChat.append(previousState.messages, message),\n      }))\n    );\n  }\n\n  componentWillUnmount() {\n    FirebaseStorage.shared.off();\n  }\n\n  render() {\n    return <SafeAreaView style={{ flex: 1 }}>\n      <GiftedChat\n        messages={this.state.messages}\n        onSend={FirebaseStorage.shared.send}\n        user={this.user}\n      />\n    </SafeAreaView>\n  }\n}\n\nconst styles = StyleSheet.create({\n});\n\nexport default ChatScreen;\n"]},"metadata":{},"sourceType":"module"}