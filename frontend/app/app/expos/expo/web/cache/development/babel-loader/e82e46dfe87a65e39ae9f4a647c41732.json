{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/app/examples/modal/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TextStyle } from \"react-native-web/dist/index\";\nimport { TextProps } from \"react-native-web/dist/index\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from 'react-native-modal';\n\nvar hi = function (_React$Component) {\n  _inherits(hi, _React$Component);\n\n  var _super = _createSuper(hi);\n\n  function hi(props) {\n    var _this;\n\n    _classCallCheck(this, hi);\n\n    _this = _super.call(this, props);\n\n    _this.toggleA = function () {\n      _this.setState({\n        dispA: !_this.state.dispA\n      });\n    };\n\n    _this.toggleB = function () {\n      _this.setState({\n        dispB: !_this.state.dispB\n      });\n    };\n\n    _this.state = {\n      dispA: false,\n      dispB: false\n    };\n    return _this;\n  }\n\n  _createClass(hi, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          dispA = _this$state.dispA,\n          dispB = _this$state.dispB;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        title: \"A\\u30E2\\u30FC\\u30C0\\u30EB\\u8868\\u793A\",\n        onPress: this.toggleA,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"B\\u30E2\\u30FC\\u30C0\\u30EB\\u8868\\u793A\",\n        onPress: this.toggleB,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }), React.createElement(Modal, {\n        isVisible: dispA,\n        style: {\n          alignContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: '#FFF',\n          alignContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, \"A\\u30E2\\u30FC\\u30C0\\u30EB\"), React.createElement(Button, {\n        title: \"A\\u30E2\\u30FC\\u30C0\\u30EB\\u975E\\u8868\\u793A\",\n        onPress: this.toggleA,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }))), React.createElement(Modal, {\n        onModalHide: this.toggleA,\n        isVisible: dispB,\n        style: {\n          alignContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: '#FFF',\n          alignContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, \"B\\u30E2\\u30FC\\u30C0\\u30EB\"), React.createElement(Button, {\n        title: \"B\\u30E2\\u30FC\\u30C0\\u30EB\\u975E\\u8868\\u793A&A\\u30E2\\u30FC\\u30C0\\u30EB\\u8868\\u793A\",\n        onPress: this.toggleB,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return hi;\n}(React.Component);\n\nexport { hi as default };","map":{"version":3,"sources":["/app/examples/modal/index.js"],"names":["React","TextStyle","TextProps","Modal","hi","props","toggleA","setState","dispA","state","toggleB","dispB","flex","justifyContent","alignItems","alignContent","backgroundColor","textAlign","Component"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  StyleSheet,\r\n  TextStyle,\r\n  TextProps,\r\n  SectionList,\r\n  Image,\r\n  findNodeHandle,\r\n  Alert,\r\n  Button,\r\n} from 'react-native';\r\n\r\nimport Modal from 'react-native-modal';\r\n\r\nexport interface Props {}\r\n\r\nexport interface State {\r\n  dispA: boolean;\r\n  dispB: boolean;\r\n}\r\n\r\nexport default class hi extends React.Component<Props, State> {\r\n  /**\r\n   * constructor\r\n   * @param props\r\n   */\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dispA: false,\r\n      dispB: false,\r\n    };\r\n  }\r\n\r\n  toggleA = () => {\r\n    this.setState({\r\n      dispA: !this.state.dispA,\r\n    });\r\n  };\r\n\r\n  toggleB = () => {\r\n    this.setState({\r\n      dispB: !this.state.dispB,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {dispA, dispB} = this.state;\r\n\r\n    return (\r\n      <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\r\n        <Button title=\"Aモーダル表示\" onPress={this.toggleA} />\r\n        <Button title=\"Bモーダル表示\" onPress={this.toggleB} />\r\n        <Modal\r\n          isVisible={dispA}\r\n          style={{alignContent: 'center', alignItems: 'center'}}>\r\n          <View\r\n            style={{\r\n              backgroundColor: '#FFF',\r\n\r\n              alignContent: 'center',\r\n            }}>\r\n            <Text style={{textAlign: 'center'}}>Aモーダル</Text>\r\n            <Button title=\"Aモーダル非表示\" onPress={this.toggleA} />\r\n          </View>\r\n        </Modal>\r\n        <Modal\r\n          onModalHide={this.toggleA}\r\n          isVisible={dispB}\r\n          style={{alignContent: 'center', alignItems: 'center'}}>\r\n          <View\r\n            style={{\r\n              backgroundColor: '#FFF',\r\n\r\n              alignContent: 'center',\r\n            }}>\r\n            <Text style={{textAlign: 'center'}}>Bモーダル</Text>\r\n            <Button\r\n              title=\"Bモーダル非表示&Aモーダル表示\"\r\n              onPress={this.toggleB}\r\n            />\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}