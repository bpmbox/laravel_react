{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/app/examples/7-scan-qr-code/ScannerView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Animatable from \"react-native-animatable\";\nexport default function ScannerView(_ref) {\n  var scanned = _ref.scanned;\n  return React.createElement(Animatable.View, {\n    style: styles.scannerView,\n    animation: scanned ? \"fadeOut\" : \"pulse\",\n    iterationCount: scanned ? 1 : \"infinite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.borderTopLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.borderTopRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.borderBottomLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.borderBottomRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n}\nvar BORDER = {\n  position: \"absolute\",\n  borderColor: \"#fff\",\n  width: 55,\n  height: 55\n};\nvar BORDER_WIDTH = 10;\nvar BORDER_RADIUS = 35;\nvar styles = StyleSheet.create({\n  scannerView: {\n    width: 220,\n    height: 220\n  },\n  borderTopLeft: _objectSpread(_objectSpread({}, BORDER), {}, {\n    top: 0,\n    left: 0,\n    borderTopLeftRadius: BORDER_RADIUS,\n    borderTopWidth: BORDER_WIDTH,\n    borderLeftWidth: BORDER_WIDTH\n  }),\n  borderTopRight: _objectSpread(_objectSpread({}, BORDER), {}, {\n    top: 0,\n    right: 0,\n    borderTopRightRadius: BORDER_RADIUS,\n    borderTopWidth: BORDER_WIDTH,\n    borderRightWidth: BORDER_WIDTH\n  }),\n  borderBottomLeft: _objectSpread(_objectSpread({}, BORDER), {}, {\n    bottom: 0,\n    left: 0,\n    borderBottomLeftRadius: BORDER_RADIUS,\n    borderBottomWidth: BORDER_WIDTH,\n    borderLeftWidth: BORDER_WIDTH\n  }),\n  borderBottomRight: _objectSpread(_objectSpread({}, BORDER), {}, {\n    bottom: 0,\n    right: 0,\n    borderBottomRightRadius: BORDER_RADIUS,\n    borderBottomWidth: BORDER_WIDTH,\n    borderRightWidth: BORDER_WIDTH\n  })\n});","map":{"version":3,"sources":["/app/examples/7-scan-qr-code/ScannerView.js"],"names":["React","Animatable","ScannerView","scanned","styles","scannerView","borderTopLeft","borderTopRight","borderBottomLeft","borderBottomRight","BORDER","position","borderColor","width","height","BORDER_WIDTH","BORDER_RADIUS","StyleSheet","create","top","left","borderTopLeftRadius","borderTopWidth","borderLeftWidth","right","borderTopRightRadius","borderRightWidth","bottom","borderBottomLeftRadius","borderBottomWidth","borderBottomRightRadius"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAO,KAAKC,UAAZ,MAA4B,yBAA5B;AAEA,eAAe,SAASC,WAAT,OAAkC;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC/C,SAEE,oBAAC,UAAD,CAAY,IAAZ;AACE,IAAA,KAAK,EAAEC,MAAM,CAACC,WADhB;AAEE,IAAA,SAAS,EAAEF,OAAO,GAAG,SAAH,GAAe,OAFnC;AAGE,IAAA,cAAc,EAAEA,OAAO,GAAG,CAAH,GAAO,UAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFF;AAaD;AAED,IAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE,UADG;AAEbC,EAAAA,WAAW,EAAE,MAFA;AAGbC,EAAAA,KAAK,EAAE,EAHM;AAIbC,EAAAA,MAAM,EAAE;AAJK,CAAf;AAMA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,aAAa,GAAG,EAAtB;AAEA,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,WAAW,EAAE;AACXQ,IAAAA,KAAK,EAAE,GADI;AAEXC,IAAAA,MAAM,EAAE;AAFG,GADkB;AAK/BR,EAAAA,aAAa,kCACRI,MADQ;AAEXS,IAAAA,GAAG,EAAE,CAFM;AAGXC,IAAAA,IAAI,EAAE,CAHK;AAIXC,IAAAA,mBAAmB,EAAEL,aAJV;AAKXM,IAAAA,cAAc,EAAEP,YALL;AAMXQ,IAAAA,eAAe,EAAER;AANN,IALkB;AAa/BR,EAAAA,cAAc,kCACTG,MADS;AAEZS,IAAAA,GAAG,EAAE,CAFO;AAGZK,IAAAA,KAAK,EAAE,CAHK;AAIZC,IAAAA,oBAAoB,EAAET,aAJV;AAKZM,IAAAA,cAAc,EAAEP,YALJ;AAMZW,IAAAA,gBAAgB,EAAEX;AANN,IAbiB;AAqB/BP,EAAAA,gBAAgB,kCACXE,MADW;AAEdiB,IAAAA,MAAM,EAAE,CAFM;AAGdP,IAAAA,IAAI,EAAE,CAHQ;AAIdQ,IAAAA,sBAAsB,EAAEZ,aAJV;AAKda,IAAAA,iBAAiB,EAAEd,YALL;AAMdQ,IAAAA,eAAe,EAAER;AANH,IArBe;AA6B/BN,EAAAA,iBAAiB,kCACZC,MADY;AAEfiB,IAAAA,MAAM,EAAE,CAFO;AAGfH,IAAAA,KAAK,EAAE,CAHQ;AAIfM,IAAAA,uBAAuB,EAAEd,aAJV;AAKfa,IAAAA,iBAAiB,EAAEd,YALJ;AAMfW,IAAAA,gBAAgB,EAAEX;AANH;AA7Bc,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport * as Animatable from \"react-native-animatable\";\n\nexport default function ScannerView({ scanned }) {\n  return (\n    // https://github.com/oblador/react-native-animatable\n    <Animatable.View\n      style={styles.scannerView}\n      animation={scanned ? \"fadeOut\" : \"pulse\"}\n      iterationCount={scanned ? 1 : \"infinite\"}\n    >\n      <View style={styles.borderTopLeft} />\n      <View style={styles.borderTopRight} />\n      <View style={styles.borderBottomLeft} />\n      <View style={styles.borderBottomRight} />\n    </Animatable.View>\n  );\n}\n\nconst BORDER = {\n  position: \"absolute\",\n  borderColor: \"#fff\",\n  width: 55,\n  height: 55,\n};\nconst BORDER_WIDTH = 10;\nconst BORDER_RADIUS = 35;\n\nconst styles = StyleSheet.create({\n  scannerView: {\n    width: 220,\n    height: 220,\n  },\n  borderTopLeft: {\n    ...BORDER,\n    top: 0,\n    left: 0,\n    borderTopLeftRadius: BORDER_RADIUS,\n    borderTopWidth: BORDER_WIDTH,\n    borderLeftWidth: BORDER_WIDTH,\n  },\n  borderTopRight: {\n    ...BORDER,\n    top: 0,\n    right: 0,\n    borderTopRightRadius: BORDER_RADIUS,\n    borderTopWidth: BORDER_WIDTH,\n    borderRightWidth: BORDER_WIDTH,\n  },\n  borderBottomLeft: {\n    ...BORDER,\n    bottom: 0,\n    left: 0,\n    borderBottomLeftRadius: BORDER_RADIUS,\n    borderBottomWidth: BORDER_WIDTH,\n    borderLeftWidth: BORDER_WIDTH,\n  },\n  borderBottomRight: {\n    ...BORDER,\n    bottom: 0,\n    right: 0,\n    borderBottomRightRadius: BORDER_RADIUS,\n    borderBottomWidth: BORDER_WIDTH,\n    borderRightWidth: BORDER_WIDTH,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}