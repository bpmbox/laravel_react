{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _TBlockRenderer = _interopRequireDefault(require(\"./TBlockRenderer\"));\n\nvar _TPhrasingRenderer = _interopRequireDefault(require(\"./TPhrasingRenderer\"));\n\nvar _TTextRenderer = _interopRequireDefault(require(\"./TTextRenderer\"));\n\nvar _SharedPropsProvider = require(\"./context/SharedPropsProvider\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar TNodeRenderer = (0, _react.memo)(function MemoizedTNodeRenderer(props) {\n  var tnode = props.tnode;\n  var sharedProps = (0, _SharedPropsProvider.useSharedProps)();\n\n  var tnodeProps = _objectSpread(_objectSpread({}, props), {}, {\n    sharedProps: sharedProps\n  });\n\n  if (tnode.type === 'block' || tnode.type === 'document') {\n    return _react.default.createElement(_TBlockRenderer.default, tnodeProps);\n  }\n\n  if (tnode.type === 'phrasing') {\n    return _react.default.createElement(_TPhrasingRenderer.default, tnodeProps);\n  }\n\n  if (tnode.type === 'text') {\n    return _react.default.createElement(_TTextRenderer.default, tnodeProps);\n  }\n\n  if (tnode.type === 'empty' && __DEV__) {\n    if (tnode.isUnregistered) {\n      console.warn(\"There is no custom renderer registered for tag \\\"\" + tnode.tagName + \"\\\" which is not part of the HTML5 standard. The tag will not be rendered.\" + ' If you don\\'t want this tag to be rendered, add it to \"ignoredTags\" prop array. If you do, register a custom renderer for this tag.');\n    } else if (tnode.tagName !== 'head') {\n      console.warn(\"The \\\"\" + tnode.tagName + \"\\\" tag is a valid HTML element but is not handled by this library. You must register a custom renderer or plugin and make sure its content model is not set to \\\"none\\\".\" + ' If you don\\'t want this tag to be rendered, add it to \"ignoredTags\" prop array.');\n    }\n  }\n\n  return null;\n});\nvar defaultProps = {\n  propsFromParent: {\n    collapsedMarginTop: null\n  }\n};\nTNodeRenderer.defaultProps = defaultProps;\nvar _default = TNodeRenderer;\nexports.default = _default;","map":{"version":3,"sources":["TNodeRenderer.tsx"],"names":["TNodeRenderer","tnode","sharedProps","tnodeProps","React","TBlockRenderer","TPhrasingRenderer","TTextRenderer","console","defaultProps","propsFromParent","collapsedMarginTop"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,oBAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA,uBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,mBAAA,CAAA;;AAEA,IAAA,oBAAA,GAAA,OAAA,iCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAMA,aAAa,GAAG,CAAA,GAAA,MAAA,CAAA,IAAA,EAAK,SAAA,qBAAA,CAAA,KAAA,EAEJ;AACrB,MAAQC,KAAR,GAAA,KAAA,CAAQA,KAAR;AACA,MAAMC,WAAW,GAAG,CAAA,GAAA,oBAAA,CAApB,cAAoB,GAApB;;AACA,MAAMC,UAAU,mCAAG,KAAH;AAEdD,IAAAA,WAAAA,EAAAA;AAFc,IAAhB;;AAIA,MAAID,KAAK,CAALA,IAAAA,KAAAA,OAAAA,IAA0BA,KAAK,CAALA,IAAAA,KAA9B,UAAA,EAAyD;AACvD,WAAOG,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAAoBC,eAAAA,CAApBD,OAAAA,EAAP,UAAOA,CAAP;AACD;;AACD,MAAIH,KAAK,CAALA,IAAAA,KAAJ,UAAA,EAA+B;AAC7B,WAAOG,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAAoBE,kBAAAA,CAApBF,OAAAA,EAAP,UAAOA,CAAP;AACD;;AACD,MAAIH,KAAK,CAALA,IAAAA,KAAJ,MAAA,EAA2B;AACzB,WAAOG,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAAoBG,cAAAA,CAApBH,OAAAA,EAAP,UAAOA,CAAP;AACD;;AACD,MAAIH,KAAK,CAALA,IAAAA,KAAAA,OAAAA,IAAJ,OAAA,EAAuC;AACrC,QAAIA,KAAK,CAAT,cAAA,EAA0B;AACxBO,MAAAA,OAAO,CAAPA,IAAAA,CACG,sDAAkDP,KAAK,CAAxD,OAAC,iFADHO,sIAAAA;AADF,KAAA,MAKO,IAAIP,KAAK,CAALA,OAAAA,KAAJ,MAAA,EAA8B;AACnCO,MAAAA,OAAO,CAAPA,IAAAA,CACG,WAAOP,KAAK,CAAb,OAAC,gLADHO,kFAAAA;AAID;AACF;;AACD,SAAA,IAAA;AA/BF,CAAsB,CAAtB;AAkCA,IAAMC,YAAwE,GAC5E;AACEC,EAAAA,eAAe,EAAE;AACfC,IAAAA,kBAAkB,EAAE;AADL;AADnB,CADF;AAQAX,aAAa,CAAbA,YAAAA,GAAAA,YAAAA;eAEeA,a","sourcesContent":["import React, { memo, ReactElement } from 'react';\nimport TBlockRenderer from './TBlockRenderer';\nimport TPhrasingRenderer from './TPhrasingRenderer';\nimport TTextRenderer from './TTextRenderer';\nimport { TNodeRendererProps } from './shared-types';\nimport { useSharedProps } from './context/SharedPropsProvider';\n\nexport type { TNodeRendererProps } from './shared-types';\n\n/**\n * A component to render any {@link TNode}.\n */\nconst TNodeRenderer = memo(function MemoizedTNodeRenderer(\n  props: TNodeRendererProps<any>\n): ReactElement | null {\n  const { tnode } = props;\n  const sharedProps = useSharedProps();\n  const tnodeProps = {\n    ...props,\n    sharedProps\n  };\n  if (tnode.type === 'block' || tnode.type === 'document') {\n    return React.createElement(TBlockRenderer, tnodeProps);\n  }\n  if (tnode.type === 'phrasing') {\n    return React.createElement(TPhrasingRenderer, tnodeProps);\n  }\n  if (tnode.type === 'text') {\n    return React.createElement(TTextRenderer, tnodeProps);\n  }\n  if (tnode.type === 'empty' && __DEV__) {\n    if (tnode.isUnregistered) {\n      console.warn(\n        `There is no custom renderer registered for tag \"${tnode.tagName}\" which is not part of the HTML5 standard. The tag will not be rendered.` +\n          ' If you don\\'t want this tag to be rendered, add it to \"ignoredTags\" prop array. If you do, register a custom renderer for this tag.'\n      );\n    } else if (tnode.tagName !== 'head') {\n      console.warn(\n        `The \"${tnode.tagName}\" tag is a valid HTML element but is not handled by this library. You must register a custom renderer or plugin and make sure its content model is not set to \"none\".` +\n          ' If you don\\'t want this tag to be rendered, add it to \"ignoredTags\" prop array.'\n      );\n    }\n  }\n  return null;\n});\n\nconst defaultProps: Required<Pick<TNodeRendererProps<any>, 'propsFromParent'>> =\n  {\n    propsFromParent: {\n      collapsedMarginTop: null\n    }\n  };\n\n/* @ts-ignore*/\nTNodeRenderer.defaultProps = defaultProps;\n\nexport default TNodeRenderer;\n"]},"metadata":{},"sourceType":"script"}