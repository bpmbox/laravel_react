{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/app/examples/12-pokedex/screens/PokemonList.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Avatar, ListItem, SearchBar } from \"react-native-elements\";\nimport MainHeader from \"../components/MainHeader\";\nimport PokemonType from \"../components/PokemonType\";\nimport pokeballIcon from \"../../../assets/pokedex/pokeball.png\";\nimport { FullPokemonsAPI } from \"../constants\";\nexport default function PokemonList(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayPokemons = _useState2[0],\n      setDisplayPokemons = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pokemons = _useState4[0],\n      setPokemons = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      keyword = _useState8[0],\n      setKeyword = _useState8[1];\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    var pokemonTypes = item.field_pokemon_type.split(\", \");\n    var PokemonTypeElement = pokemonTypes.map(function (type, index) {\n      return React.createElement(View, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, React.createElement(PokemonType, {\n        type: type,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }));\n    });\n    return React.createElement(ListItem, {\n      bottomDivider: true,\n      onPress: function onPress() {\n        navigation.navigate(\"PokemonDetail\", {\n          pokemon: displayPokemons[index]\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, React.createElement(Avatar, {\n      source: item.uri ? {\n        uri: item.uri\n      } : pokeballIcon,\n      size: \"medium\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, item.title_1), React.createElement(ListItem.Subtitle, {\n      style: styles.listItemSubtitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"#\", item.number.length <= 3 ? (\"00\" + item.number).slice(-3) : item.number)), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, PokemonTypeElement));\n  };\n\n  var searchPokemon = function searchPokemon(keyword) {\n    setKeyword(keyword);\n\n    if (keyword == \"\") {\n      setDisplayPokemons(pokemons);\n    } else {\n      var filteredPokemons = pokemons.filter(function (pokemon) {\n        return pokemon.title_1.toLowerCase().includes(keyword.toLowerCase());\n      });\n      setDisplayPokemons(filteredPokemons);\n    }\n  };\n\n  useEffect(function () {\n    var fetchData = function fetchData(url) {\n      var response, responseJson;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              responseJson = _context.sent;\n              setPokemons(responseJson);\n              setDisplayPokemons(responseJson);\n              setKeyword(\"\");\n              setLoading(false);\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              Alert.alert(\"Cannot connect to Server!\");\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    };\n\n    fetchData(FullPokemonsAPI);\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, React.createElement(MainHeader, {\n    title: \"Pokemons\",\n    isMain: true,\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), React.createElement(SearchBar, {\n    placeholder: \"Find Pokemon by name ...\",\n    inputContainerStyle: {\n      backgroundColor: \"#e9e9e9\"\n    },\n    containerStyle: {\n      backgroundColor: \"transparent\"\n    },\n    lightTheme: true,\n    round: true,\n    value: keyword,\n    onChangeText: searchPokemon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), !isLoading ? React.createElement(FlatList, {\n    data: displayPokemons,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.nid;\n    },\n    initialNumToRender: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }) : React.createElement(ActivityIndicator, {\n    animating: true,\n    size: \"large\",\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  listItemSubtitle: {\n    marginTop: 10,\n    color: \"#939393\"\n  }\n});","map":{"version":3,"sources":["/app/examples/12-pokedex/screens/PokemonList.js"],"names":["React","useEffect","useState","Avatar","ListItem","SearchBar","MainHeader","PokemonType","pokeballIcon","FullPokemonsAPI","PokemonList","navigation","displayPokemons","setDisplayPokemons","pokemons","setPokemons","isLoading","setLoading","keyword","setKeyword","renderItem","item","index","pokemonTypes","field_pokemon_type","split","PokemonTypeElement","map","type","navigate","pokemon","uri","title_1","styles","listItemSubtitle","number","length","slice","flexDirection","searchPokemon","filteredPokemons","filter","toLowerCase","includes","fetchData","url","fetch","response","json","responseJson","Alert","alert","flex","backgroundColor","nid","marginTop","StyleSheet","create","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  FlatList,\n  ActivityIndicator,\n  Alert,\n} from \"react-native\";\nimport { Avatar, ListItem, SearchBar } from \"react-native-elements\";\n\nimport MainHeader from \"../components/MainHeader\";\nimport PokemonType from \"../components/PokemonType\";\nimport pokeballIcon from \"../../../assets/pokedex/pokeball.png\";\nimport { FullPokemonsAPI } from \"../constants\";\n\nexport default function PokemonList({ navigation }) {\n  const [displayPokemons, setDisplayPokemons] = useState([]);\n  const [pokemons, setPokemons] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [keyword, setKeyword] = useState(\"\");\n\n  const renderItem = ({ item, index }) => {\n    const pokemonTypes = item.field_pokemon_type.split(\", \");\n    const PokemonTypeElement = pokemonTypes.map((type, index) => {\n      return (\n        <View key={index}>\n          <PokemonType type={type} />\n        </View>\n      );\n    });\n//ここで移動できればよい\n    return (\n      <ListItem\n        bottomDivider={true}\n        onPress={() => {\n          navigation.navigate(\"PokemonDetail\", {\n            pokemon: displayPokemons[index],\n          });\n        }}\n      >\n        <Avatar\n          source={item.uri ? { uri: item.uri } : pokeballIcon}\n          size=\"medium\"\n        />\n\n        <ListItem.Content>\n          <ListItem.Title>{item.title_1}</ListItem.Title>\n\n          <ListItem.Subtitle style={styles.listItemSubtitle}>\n            #\n            {item.number.length <= 3\n              ? (\"00\" + item.number).slice(-3)\n              : item.number}\n          </ListItem.Subtitle>\n        </ListItem.Content>\n\n        <View style={{ flexDirection: \"row\" }}>{PokemonTypeElement}</View>\n      </ListItem>\n    );\n  };\n\n  const searchPokemon = (keyword) => {\n    setKeyword(keyword);\n\n    if (keyword == \"\") {\n      setDisplayPokemons(pokemons);\n    } else {\n      const filteredPokemons = pokemons.filter((pokemon) => {\n        return pokemon.title_1.toLowerCase().includes(keyword.toLowerCase());\n      });\n      setDisplayPokemons(filteredPokemons);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async (url) => {\n      try {\n        const response = await fetch(url);\n        const responseJson = await response.json();\n\n        setPokemons(responseJson);\n        setDisplayPokemons(responseJson);\n        setKeyword(\"\");\n        setLoading(false);\n      } catch (error) {\n        Alert.alert(\"Cannot connect to Server!\");\n      }\n    };\n\n    fetchData(FullPokemonsAPI);\n  }, []);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <MainHeader\n        title=\"Pokemons\"\n        isMain={true}\n        navigation={navigation}\n      />\n\n      <SearchBar\n        placeholder=\"Find Pokemon by name ...\"\n        inputContainerStyle={{ backgroundColor: \"#e9e9e9\" }}\n        containerStyle={{ backgroundColor: \"transparent\" }}\n        lightTheme={true}\n        round={true}\n        value={keyword}\n        onChangeText={searchPokemon}\n      />\n\n      {!isLoading ? (\n        <FlatList\n          data={displayPokemons}\n          renderItem={renderItem}\n          keyExtractor={(item) => item.nid}\n          initialNumToRender={10}\n        />\n      ) : (\n        <ActivityIndicator animating size=\"large\" style={{ marginTop: 20 }} />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  listItemSubtitle: { marginTop: 10, color: \"#939393\" },\n});\n"]},"metadata":{},"sourceType":"module"}