{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import _ from'lodash';import PropTypes from'prop-types';import XDate from'xdate';import memoize from'memoize-one';import React,{Component}from'react';import{shouldUpdate}from\"../../component-updater\";import{isToday as dateutils_isToday}from\"../../dateutils\";import{xdateToData}from\"../../interface\";import{SELECT_DATE_SLOT}from\"../../testIDs\";import BasicDay from\"./basic\";import PeriodDay from\"./period\";var basicDayPropsTypes=_.omit(BasicDay.propTypes,'date');var Day=function(_Component){_inherits(Day,_Component);var _super=_createSuper(Day);function Day(){var _this;_classCallCheck(this,Day);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.getAccessibilityLabel=memoize(function(day,marking,isToday){var today=_.get(XDate,'locales[XDate.defaultLocale].today');var formatAccessibilityLabel=_.get(XDate,'locales[XDate.defaultLocale].formatAccessibilityLabel');var markingLabel=_this.getMarkingLabel(marking);if(formatAccessibilityLabel){return(isToday?today:'')+\" \"+day.toString(formatAccessibilityLabel)+\" \"+markingLabel;}return(isToday?'today':'')+\" \"+day.toString('dddd d MMMM yyyy')+\" \"+markingLabel;});return _this;}_createClass(Day,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps){return shouldUpdate(this.props,nextProps,['day','dayComponent','state','markingType','marking','onPress','onLongPress']);}},{key:\"getMarkingLabel\",value:function getMarkingLabel(marking){var label='';if(marking){if(marking.accessibilityLabel){return marking.accessibilityLabel;}if(marking.selected){label+='selected ';if(!marking.marked){label+='You have no entries for this day ';}}if(marking.marked){label+='You have entries for this day ';}if(marking.startingDay){label+='period start ';}if(marking.endingDay){label+='period end ';}if(marking.disabled||marking.disableTouchEvent){label+='disabled ';}}return label;}},{key:\"getDayComponent\",value:function getDayComponent(){var _this$props=this.props,dayComponent=_this$props.dayComponent,markingType=_this$props.markingType;if(dayComponent){return dayComponent;}return markingType==='period'?PeriodDay:BasicDay;}},{key:\"render\",value:function render(){var _this$props2=this.props,day=_this$props2.day,marking=_this$props2.marking;var date=xdateToData(day);var isToday=dateutils_isToday(day);var Component=this.getDayComponent();var dayProps=_.omit(this.props,'day');var accessibilityLabel=this.getAccessibilityLabel(day,marking,isToday);return React.createElement(Component,_extends({},dayProps,{date:date,testID:SELECT_DATE_SLOT+\"-\"+date.dateString,accessibilityLabel:accessibilityLabel}),date?day==null?void 0:day.getDate():day);}}]);return Day;}(Component);Day.displayName='IGNORE';Day.propTypes=_objectSpread(_objectSpread({},basicDayPropsTypes),{},{day:PropTypes.object,dayComponent:PropTypes.any});export{Day as default};","map":{"version":3,"sources":["/app/node_modules/react-native-calendars/src/calendar/day/index.js"],"names":["_","PropTypes","XDate","memoize","React","Component","shouldUpdate","isToday","dateutils_isToday","xdateToData","SELECT_DATE_SLOT","BasicDay","PeriodDay","basicDayPropsTypes","omit","propTypes","Day","getAccessibilityLabel","day","marking","today","get","formatAccessibilityLabel","markingLabel","getMarkingLabel","toString","nextProps","props","label","accessibilityLabel","selected","marked","startingDay","endingDay","disabled","disableTouchEvent","dayComponent","markingType","date","getDayComponent","dayProps","dateString","getDate","displayName","object","any"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\n// @ts-expect-error\nimport { shouldUpdate } from '../../component-updater';\n// @ts-expect-error\nimport { isToday as dateutils_isToday } from '../../dateutils';\n// @ts-expect-error\nimport { xdateToData } from '../../interface';\n// @ts-expect-error\nimport { SELECT_DATE_SLOT } from '../../testIDs';\nimport BasicDay from './basic';\nimport PeriodDay from './period';\nconst basicDayPropsTypes = _.omit(BasicDay.propTypes, 'date');\nexport default class Day extends Component {\n    static displayName = 'IGNORE';\n    static propTypes = {\n        ...basicDayPropsTypes,\n        /** The day to render */\n        day: PropTypes.object,\n        /** Provide custom day rendering component */\n        dayComponent: PropTypes.any\n    };\n    shouldComponentUpdate(nextProps) {\n        return shouldUpdate(this.props, nextProps, [\n            'day',\n            'dayComponent',\n            'state',\n            'markingType',\n            'marking',\n            'onPress',\n            'onLongPress'\n        ]);\n    }\n    getMarkingLabel(marking) {\n        let label = '';\n        if (marking) {\n            if (marking.accessibilityLabel) {\n                return marking.accessibilityLabel;\n            }\n            if (marking.selected) {\n                label += 'selected ';\n                if (!marking.marked) {\n                    label += 'You have no entries for this day ';\n                }\n            }\n            if (marking.marked) {\n                label += 'You have entries for this day ';\n            }\n            if (marking.startingDay) {\n                label += 'period start ';\n            }\n            if (marking.endingDay) {\n                label += 'period end ';\n            }\n            if (marking.disabled || marking.disableTouchEvent) {\n                label += 'disabled ';\n            }\n        }\n        return label;\n    }\n    getAccessibilityLabel = memoize((day, marking, isToday) => {\n        const today = _.get(XDate, 'locales[XDate.defaultLocale].today');\n        const formatAccessibilityLabel = _.get(XDate, 'locales[XDate.defaultLocale].formatAccessibilityLabel');\n        const markingLabel = this.getMarkingLabel(marking);\n        if (formatAccessibilityLabel) {\n            return `${isToday ? today : ''} ${day.toString(formatAccessibilityLabel)} ${markingLabel}`;\n        }\n        return `${isToday ? 'today' : ''} ${day.toString('dddd d MMMM yyyy')} ${markingLabel}`;\n    });\n    getDayComponent() {\n        const { dayComponent, markingType } = this.props;\n        if (dayComponent) {\n            return dayComponent;\n        }\n        return markingType === 'period' ? PeriodDay : BasicDay;\n    }\n    render() {\n        const { day, marking } = this.props;\n        const date = xdateToData(day);\n        const isToday = dateutils_isToday(day);\n        const Component = this.getDayComponent();\n        const dayProps = _.omit(this.props, 'day');\n        const accessibilityLabel = this.getAccessibilityLabel(day, marking, isToday);\n        return (<Component {...dayProps} date={date} testID={`${SELECT_DATE_SLOT}-${date.dateString}`} accessibilityLabel={accessibilityLabel}>\n        {date ? day?.getDate() : day}\n      </Component>);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}