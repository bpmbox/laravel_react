{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import ImageBackground from\"react-native-web/dist/exports/ImageBackground\";import Alert from\"react-native-web/dist/exports/Alert\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{Calendar,LocaleConfig,Agenda}from'react-native-calendars';import{Button}from'react-native-paper';var testIDs=require(\"./testIDs\");var image={uri:\"https://user-images.githubusercontent.com/68040080/118057532-2117be00-b3c7-11eb-8264-a9330f02f954.png\"};React.createElement(Calendar,{current:'2012-03-01',minDate:'2012-05-10',maxDate:'2012-05-30',onDayPress:function onDayPress(day){console.log('selected day',day);},onDayLongPress:function onDayLongPress(day){console.log('selected day',day);},monthFormat:'yyyy MM',onMonthChange:function onMonthChange(month){console.log('month changed',month);},hideArrows:true,renderArrow:function renderArrow(direction){return React.createElement(Arrow,null);},hideExtraDays:true,disableMonthChange:true,firstDay:1,hideDayNames:true,showWeekNumbers:true,onPressArrowLeft:function onPressArrowLeft(subtractMonth){return subtractMonth();},onPressArrowRight:function onPressArrowRight(addMonth){return addMonth();},disableArrowLeft:true,disableArrowRight:true,disableAllTouchEventsForDisabledDays:true,renderHeader:function renderHeader(date){},enableSwipeMonths:true});LocaleConfig.locales.jp={monthNames:['1月','2月','3月','4月','5月','6月','7月','8月','9月','10月','11月','12月'],monthNamesShort:['1月','2月','3月','4月','5月','6月','7月','8月','9月','10月','11月','12月'],dayNames:['日曜日','月曜日','火曜日','水曜日','木曜日','金曜日','土曜日'],dayNamesShort:['日','月','火','水','木','金','土']};LocaleConfig.defaultLocale='jp';var AgendaScreen=function(_Component){_inherits(AgendaScreen,_Component);var _super=_createSuper(AgendaScreen);function AgendaScreen(props){var _this;_classCallCheck(this,AgendaScreen);_this=_super.call(this,props);_this.state={items:{}};return _this;}_createClass(AgendaScreen,[{key:\"render\",value:function render(){return React.createElement(React.Fragment,null,React.createElement(Agenda,{testID:testIDs.agenda.CONTAINER,items:this.state.items,loadItemsForMonth:this.loadItems.bind(this),selected:'2021-05-24',renderItem:this.renderItem.bind(this),renderEmptyDate:this.renderEmptyDate.bind(this),rowHasChanged:this.rowHasChanged.bind(this),firstDay:1,renderDay:function renderDay(day,item){return React.createElement(Text,null,day?'':'');}}),React.createElement(Button,{icon:\"camera\",mode:\"contained\",onPress:function onPress(){return console.log('Pressed');}},React.createElement(Text,null,\"Press me\")));}},{key:\"loadItems\",value:function loadItems(day){var _this2=this;setTimeout(function(){var count=0;for(var i=-1;i<2;i++){var time=day.timestamp+i*24*60*60*1000;var strTime=_this2.timeToString(time);if(!_this2.state.items[strTime]){_this2.state.items[strTime]=[];var numItems=Math.floor(Math.random()*10+1);for(var j=0;j<numItems;j++){if(j===0){_this2.state.items[strTime].push({name:'Workstyle Item for '+strTime+' #'+j,height:70,header:1});}_this2.state.items[strTime].push({name:'Workstyle Item for '+strTime+' #'+j,height:70});}}}var newItems={};Object.keys(_this2.state.items).forEach(function(key){newItems[key]=_this2.state.items[key];});_this2.setState({items:newItems});},1000);}},{key:\"renderItem\",value:function renderItem(item,i){console.log(\"----------------------------------\");console.log(JSON.stringify(item));return React.createElement(React.Fragment,null,React.createElement(View,{style:{flex:1,width:'100%',flexDirection:'row',marginLeft:190}},item.header===1&&React.createElement(Button,{icon:\"camera\",mode:\"contained\",onPress:function onPress(){return console.log('Pressed');}},\"\\u4E88\\u5B9A\\u3092\\u78BA\\u5B9A\\u3059\\u308B\")),React.createElement(View,{style:{flex:1,width:'100%',flexDirection:'row'}},item.header===1&&React.createElement(ImageBackground,{source:image,style:styles.image},React.createElement(Text,null,item.name)),item.header!==1&&React.createElement(TouchableOpacity,{testID:testIDs.agenda.ITEM,style:[styles.item,{height:item.height}],onPress:function onPress(){return Alert.alert(item.name);}},React.createElement(Text,null,item.name)),React.createElement(TouchableOpacity,{testID:testIDs.agenda.ITEM,style:[styles.item2,{height:item.height}],onPress:function onPress(){return Alert.alert(item.name);}},React.createElement(Text,null,item.name))));}},{key:\"renderItemH\",value:function renderItemH(item,i){return React.createElement(React.Fragment,null,React.createElement(View,{style:{flex:1,width:'100%',flexDirection:'row'}},\"\\u3001\"));}},{key:\"renderEmptyDate\",value:function renderEmptyDate(){return React.createElement(View,{style:styles.emptyDate},React.createElement(Text,null,\"This is empty date!\"));}},{key:\"rowHasChanged\",value:function rowHasChanged(r1,r2){return r1.name!==r2.name;}},{key:\"timeToString\",value:function timeToString(time){var date=new Date(time);return date.toISOString().split('T')[0];}}]);return AgendaScreen;}(Component);export{AgendaScreen as default};var styles=StyleSheet.create({item:{backgroundColor:'white',flex:1,borderRadius:5,padding:10,marginRight:10,marginTop:17},item2:{backgroundColor:'#800080',flex:1,borderRadius:5,padding:10,marginRight:10,marginTop:17},image:{backgroundColor:'#800080',flex:1,borderRadius:5,padding:10,marginRight:10,marginTop:17},emptyDate:{height:15,flex:1,paddingTop:30}});","map":{"version":3,"sources":["/app/examples/13-calender/calender.tsx"],"names":["React","Component","Calendar","LocaleConfig","Agenda","Button","testIDs","require","image","uri","day","console","log","month","direction","subtractMonth","addMonth","date","locales","jp","monthNames","monthNamesShort","dayNames","dayNamesShort","defaultLocale","AgendaScreen","props","state","items","agenda","CONTAINER","loadItems","bind","renderItem","renderEmptyDate","rowHasChanged","item","setTimeout","count","i","time","timestamp","strTime","timeToString","numItems","Math","floor","random","j","push","name","height","header","newItems","Object","keys","forEach","key","setState","JSON","stringify","flex","width","flexDirection","marginLeft","styles","ITEM","Alert","alert","item2","emptyDate","r1","r2","Date","toISOString","split","StyleSheet","create","backgroundColor","borderRadius","padding","marginRight","marginTop","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ImageBackground,Alert, StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { Calendar,LocaleConfig, Agenda } from 'react-native-calendars';\r\nimport { Button } from 'react-native-paper';\r\nconst testIDs = require('./testIDs');\r\nconst image = { uri: \"https://user-images.githubusercontent.com/68040080/118057532-2117be00-b3c7-11eb-8264-a9330f02f954.png\" };\r\n//日本語化\r\n<Calendar\r\n  // Initially visible month. Default = Date()\r\n  current={'2012-03-01'}\r\n  // Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined\r\n  minDate={'2012-05-10'}\r\n  // Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined\r\n  maxDate={'2012-05-30'}\r\n  // Handler which gets executed on day press. Default = undefined\r\n  onDayPress={(day) => {console.log('selected day', day)}}\r\n  // Handler which gets executed on day long press. Default = undefined\r\n  onDayLongPress={(day) => {console.log('selected day', day)}}\r\n  // Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting\r\n  monthFormat={'yyyy MM'}\r\n  // Handler which gets executed when visible month changes in calendar. Default = undefined\r\n  onMonthChange={(month) => {console.log('month changed', month)}}\r\n  // Hide month navigation arrows. Default = false\r\n  hideArrows={true}\r\n  // Replace default arrows with custom ones (direction can be 'left' or 'right')\r\n  renderArrow={(direction) => (<Arrow/>)}\r\n  // Do not show days of other months in month page. Default = false\r\n  hideExtraDays={true}\r\n  // If hideArrows=false and hideExtraDays=false do not switch month when tapping on greyed out\r\n  // day from another month that is visible in calendar page. Default = false\r\n  disableMonthChange={true}\r\n  // If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday.\r\n  firstDay={1}\r\n  // Hide day names. Default = false\r\n  hideDayNames={true}\r\n  // Show week numbers to the left. Default = false\r\n  showWeekNumbers={true}\r\n  // Handler which gets executed when press arrow icon left. It receive a callback can go back month\r\n  onPressArrowLeft={subtractMonth => subtractMonth()}\r\n  // Handler which gets executed when press arrow icon right. It receive a callback can go next month\r\n  onPressArrowRight={addMonth => addMonth()}\r\n  // Disable left arrow. Default = false\r\n  disableArrowLeft={true}\r\n  // Disable right arrow. Default = false\r\n  disableArrowRight={true}\r\n  // Disable all touch events for disabled days. can be override with disableTouchEvent in markedDates\r\n  disableAllTouchEventsForDisabledDays={true}\r\n  // Replace default month and year title with custom one. the function receive a date as parameter.\r\n  renderHeader={(date) => {/*Return JSX*/}}\r\n  // Enable the option to swipe between months. Default = false\r\n  enableSwipeMonths={true}\r\n/>\r\nLocaleConfig.locales.jp = {\r\n  monthNames: [\r\n    '1月',\r\n    '2月',\r\n    '3月',\r\n    '4月',\r\n    '5月',\r\n    '6月',\r\n    '7月',\r\n    '8月',\r\n    '9月',\r\n    '10月',\r\n    '11月',\r\n    '12月',\r\n  ],\r\n  monthNamesShort: [\r\n    '1月',\r\n    '2月',\r\n    '3月',\r\n    '4月',\r\n    '5月',\r\n    '6月',\r\n    '7月',\r\n    '8月',\r\n    '9月',\r\n    '10月',\r\n    '11月',\r\n    '12月',\r\n  ],\r\n  dayNames: [\r\n    '日曜日',\r\n    '月曜日',\r\n    '火曜日',\r\n    '水曜日',\r\n    '木曜日',\r\n    '金曜日',\r\n    '土曜日',\r\n  ],\r\n  dayNamesShort: ['日', '月', '火', '水', '木', '金', '土'],\r\n};\r\nLocaleConfig.defaultLocale = 'jp';\r\nexport default class AgendaScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    /**\r\n     * ITEMの取得\r\n     */\r\n    this.state = {\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Agenda\r\n          testID={testIDs.agenda.CONTAINER}\r\n          items={this.state.items}\r\n          //時間のロード\r\n          loadItemsForMonth={this.loadItems.bind(this)}\r\n          //開始日時\r\n          selected={'2021-05-24'}\r\n          //表示用データの表示\r\n          renderItem={this.renderItem.bind(this)}\r\n          renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n          rowHasChanged={this.rowHasChanged.bind(this)}\r\n          firstDay={1}\r\n          // markingType={'period'}\r\n          // markedDates={{\r\n          //    '2017-05-08': {textColor: '#43515c'},\r\n          //    '2017-05-09': {textColor: '#43515c'},\r\n          //    '2017-05-14': {startingDay: true, endingDay: true, color: 'blue'},\r\n          //    '2017-05-21': {startingDay: true, color: 'blue'},\r\n          //    '2017-05-22': {endingDay: true, color: 'gray'},\r\n          //    '2017-05-24': {startingDay: true, color: 'gray'},\r\n          //    '2017-05-25': {color: 'gray'},\r\n          //    '2017-05-26': {endingDay: true, color: 'gray'}}}\r\n          // monthFormat={'yyyy'}\r\n          // theme={{calendarBackground: 'red', agendaKnobColor: 'green'}}\r\n          renderDay={(day, item) => (<Text>{day ? '': ''}</Text>)}\r\n          // hideExtraDays={false}\r\n        />\r\n        <Button\r\n          icon=\"camera\"\r\n          mode=\"contained\"\r\n          onPress={() => console.log('Pressed')}>\r\n          <Text>Press me</Text>\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n////\r\n  loadItems(day) {\r\n    setTimeout(() => {\r\n      //strTime = this.timeToString(time);\r\n      //this.state.items[\"\"].push(<Button>sssssssssssssss</Button>)\r\n      let count = 0;\r\n      for (let i = -1; i < 2; i++) {\r\n        const time = day.timestamp + i * 24 * 60 * 60 * 1000;\r\n        const strTime = this.timeToString(time);\r\n\r\n        if (!this.state.items[strTime]) {\r\n          this.state.items[strTime] = [];\r\n          //予定内容の設定\r\n          const numItems = Math.floor(Math.random() * 10 + 1); //日別の予定設定\r\n          for (let j = 0; j < numItems; j++) {\r\n            if (j === 0) {\r\n              this.state.items[strTime].push({\r\n                name: 'Workstyle Item for ' + strTime + ' #' + j,\r\n                height: 70,//Math.max(50, Math.floor(Math.random() * 150)),\r\n                header:1\r\n              });\r\n            }\r\n            this.state.items[strTime].push({\r\n              name: 'Workstyle Item for ' + strTime + ' #' + j,\r\n              height: 70,//Math.max(50, Math.floor(Math.random() * 150)),\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const newItems = {};\r\n      //キーの設定\r\n      Object.keys(this.state.items).forEach((key) => {\r\n        newItems[key] = this.state.items[key];\r\n      });\r\n      //render calender\r\n      this.setState({\r\n        items: newItems,\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * @function カレンダー明細の記載\r\n   * @params item:<any> item object\r\n   */\r\n  renderItem(item, i) {\r\n    console.log(\"----------------------------------\")\r\n    console.log(JSON.stringify(item))\r\n    return (\r\n      <>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            width: '100%',\r\n            flexDirection: 'row',\r\n            marginLeft: 190\r\n          }}>\r\n {item.header===1 && (\r\n        <Button\r\n          icon=\"camera\"\r\n          mode=\"contained\"\r\n          onPress={() => console.log('Pressed')}>\r\n          予定を確定する\r\n        </Button>\r\n )}\r\n        </View>\r\n        {}\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            width: '100%',\r\n            flexDirection: 'row',\r\n          }}>\r\n          {item.header===1 && (\r\n           <ImageBackground source={image} style={styles.image}>\r\n            <Text>{item.name}</Text>\r\n          </ImageBackground>\r\n          )}\r\n          {item.header!==1 && (\r\n             <TouchableOpacity\r\n            testID={testIDs.agenda.ITEM}\r\n            style={[styles.item, { height: item.height }]}\r\n            onPress={() => Alert.alert(item.name)}>\r\n            <Text>{item.name}</Text>\r\n          </TouchableOpacity>\r\n          )}\r\n\r\n          <TouchableOpacity\r\n            testID={testIDs.agenda.ITEM}\r\n            style={[styles.item2, { height: item.height }]}\r\n            onPress={() => Alert.alert(item.name)}>\r\n            <Text>{item.name}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderItemH(item, i) {\r\n    return (\r\n      <>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            width: '100%',\r\n            flexDirection: 'row',\r\n          }}>\r\n          、\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View style={styles.emptyDate}>\r\n        <Text>This is empty date!</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  rowHasChanged(r1, r2) {\r\n    return r1.name !== r2.name;\r\n  }\r\n\r\n  timeToString(time) {\r\n    const date = new Date(time);\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: 'white',\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  item2: {\r\n    backgroundColor: '#800080',\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  image: {\r\n    backgroundColor: '#800080',\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}