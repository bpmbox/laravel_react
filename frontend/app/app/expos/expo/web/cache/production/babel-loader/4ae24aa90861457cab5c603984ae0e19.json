{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _ from'lodash';import XDate from'xdate';import{sameMonth}from\"../../dateutils\";import{xdateToData,toMarkingFormat}from\"../../interface\";var commons=require(\"../commons\");var TOP_POSITION=65;var Presenter=function(){function Presenter(){var _this=this;_classCallCheck(this,Presenter);this._getIconDown=function(){return require(\"../../img/down.png\");};this._getIconUp=function(){return require(\"../../img/up.png\");};this.getButtonIcon=function(date){var showTodayButton=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;if(!showTodayButton){return undefined;}var icon=_this._isPastDate(date)?_this._getIconDown():_this._getIconUp();return icon;};this.setDate=function(props,date,newDate,updateState,updateSource){var isSameMonth=sameMonth(new XDate(date),new XDate(newDate));var buttonIcon=_this.getButtonIcon(date,props.showTodayButton);updateState(buttonIcon);_.invoke(props,'onDateChanged',date,updateSource);if(!isSameMonth){_.invoke(props,'onMonthChange',xdateToData(new XDate(date)),updateSource);}};this.setDisabled=function(showTodayButton,newDisabledValue,oldDisabledValue,updateState){if(!showTodayButton||newDisabledValue===oldDisabledValue){return;}updateState(newDisabledValue);};this.shouldAnimateTodayButton=function(props){return props.showTodayButton;};this._isToday=function(date){var today=toMarkingFormat(new XDate());return today===date;};this.getTodayDate=function(){return toMarkingFormat(new XDate());};this.getPositionAnimation=function(date){var todayBottomMargin=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var toValue=_this._isToday(date)?TOP_POSITION:-todayBottomMargin||-TOP_POSITION;return{toValue:toValue,tension:30,friction:8,useNativeDriver:true};};this.shouldAnimateOpacity=function(props){return props.disabledOpacity;};this.getOpacityAnimation=function(_ref,disabled){var _ref$disabledOpacity=_ref.disabledOpacity,disabledOpacity=_ref$disabledOpacity===void 0?0:_ref$disabledOpacity;return{toValue:disabled?disabledOpacity:1,duration:500,useNativeDriver:true};};this.getTodayFormatted=function(){var todayString=XDate.locales[XDate.defaultLocale].today||commons.todayString;var today=todayString.charAt(0).toUpperCase()+todayString.slice(1);return today;};}_createClass(Presenter,[{key:\"_isPastDate\",value:function _isPastDate(date){var today=new XDate();var d=new XDate(date);if(today.getFullYear()>d.getFullYear()){return true;}if(today.getFullYear()===d.getFullYear()){if(today.getMonth()>d.getMonth()){return true;}if(today.getMonth()===d.getMonth()){if(today.getDate()>d.getDate()){return true;}}}return false;}}]);return Presenter;}();export default Presenter;","map":{"version":3,"sources":["/app/node_modules/react-native-calendars/src/expandableCalendar/Context/Presenter.js"],"names":["_","XDate","sameMonth","xdateToData","toMarkingFormat","commons","require","TOP_POSITION","Presenter","_getIconDown","_getIconUp","getButtonIcon","date","showTodayButton","undefined","icon","_isPastDate","setDate","props","newDate","updateState","updateSource","isSameMonth","buttonIcon","invoke","setDisabled","newDisabledValue","oldDisabledValue","shouldAnimateTodayButton","_isToday","today","getTodayDate","getPositionAnimation","todayBottomMargin","toValue","tension","friction","useNativeDriver","shouldAnimateOpacity","disabledOpacity","getOpacityAnimation","disabled","duration","getTodayFormatted","todayString","locales","defaultLocale","charAt","toUpperCase","slice","d","getFullYear","getMonth","getDate"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport XDate from 'xdate';\n// @ts-expect-error\nimport { sameMonth } from '../../dateutils';\n// @ts-expect-error\nimport { xdateToData, toMarkingFormat } from '../../interface';\nconst commons = require('../commons');\nconst TOP_POSITION = 65;\nclass Presenter {\n    _isPastDate(date) {\n        const today = new XDate();\n        const d = new XDate(date);\n        if (today.getFullYear() > d.getFullYear()) {\n            return true;\n        }\n        if (today.getFullYear() === d.getFullYear()) {\n            if (today.getMonth() > d.getMonth()) {\n                return true;\n            }\n            if (today.getMonth() === d.getMonth()) {\n                if (today.getDate() > d.getDate()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    _getIconDown = () => {\n        return require('../../img/down.png');\n    };\n    _getIconUp = () => {\n        return require('../../img/up.png');\n    };\n    getButtonIcon = (date, showTodayButton = true) => {\n        if (!showTodayButton) {\n            return undefined;\n        }\n        const icon = this._isPastDate(date) ? this._getIconDown() : this._getIconUp();\n        return icon;\n    };\n    setDate = (props, date, newDate, updateState, updateSource) => {\n        const isSameMonth = sameMonth(new XDate(date), new XDate(newDate));\n        const buttonIcon = this.getButtonIcon(date, props.showTodayButton);\n        updateState(buttonIcon);\n        _.invoke(props, 'onDateChanged', date, updateSource);\n        if (!isSameMonth) {\n            _.invoke(props, 'onMonthChange', xdateToData(new XDate(date)), updateSource);\n        }\n    };\n    setDisabled = (showTodayButton, newDisabledValue, oldDisabledValue, updateState) => {\n        if (!showTodayButton || newDisabledValue === oldDisabledValue) {\n            return;\n        }\n        updateState(newDisabledValue);\n    };\n    shouldAnimateTodayButton = (props) => {\n        return props.showTodayButton;\n    };\n    _isToday = (date) => {\n        const today = toMarkingFormat(new XDate());\n        return today === date;\n    };\n    getTodayDate = () => {\n        return toMarkingFormat(new XDate());\n    };\n    getPositionAnimation = (date, todayBottomMargin = 0) => {\n        const toValue = this._isToday(date) ? TOP_POSITION : -todayBottomMargin || -TOP_POSITION;\n        return {\n            toValue,\n            tension: 30,\n            friction: 8,\n            useNativeDriver: true\n        };\n    };\n    shouldAnimateOpacity = (props) => {\n        return props.disabledOpacity;\n    };\n    getOpacityAnimation = ({ disabledOpacity = 0 }, disabled) => {\n        return {\n            toValue: disabled ? disabledOpacity : 1,\n            duration: 500,\n            useNativeDriver: true\n        };\n    };\n    getTodayFormatted = () => {\n        // @ts-expect-error\n        const todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n        const today = todayString.charAt(0).toUpperCase() + todayString.slice(1);\n        return today;\n    };\n}\nexport default Presenter;\n"]},"metadata":{},"sourceType":"module"}