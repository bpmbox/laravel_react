{"ast":null,"code":"var baseTimes=require(\"./_baseTimes\"),castFunction=require(\"./_castFunction\"),toInteger=require(\"./toInteger\");var MAX_SAFE_INTEGER=9007199254740991;var MAX_ARRAY_LENGTH=4294967295;var nativeMin=Math.min;function times(n,iteratee){n=toInteger(n);if(n<1||n>MAX_SAFE_INTEGER){return[];}var index=MAX_ARRAY_LENGTH,length=nativeMin(n,MAX_ARRAY_LENGTH);iteratee=castFunction(iteratee);n-=MAX_ARRAY_LENGTH;var result=baseTimes(length,iteratee);while(++index<n){iteratee(index);}return result;}module.exports=times;","map":{"version":3,"sources":["/app/node_modules/react-native-ratings/node_modules/lodash/times.js"],"names":["baseTimes","require","castFunction","toInteger","MAX_SAFE_INTEGER","MAX_ARRAY_LENGTH","nativeMin","Math","min","times","n","iteratee","index","length","result","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,SAAS,CAAGC,OAAO,gBAAvB,CACIC,YAAY,CAAGD,OAAO,mBAD1B,CAEIE,SAAS,CAAGF,OAAO,eAFvB,CAKA,GAAIG,CAAAA,gBAAgB,CAAG,gBAAvB,CAGA,GAAIC,CAAAA,gBAAgB,CAAG,UAAvB,CAGA,GAAIC,CAAAA,SAAS,CAAGC,IAAI,CAACC,GAArB,CAqBA,QAASC,CAAAA,KAAT,CAAeC,CAAf,CAAkBC,QAAlB,CAA4B,CAC1BD,CAAC,CAAGP,SAAS,CAACO,CAAD,CAAb,CACA,GAAIA,CAAC,CAAG,CAAJ,EAASA,CAAC,CAAGN,gBAAjB,CAAmC,CACjC,MAAO,EAAP,CACD,CACD,GAAIQ,CAAAA,KAAK,CAAGP,gBAAZ,CACIQ,MAAM,CAAGP,SAAS,CAACI,CAAD,CAAIL,gBAAJ,CADtB,CAGAM,QAAQ,CAAGT,YAAY,CAACS,QAAD,CAAvB,CACAD,CAAC,EAAIL,gBAAL,CAEA,GAAIS,CAAAA,MAAM,CAAGd,SAAS,CAACa,MAAD,CAASF,QAAT,CAAtB,CACA,MAAO,EAAEC,KAAF,CAAUF,CAAjB,CAAoB,CAClBC,QAAQ,CAACC,KAAD,CAAR,CACD,CACD,MAAOE,CAAAA,MAAP,CACD,CAEDC,MAAM,CAACC,OAAP,CAAiBP,KAAjB","sourcesContent":["var baseTimes = require('./_baseTimes'),\n    castFunction = require('./_castFunction'),\n    toInteger = require('./toInteger');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n"]},"metadata":{},"sourceType":"script"}