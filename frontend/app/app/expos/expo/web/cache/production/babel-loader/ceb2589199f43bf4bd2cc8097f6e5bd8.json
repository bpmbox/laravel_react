{"ast":null,"code":"import React from\"react\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Alert from\"react-native-web/dist/exports/Alert\";import{StatusBar}from\"expo-status-bar\";import{KeyboardAwareScrollView}from\"react-native-keyboard-aware-scroll-view\";import{Formik}from\"formik\";import{validationSchema}from\"./validation\";import{styles}from\"./styles\";import FormField from\"./FormField\";export default function RegisterForm(){function onSubmitHandler(values){Alert.alert(\"Register Successfully!\",\"Form data: \"+JSON.stringify(values));}function isFormValid(isValid,touched){return isValid&&Object.keys(touched).length!==0;}function handleSubmit(){Alert.alert(\"sssss\");}return React.createElement(React.Fragment,null,React.createElement(SafeAreaView,{style:styles.topSafeArea}),React.createElement(StatusBar,{style:\"light\"}),React.createElement(SafeAreaView,{style:styles.container},React.createElement(View,{style:styles.header},React.createElement(Text,{style:styles.headerText},\"Register\")),React.createElement(KeyboardAwareScrollView,{style:styles.content,showsVerticalScrollIndicator:false,keyboardShouldPersistTaps:\"handled\",extraScrollHeight:140},React.createElement(Formik,{initialValues:{firstName:\"\",lastName:\"\",email:\"\",password:\"\",confirmPassword:\"\"},onSubmit:onSubmitHandler,validationSchema:validationSchema},function(_ref){var handleChange=_ref.handleChange,handleBlur=_ref.handleBlur,handleSubmit=_ref.handleSubmit,values=_ref.values,errors=_ref.errors,touched=_ref.touched,isValid=_ref.isValid;return React.createElement(React.Fragment,null,React.createElement(FormField,{field:\"firstName\",label:\"First Name\",autoCapitalize:\"words\",values:values,touched:touched,errors:errors,handleChange:handleChange,handleBlur:handleBlur}),React.createElement(FormField,{field:\"lastName\",label:\"Last Name\",autoCapitalize:\"words\",values:values,touched:touched,errors:errors,handleChange:handleChange,handleBlur:handleBlur}),React.createElement(FormField,{field:\"email\",label:\"Email Address\",values:values,touched:touched,errors:errors,handleChange:handleChange,handleBlur:handleBlur}),React.createElement(FormField,{field:\"password\",label:\"Password\",secureTextEntry:true,values:values,touched:touched,errors:errors,handleChange:handleChange,handleBlur:handleBlur}),React.createElement(FormField,{field:\"confirmPassword\",label:\"Confirm Password\",secureTextEntry:true,values:values,touched:touched,errors:errors,handleChange:handleChange,handleBlur:handleBlur}),React.createElement(TouchableOpacity,{disabled:!isFormValid(isValid,touched),onPress:handleSubmit},React.createElement(View,{style:[styles.button,{opacity:isFormValid(isValid,touched)?1:0.5}]},React.createElement(Text,{style:styles.buttonText},\"SUBMIT\"))));}))));}","map":{"version":3,"sources":["/app/examples/4-register-form/RegisterForm.js"],"names":["React","StatusBar","KeyboardAwareScrollView","Formik","validationSchema","styles","FormField","RegisterForm","onSubmitHandler","values","Alert","alert","JSON","stringify","isFormValid","isValid","touched","Object","keys","length","handleSubmit","topSafeArea","container","header","headerText","content","firstName","lastName","email","password","confirmPassword","handleChange","handleBlur","errors","button","opacity","buttonText"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  SafeAreaView,\n  View,\n  Text,\n  TouchableOpacity,\n  TextInput,\n  Alert,\n} from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { Formik } from \"formik\";\nimport { validationSchema } from \"./validation\";\nimport { styles } from \"./styles\";\nimport FormField from \"./FormField\";\n\nexport default function RegisterForm() {\n  function onSubmitHandler(values) {\n    // https://reactnative.dev/docs/alert\n    Alert.alert(\n      \"Register Successfully!\",\n      \"Form data: \" + JSON.stringify(values)\n    );\n  }\n\n  function isFormValid(isValid, touched) {\n    return isValid && Object.keys(touched).length !== 0;\n  }\n\n  function handleSubmit(){\n    Alert.alert(\"sssss\")\n  }\n\n  return (\n    <>\n      <SafeAreaView style={styles.topSafeArea} />\n\n      <StatusBar style=\"light\" />\n\n      <SafeAreaView style={styles.container}>\n        <View style={styles.header}>\n          <Text style={styles.headerText}>Register</Text>\n        </View>\n\n        {/* https://github.com/APSL/react-native-keyboard-aware-scroll-view */}\n        <KeyboardAwareScrollView\n          style={styles.content}\n          showsVerticalScrollIndicator={false}\n          keyboardShouldPersistTaps=\"handled\"\n          extraScrollHeight={140}\n        >\n          {/* https://formik.org/docs/overview */}\n          <Formik\n            initialValues={{\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\",\n              password: \"\",\n              confirmPassword: \"\",\n            }}\n            onSubmit={onSubmitHandler}\n            validationSchema={validationSchema}\n          >\n            {({\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              values,\n              errors,\n              touched,\n              isValid,\n            }) => (\n              <>\n                <FormField\n                  field=\"firstName\"\n                  label=\"First Name\"\n                  autoCapitalize=\"words\"\n                  values={values}\n                  touched={touched}\n                  errors={errors}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                />\n\n                <FormField\n                  field=\"lastName\"\n                  label=\"Last Name\"\n                  autoCapitalize=\"words\"\n                  values={values}\n                  touched={touched}\n                  errors={errors}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                />\n\n                <FormField\n                  field=\"email\"\n                  label=\"Email Address\"\n                  values={values}\n                  touched={touched}\n                  errors={errors}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                />\n\n                <FormField\n                  field=\"password\"\n                  label=\"Password\"\n                  secureTextEntry={true}\n                  values={values}\n                  touched={touched}\n                  errors={errors}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                />\n\n                <FormField\n                  field=\"confirmPassword\"\n                  label=\"Confirm Password\"\n                  secureTextEntry={true}\n                  values={values}\n                  touched={touched}\n                  errors={errors}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                />\n\n                <TouchableOpacity\n                  disabled={!isFormValid(isValid, touched)}\n                  onPress={handleSubmit}\n                >\n                  <View\n                    style={[\n                      styles.button,\n                      {\n                        opacity: isFormValid(isValid, touched) ? 1 : 0.5,\n                      },\n                    ]}\n                  >\n                    <Text style={styles.buttonText}>SUBMIT</Text>\n                  </View>\n                </TouchableOpacity>\n              </>\n            )}\n          </Formik>\n        </KeyboardAwareScrollView>\n      </SafeAreaView>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}