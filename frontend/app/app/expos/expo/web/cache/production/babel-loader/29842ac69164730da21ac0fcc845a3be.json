{"ast":null,"code":"var _=require('lodash');function shouldUpdate(a,b,paths){for(var i=0;i<paths.length;i++){var equals=_.isEqual(_.get(a,paths[i]),_.get(b,paths[i]));if(!equals){return true;}}return false;}function extractComponentProps(component,props,ignoreProps){var componentPropTypes=component.propTypes;if(componentPropTypes){var keys=Object.keys(componentPropTypes);var componentProps=_.chain(props).pickBy(function(_value,key){return _.includes(keys,key);}).omit(ignoreProps).value();return componentProps;}return{};}module.exports={shouldUpdate:shouldUpdate,extractComponentProps:extractComponentProps};","map":{"version":3,"sources":["/app/node_modules/react-native-calendars/src/component-updater.js"],"names":["_","require","shouldUpdate","a","b","paths","i","length","equals","isEqual","get","extractComponentProps","component","props","ignoreProps","componentPropTypes","propTypes","keys","Object","componentProps","chain","pickBy","_value","key","includes","omit","value","module","exports"],"mappings":"AAAA,GAAMA,CAAAA,CAAC,CAAGC,OAAO,CAAC,QAAD,CAAjB,CAEA,QAASC,CAAAA,YAAT,CAAsBC,CAAtB,CAAyBC,CAAzB,CAA4BC,KAA5B,CAAmC,CACjC,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,KAAK,CAACE,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACrC,GAAME,CAAAA,MAAM,CAAGR,CAAC,CAACS,OAAF,CAAUT,CAAC,CAACU,GAAF,CAAMP,CAAN,CAASE,KAAK,CAACC,CAAD,CAAd,CAAV,CAA8BN,CAAC,CAACU,GAAF,CAAMN,CAAN,CAASC,KAAK,CAACC,CAAD,CAAd,CAA9B,CAAf,CACA,GAAI,CAACE,MAAL,CAAa,CACX,MAAO,KAAP,CACD,CACF,CACD,MAAO,MAAP,CACD,CAED,QAASG,CAAAA,qBAAT,CAA+BC,SAA/B,CAA0CC,KAA1C,CAAiDC,WAAjD,CAA8D,CAC5D,GAAMC,CAAAA,kBAAkB,CAAGH,SAAS,CAACI,SAArC,CACA,GAAID,kBAAJ,CAAwB,CACtB,GAAME,CAAAA,IAAI,CAAGC,MAAM,CAACD,IAAP,CAAYF,kBAAZ,CAAb,CACA,GAAMI,CAAAA,cAAc,CAAGnB,CAAC,CAACoB,KAAF,CAAQP,KAAR,EACpBQ,MADoB,CACb,SAACC,MAAD,CAASC,GAAT,QAAiBvB,CAAAA,CAAC,CAACwB,QAAF,CAAWP,IAAX,CAAiBM,GAAjB,CAAjB,EADa,EAEpBE,IAFoB,CAEfX,WAFe,EAGpBY,KAHoB,EAAvB,CAIA,MAAOP,CAAAA,cAAP,CACD,CACD,MAAO,EAAP,CACD,CAEDQ,MAAM,CAACC,OAAP,CAAiB,CACf1B,YAAY,CAAZA,YADe,CAEfS,qBAAqB,CAArBA,qBAFe,CAAjB","sourcesContent":["const _ = require('lodash');\n\nfunction shouldUpdate(a, b, paths) {\n  for (let i = 0; i < paths.length; i++) {\n    const equals = _.isEqual(_.get(a, paths[i]), _.get(b, paths[i]));\n    if (!equals) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction extractComponentProps(component, props, ignoreProps) {\n  const componentPropTypes = component.propTypes;\n  if (componentPropTypes) {\n    const keys = Object.keys(componentPropTypes);\n    const componentProps = _.chain(props)\n      .pickBy((_value, key) => _.includes(keys, key))\n      .omit(ignoreProps)\n      .value();\n    return componentProps;\n  }\n  return {};\n}\n\nmodule.exports = {\n  shouldUpdate,\n  extractComponentProps\n};\n"]},"metadata":{},"sourceType":"script"}