{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import _ from'lodash';import PropTypes from'prop-types';import XDate from'xdate';import React,{Component}from'react';import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import View from\"react-native-web/dist/exports/View\";import FlatList from\"react-native-web/dist/exports/FlatList\";import{extractComponentProps}from\"../../component-updater\";import{sameDate}from\"../../dateutils\";import{toMarkingFormat}from\"../../interface\";import styleConstructor from\"./style\";import Reservation from\"./reservation\";var ReservationList=function(_Component){_inherits(ReservationList,_Component);var _super=_createSuper(ReservationList);function ReservationList(props){var _this;_classCallCheck(this,ReservationList);_this=_super.call(this,props);_this.list=React.createRef();_this.onScroll=function(event){var yOffset=event.nativeEvent.contentOffset.y;_.invoke(_this.props,'onScroll',yOffset);var topRowOffset=0;var topRow;for(topRow=0;topRow<_this.heights.length;topRow++){if(topRowOffset+_this.heights[topRow]/2>=yOffset){break;}topRowOffset+=_this.heights[topRow];}var row=_this.state.reservations[topRow];if(!row)return;var day=row.day;var dateIsSame=sameDate(day,_this.selectedDay);if(!dateIsSame&&_this.scrollOver){_this.selectedDay=day.clone();_.invoke(_this.props,'onDayChange',day.clone());}};_this.onMoveShouldSetResponderCapture=function(){_this.onListTouch();return false;};_this.renderRow=function(_ref){var item=_ref.item,index=_ref.index;var reservationProps=extractComponentProps(Reservation,_this.props);return React.createElement(View,{onLayout:_this.onRowLayoutChange.bind(_assertThisInitialized(_this),index)},React.createElement(Reservation,_extends({},reservationProps,{item:item})));};_this.keyExtractor=function(_item,index){return String(index);};_this.style=styleConstructor(props.theme);_this.state={reservations:[]};_this.heights=[];_this.selectedDay=props.selectedDay;_this.scrollOver=true;return _this;}_createClass(ReservationList,[{key:\"componentDidMount\",value:function componentDidMount(){this.updateDataSource(this.getReservations(this.props).reservations);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this2=this;if(prevProps!==this.props){if(!sameDate(prevProps.topDay,this.props.topDay)){this.setState({reservations:[]},function(){return _this2.updateReservations(_this2.props);});}else{this.updateReservations(this.props);}}}},{key:\"updateDataSource\",value:function updateDataSource(reservations){this.setState({reservations:reservations});}},{key:\"updateReservations\",value:function updateReservations(props){var selectedDay=props.selectedDay;var reservations=this.getReservations(props);if(this.list&&!sameDate(selectedDay,this.selectedDay)){var _this$list,_this$list$current;var scrollPosition=0;for(var i=0;i<reservations.scrollPosition;i++){scrollPosition+=this.heights[i]||0;}this.scrollOver=false;(_this$list=this.list)==null?void 0:(_this$list$current=_this$list.current)==null?void 0:_this$list$current.scrollToOffset({offset:scrollPosition,animated:true});}this.selectedDay=selectedDay;this.updateDataSource(reservations.reservations);}},{key:\"getReservationsForDay\",value:function getReservationsForDay(iterator,props){var day=iterator.clone();var res=props.reservations[toMarkingFormat(day)];if(res&&res.length){return res.map(function(reservation,i){return{reservation:reservation,date:i?undefined:day,day:day};});}else if(res){return[{date:iterator.clone(),day:day}];}else{return false;}}},{key:\"getReservations\",value:function getReservations(props){var selectedDay=props.selectedDay,showOnlySelectedDayItems=props.showOnlySelectedDayItems;if(!props.reservations||!selectedDay){return{reservations:[],scrollPosition:0};}var reservations=[];if(this.state.reservations&&this.state.reservations.length){var _iterator=this.state.reservations[0].day.clone();while(_iterator.getTime()<selectedDay.getTime()){var res=this.getReservationsForDay(_iterator,props);if(!res){reservations=[];break;}else{reservations=reservations.concat(res);}_iterator.addDays(1);}}var scrollPosition=reservations.length;var iterator=selectedDay.clone();if(showOnlySelectedDayItems){var _res=this.getReservationsForDay(iterator,props);if(_res){reservations=_res;}iterator.addDays(1);}else{for(var i=0;i<31;i++){var _res2=this.getReservationsForDay(iterator,props);if(_res2){reservations=reservations.concat(_res2);}iterator.addDays(1);}}return{reservations:reservations,scrollPosition:scrollPosition};}},{key:\"onListTouch\",value:function onListTouch(){this.scrollOver=true;}},{key:\"onRowLayoutChange\",value:function onRowLayoutChange(index,event){this.heights[index]=event.nativeEvent.layout.height;}},{key:\"render\",value:function render(){var _this$props=this.props,reservations=_this$props.reservations,selectedDay=_this$props.selectedDay,theme=_this$props.theme,style=_this$props.style;if(!reservations||!reservations[toMarkingFormat(selectedDay)]){if(_.isFunction(this.props.renderEmptyData)){return _.invoke(this.props,'renderEmptyData');}return React.createElement(ActivityIndicator,{style:this.style.indicator,color:theme==null?void 0:theme.indicatorColor});}return React.createElement(FlatList,{ref:this.list,style:style,contentContainerStyle:this.style.content,data:this.state.reservations,renderItem:this.renderRow,keyExtractor:this.keyExtractor,showsVerticalScrollIndicator:false,scrollEventThrottle:200,onMoveShouldSetResponderCapture:this.onMoveShouldSetResponderCapture,onScroll:this.onScroll,refreshControl:this.props.refreshControl,refreshing:this.props.refreshing,onRefresh:this.props.onRefresh,onScrollBeginDrag:this.props.onScrollBeginDrag,onScrollEndDrag:this.props.onScrollEndDrag,onMomentumScrollBegin:this.props.onMomentumScrollBegin,onMomentumScrollEnd:this.props.onMomentumScrollEnd});}}]);return ReservationList;}(Component);ReservationList.displayName='IGNORE';ReservationList.propTypes=_objectSpread(_objectSpread({},Reservation.propTypes),{},{reservations:PropTypes.object,selectedDay:PropTypes.instanceOf(XDate),topDay:PropTypes.instanceOf(XDate),showOnlySelectedDayItems:PropTypes.bool,onDayChange:PropTypes.func,renderEmptyData:PropTypes.func,onScroll:PropTypes.func,onScrollBeginDrag:PropTypes.func,onScrollEndDrag:PropTypes.func,onMomentumScrollBegin:PropTypes.func,onMomentumScrollEnd:PropTypes.func,refreshControl:PropTypes.element,refreshing:PropTypes.bool,onRefresh:PropTypes.func});ReservationList.defaultProps={refreshing:false,selectedDay:new XDate(true)};export default ReservationList;","map":{"version":3,"sources":["/app/node_modules/react-native-calendars/src/agenda/reservation-list/index.js"],"names":["_","PropTypes","XDate","React","Component","extractComponentProps","sameDate","toMarkingFormat","styleConstructor","Reservation","ReservationList","props","list","createRef","onScroll","event","yOffset","nativeEvent","contentOffset","y","invoke","topRowOffset","topRow","heights","length","row","state","reservations","day","dateIsSame","selectedDay","scrollOver","clone","onMoveShouldSetResponderCapture","onListTouch","renderRow","item","index","reservationProps","onRowLayoutChange","bind","keyExtractor","_item","String","style","theme","updateDataSource","getReservations","prevProps","topDay","setState","updateReservations","scrollPosition","i","current","scrollToOffset","offset","animated","iterator","res","map","reservation","date","undefined","showOnlySelectedDayItems","getTime","getReservationsForDay","concat","addDays","layout","height","isFunction","renderEmptyData","indicator","indicatorColor","content","refreshControl","refreshing","onRefresh","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","displayName","propTypes","object","instanceOf","bool","onDayChange","func","element","defaultProps"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { ActivityIndicator, View, FlatList } from 'react-native';\n// @ts-expect-error\nimport { extractComponentProps } from '../../component-updater';\n// @ts-expect-error\nimport { sameDate } from '../../dateutils';\n// @ts-expect-error\nimport { toMarkingFormat } from '../../interface';\nimport styleConstructor from './style';\nimport Reservation from './reservation';\nclass ReservationList extends Component {\n    static displayName = 'IGNORE';\n    static propTypes = {\n        ...Reservation.propTypes,\n        /** the list of items that have to be displayed in agenda. If you want to render item as empty date\n        the value of date key kas to be an empty array []. If there exists no value for date key it is\n        considered that the date in question is not yet loaded */\n        reservations: PropTypes.object,\n        selectedDay: PropTypes.instanceOf(XDate),\n        topDay: PropTypes.instanceOf(XDate),\n        /** Show items only for the selected day. Default = false */\n        showOnlySelectedDayItems: PropTypes.bool,\n        /** callback that gets called when day changes while scrolling agenda list */\n        onDayChange: PropTypes.func,\n        /** specify what should be rendered instead of ActivityIndicator */\n        renderEmptyData: PropTypes.func,\n        /** onScroll ListView event */\n        onScroll: PropTypes.func,\n        /** Called when the user begins dragging the agenda list **/\n        onScrollBeginDrag: PropTypes.func,\n        /** Called when the user stops dragging the agenda list **/\n        onScrollEndDrag: PropTypes.func,\n        /** Called when the momentum scroll starts for the agenda list **/\n        onMomentumScrollBegin: PropTypes.func,\n        /** Called when the momentum scroll stops for the agenda list **/\n        onMomentumScrollEnd: PropTypes.func,\n        /** A RefreshControl component, used to provide pull-to-refresh functionality for the ScrollView */\n        refreshControl: PropTypes.element,\n        /** Set this true while waiting for new data from a refresh */\n        refreshing: PropTypes.bool,\n        /** If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make sure to also set the refreshing prop correctly */\n        onRefresh: PropTypes.func\n    };\n    static defaultProps = {\n        refreshing: false,\n        selectedDay: new XDate(true)\n    };\n    style;\n    heights;\n    selectedDay;\n    scrollOver;\n    list = React.createRef();\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n        this.state = {\n            reservations: []\n        };\n        this.heights = [];\n        this.selectedDay = props.selectedDay;\n        this.scrollOver = true;\n    }\n    componentDidMount() {\n        this.updateDataSource(this.getReservations(this.props).reservations);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps !== this.props) {\n            if (!sameDate(prevProps.topDay, this.props.topDay)) {\n                this.setState({\n                    reservations: []\n                }, () => this.updateReservations(this.props));\n            }\n            else {\n                this.updateReservations(this.props);\n            }\n        }\n    }\n    updateDataSource(reservations) {\n        this.setState({\n            reservations\n        });\n    }\n    updateReservations(props) {\n        const { selectedDay } = props;\n        const reservations = this.getReservations(props);\n        if (this.list && !sameDate(selectedDay, this.selectedDay)) {\n            let scrollPosition = 0;\n            for (let i = 0; i < reservations.scrollPosition; i++) {\n                scrollPosition += this.heights[i] || 0;\n            }\n            this.scrollOver = false;\n            this.list?.current?.scrollToOffset({ offset: scrollPosition, animated: true });\n        }\n        this.selectedDay = selectedDay;\n        this.updateDataSource(reservations.reservations);\n    }\n    getReservationsForDay(iterator, props) {\n        const day = iterator.clone();\n        const res = props.reservations[toMarkingFormat(day)];\n        if (res && res.length) {\n            return res.map((reservation, i) => {\n                return {\n                    reservation,\n                    date: i ? undefined : day,\n                    day\n                };\n            });\n        }\n        else if (res) {\n            return [\n                {\n                    date: iterator.clone(),\n                    day\n                }\n            ];\n        }\n        else {\n            return false;\n        }\n    }\n    getReservations(props) {\n        const { selectedDay, showOnlySelectedDayItems } = props;\n        if (!props.reservations || !selectedDay) {\n            return { reservations: [], scrollPosition: 0 };\n        }\n        let reservations = [];\n        if (this.state.reservations && this.state.reservations.length) {\n            const iterator = this.state.reservations[0].day.clone();\n            while (iterator.getTime() < selectedDay.getTime()) {\n                const res = this.getReservationsForDay(iterator, props);\n                if (!res) {\n                    reservations = [];\n                    break;\n                }\n                else {\n                    reservations = reservations.concat(res);\n                }\n                iterator.addDays(1);\n            }\n        }\n        const scrollPosition = reservations.length;\n        const iterator = selectedDay.clone();\n        if (showOnlySelectedDayItems) {\n            const res = this.getReservationsForDay(iterator, props);\n            if (res) {\n                reservations = res;\n            }\n            iterator.addDays(1);\n        }\n        else {\n            for (let i = 0; i < 31; i++) {\n                const res = this.getReservationsForDay(iterator, props);\n                if (res) {\n                    reservations = reservations.concat(res);\n                }\n                iterator.addDays(1);\n            }\n        }\n        return { reservations, scrollPosition };\n    }\n    onScroll = (event) => {\n        const yOffset = event.nativeEvent.contentOffset.y;\n        _.invoke(this.props, 'onScroll', yOffset);\n        let topRowOffset = 0;\n        let topRow;\n        for (topRow = 0; topRow < this.heights.length; topRow++) {\n            if (topRowOffset + this.heights[topRow] / 2 >= yOffset) {\n                break;\n            }\n            topRowOffset += this.heights[topRow];\n        }\n        const row = this.state.reservations[topRow];\n        if (!row)\n            return;\n        const day = row.day;\n        const dateIsSame = sameDate(day, this.selectedDay);\n        if (!dateIsSame && this.scrollOver) {\n            this.selectedDay = day.clone();\n            _.invoke(this.props, 'onDayChange', day.clone());\n        }\n    };\n    onListTouch() {\n        this.scrollOver = true;\n    }\n    onRowLayoutChange(index, event) {\n        this.heights[index] = event.nativeEvent.layout.height;\n    }\n    onMoveShouldSetResponderCapture = () => {\n        this.onListTouch();\n        return false;\n    };\n    renderRow = ({ item, index }) => {\n        const reservationProps = extractComponentProps(Reservation, this.props);\n        return (<View onLayout={this.onRowLayoutChange.bind(this, index)}>\n        <Reservation {...reservationProps} item={item}/>\n      </View>);\n    };\n    keyExtractor = (_item, index) => String(index);\n    render() {\n        const { reservations, selectedDay, theme, style } = this.props;\n        if (!reservations || !reservations[toMarkingFormat(selectedDay)]) {\n            if (_.isFunction(this.props.renderEmptyData)) {\n                return _.invoke(this.props, 'renderEmptyData');\n            }\n            return <ActivityIndicator style={this.style.indicator} color={theme?.indicatorColor}/>;\n        }\n        return (<FlatList ref={this.list} style={style} contentContainerStyle={this.style.content} data={this.state.reservations} renderItem={this.renderRow} keyExtractor={this.keyExtractor} showsVerticalScrollIndicator={false} scrollEventThrottle={200} onMoveShouldSetResponderCapture={this.onMoveShouldSetResponderCapture} onScroll={this.onScroll} refreshControl={this.props.refreshControl} refreshing={this.props.refreshing} onRefresh={this.props.onRefresh} onScrollBeginDrag={this.props.onScrollBeginDrag} onScrollEndDrag={this.props.onScrollEndDrag} onMomentumScrollBegin={this.props.onMomentumScrollBegin} onMomentumScrollEnd={this.props.onMomentumScrollEnd}/>);\n    }\n}\nexport default ReservationList;\n"]},"metadata":{},"sourceType":"module"}