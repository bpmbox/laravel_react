{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _taggedTemplateLiteralLoose from\"@babel/runtime/helpers/taggedTemplateLiteralLoose\";function _templateObject2(){var data=_taggedTemplateLiteralLoose([\"\\n  query getStarship($id: ID!) {\\n    starship(id: $id) {\\n      id\\n      name\\n      model\\n      starshipClass\\n      manufacturers\\n      length\\n      crew\\n      costInCredits\\n      consumables\\n      filmConnection {\\n        films {\\n          id\\n          title\\n        }\\n      }\\n    }\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteralLoose([\"\\n  query listStarships {\\n    allStarships {\\n      starships {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import Button from\"react-native-web/dist/exports/Button\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{Picker}from'@react-native-picker/picker';import{NavigationContainer}from\"@react-navigation/native\";import{createStackNavigator}from\"@react-navigation/stack\";import{createBottomTabNavigator}from\"@react-navigation/bottom-tabs\";import gql from'graphql-tag';import{ApolloClient}from'apollo-client';import{InMemoryCache}from'apollo-cache-inmemory';import{createHttpLink}from'apollo-link-http';import{ApolloProvider,useQuery}from\"react-apollo\";import{apolloClient}from\"./apollo\";var PokemonStack=createStackNavigator();var MoveStack=createStackNavigator();var apploStack=createStackNavigator();var stackScreenOptions={headerShown:false,gestureEnabled:true};function PokemonStackScreen(){return React.createElement(PokemonStack.Navigator,{screenOptions:stackScreenOptions},React.createElement(PokemonStack.Screen,{name:\"PokemonList\",component:PokemonList}),React.createElement(PokemonStack.Screen,{name:\"PokemonDetail\",component:PokemonDetail}));}var defaultStarshipId='c3RhcnNoaXBzOjM=';var LIST_STARSHIPTS=gql(_templateObject());var GET_STARSHIP=gql(_templateObject2());function RootComponent(props){console.log(defaultStarshipId);var _useState=useState(defaultStarshipId),_useState2=_slicedToArray(_useState,2),starshipId=_useState2[0],setStarshipId=_useState2[1];var _useQuery=useQuery(GET_STARSHIP,{variables:{id:starshipId}}),data=_useQuery.data,error=_useQuery.error,loading=_useQuery.loading;if(error){console.log('Error fetching starship',error);}return React.createElement(View,{style:styles.container},React.createElement(View,{style:styles.section},React.createElement(StarshipPicker,{starshipId:starshipId,onStarshipChange:setStarshipId})),loading?React.createElement(ActivityIndicator,{color:\"#333\"}):React.createElement(StarshipDetails,{starship:data.starship}));}function StarshipPicker(props){var _useQuery2=useQuery(LIST_STARSHIPTS),data=_useQuery2.data,error=_useQuery2.error,loading=_useQuery2.loading;console.log(data);if(error){console.log('Error listing starships',error);}if(loading)return null;var starships=data.allStarships.starships;console.log(starships);return React.createElement(Picker,{selectedValue:props.starshipId,onValueChange:props.onStarshipChange},\"//mapview\",starships.map(function(starship){return React.createElement(Picker.Item,{key:starship.id,label:starship.name,value:starship.id});}));}function StarshipDetails(_ref){var starship=_ref.starship;console.log(starship);return React.createElement(React.Fragment,null,React.createElement(View,null,React.createElement(Text,null,\"aaaa\")),React.createElement(View,{style:styles.section},React.createElement(Text,{style:styles.starshipName},\"ssssssssssssssssssss\",starship.name),React.createElement(Text,{style:styles.starshipModel},starship.model)),React.createElement(View,{style:styles.section},React.createElement(Text,{style:styles.label},\"Operational abilities\"),React.createElement(Text,null,\"- \",starship.crew,\" crew members\"),React.createElement(Text,null,\"- \",starship.consumables,\" without restocking\")),React.createElement(View,null,React.createElement(Text,{style:styles.label},\"Ship attributes\"),React.createElement(Text,null,\"- \",starship.length,\"m long\"),React.createElement(Text,null,\"- \",starship.costInCredits,\" credits\")),React.createElement(View,{style:styles.section},React.createElement(Text,{style:styles.label},\"Manufacturers\"),starship.manufacturers.map(function(manufacturer){return React.createElement(Text,{key:manufacturer},\"- \",manufacturer);})),React.createElement(View,{style:styles.section},React.createElement(Text,{style:styles.label},\"Appeared in\"),starship.filmConnection.films.map(function(film){return React.createElement(Text,{key:film.id},\"- \",film.title);})));}var styles=StyleSheet.create({loadingContainer:{flex:1,justifyContent:'center',alignItems:'center'},container:{flex:1,justifyContent:'center',paddingHorizontal:50},label:{marginBottom:2,fontSize:12,fontWeight:'bold',textTransform:'uppercase'},section:{marginVertical:12},starshipName:{fontSize:32,fontWeight:'bold'},starshipModel:{fontStyle:'italic'}});export default function Appl(){return React.createElement(ApolloProvider,{client:apolloClient},React.createElement(RootComponent,null));}","map":{"version":3,"sources":["/app/examples/with-apollo/Appl.js"],"names":["React","useState","Picker","NavigationContainer","createStackNavigator","createBottomTabNavigator","gql","ApolloClient","InMemoryCache","createHttpLink","ApolloProvider","useQuery","apolloClient","PokemonStack","MoveStack","apploStack","stackScreenOptions","headerShown","gestureEnabled","PokemonStackScreen","PokemonList","PokemonDetail","defaultStarshipId","LIST_STARSHIPTS","GET_STARSHIP","RootComponent","props","console","log","starshipId","setStarshipId","variables","id","data","error","loading","styles","container","section","starship","StarshipPicker","starships","allStarships","onStarshipChange","map","name","StarshipDetails","starshipName","starshipModel","model","label","crew","consumables","length","costInCredits","manufacturers","manufacturer","filmConnection","films","film","title","StyleSheet","create","loadingContainer","flex","justifyContent","alignItems","paddingHorizontal","marginBottom","fontSize","fontWeight","textTransform","marginVertical","fontStyle","Appl"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Text, View, SafeAreaView, ActivityIndicator, StyleSheet } from 'react-native';\n//import { ApolloProvider, useQuery, gql } from '@apollo/client';\nimport { Picker } from '@react-native-picker/picker';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport gql from 'graphql-tag';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloProvider,useQuery } from \"react-apollo\";\n////\nimport { apolloClient } from './apollo';\n\nconst PokemonStack = createStackNavigator();\nconst MoveStack = createStackNavigator();\nconst apploStack = createStackNavigator();\nconst stackScreenOptions = {\n  headerShown: false,\n  gestureEnabled: true,\n};\n\nfunction PokemonStackScreen() {\n  return (\n    <PokemonStack.Navigator screenOptions={stackScreenOptions}>\n      <PokemonStack.Screen name=\"PokemonList\" component={PokemonList} />\n      <PokemonStack.Screen name=\"PokemonDetail\" component={PokemonDetail} />\n    </PokemonStack.Navigator>\n  );\n}\n\n// Imperial I-class Star Destroyer\nconst defaultStarshipId = 'c3RhcnNoaXBzOjM=';\n\nconst LIST_STARSHIPTS = gql`\n  query listStarships {\n    allStarships {\n      starships {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst GET_STARSHIP = gql`\n  query getStarship($id: ID!) {\n    starship(id: $id) {\n      id\n      name\n      model\n      starshipClass\n      manufacturers\n      length\n      crew\n      costInCredits\n      consumables\n      filmConnection {\n        films {\n          id\n          title\n        }\n      }\n    }\n  }\n`;\n\nfunction RootComponent(props) {\n  console.log(defaultStarshipId);\n  const [starshipId, setStarshipId] = useState(defaultStarshipId);\n  const { data, error, loading } = useQuery(GET_STARSHIP, {\n    variables: { id: starshipId },\n  });\n\n  if (error) { console.log('Error fetching starship', error); }\n//set onstathipchent setstate\n  return (\n    <View style={styles.container}>\n      <View style={styles.section}>\n        <StarshipPicker\n          starshipId={starshipId}\n          onStarshipChange={setStarshipId}\n        />\n      </View>\n      {loading ? (\n        <ActivityIndicator color='#333' />\n      ) : (\n        <StarshipDetails starship={data.starship} />\n      )}\n    </View>\n  );\n}\n\nfunction StarshipPicker(props) {\n  //graphqlでデータ取得\n  const { data, error, loading } = useQuery(LIST_STARSHIPTS);\n  console.log(data);\n\n  if (error) { console.log('Error listing starships', error) }\n  if (loading) return null;\n\n  const { starships } = data.allStarships;\n  console.log(starships)\n//pickerの表示\n  return (\n    <Picker\n      selectedValue={props.starshipId}\n      onValueChange={props.onStarshipChange}\n    >\n    //mapview\n      {starships.map(starship => (\n        <Picker.Item key={starship.id} label={starship.name} value={starship.id} />\n      ))}\n    </Picker>\n  )\n}\n\nfunction StarshipDetails({ starship }) {\n  console.log(starship)\n  return (\n    <>\n      <View><Text>aaaa</Text></View>\n      <View style={styles.section}>\n        <Text style={styles.starshipName}>ssssssssssssssssssss{starship.name}</Text>\n        <Text style={styles.starshipModel}>{starship.model}</Text>\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.label}>Operational abilities</Text>\n        <Text>- {starship.crew} crew members</Text>\n        <Text>- {starship.consumables} without restocking</Text>\n      </View>\n\n      <View>\n        <Text style={styles.label}>Ship attributes</Text>\n        <Text>- {starship.length}m long</Text>\n        <Text>- {starship.costInCredits} credits</Text>\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.label}>Manufacturers</Text>\n        {starship.manufacturers.map(manufacturer => (\n          <Text key={manufacturer}>- {manufacturer}</Text>\n        ))}\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.label}>Appeared in</Text>\n        {starship.filmConnection.films.map(film => (\n          <Text key={film.id}>- {film.title}</Text>\n        ))}\n      </View>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 50,\n  },\n  label: {\n    marginBottom: 2,\n    fontSize: 12,\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n  },\n  section: {\n    marginVertical: 12,\n  },\n  starshipName: {\n    fontSize: 32,\n    fontWeight: 'bold',\n  },\n  starshipModel: {\n    fontStyle: 'italic',\n  },\n});\n\nexport default function Appl() {\n  return (\n    <ApolloProvider client={apolloClient}>\n      <RootComponent />\n    </ApolloProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}