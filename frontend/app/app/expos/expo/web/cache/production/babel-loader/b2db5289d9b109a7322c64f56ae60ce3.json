{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useState}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import FlatList from\"react-native-web/dist/exports/FlatList\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Alert from\"react-native-web/dist/exports/Alert\";import{Avatar,ListItem,SearchBar}from\"react-native-elements\";import MainHeader from\"../components/MainHeader\";import PokemonType from\"../components/PokemonType\";import pokeballIcon from\"../../../assets/pokedex/pokeball.png\";import{FullPokemonsAPI}from\"../constants\";export default function PokemonList(_ref){var navigation=_ref.navigation;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),displayPokemons=_useState2[0],setDisplayPokemons=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),pokemons=_useState4[0],setPokemons=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),keyword=_useState8[0],setKeyword=_useState8[1];var renderItem=function renderItem(_ref2){var item=_ref2.item,index=_ref2.index;var pokemonTypes=item.field_pokemon_type.split(\", \");var PokemonTypeElement=pokemonTypes.map(function(type,index){return React.createElement(View,{key:index},React.createElement(PokemonType,{type:type}));});return React.createElement(ListItem,{bottomDivider:true,onPress:function onPress(){navigation.navigate(\"PokemonDetail\",{pokemon:displayPokemons[index]});}},React.createElement(Avatar,{source:item.uri?{uri:item.uri}:pokeballIcon,size:\"medium\"}),React.createElement(ListItem.Content,null,React.createElement(ListItem.Title,null,item.title_1),React.createElement(ListItem.Subtitle,{style:styles.listItemSubtitle},\"#\",item.number.length<=3?(\"00\"+item.number).slice(-3):item.number)),React.createElement(View,{style:{flexDirection:\"row\"}},PokemonTypeElement));};var searchPokemon=function searchPokemon(keyword){setKeyword(keyword);if(keyword==\"\"){setDisplayPokemons(pokemons);}else{var filteredPokemons=pokemons.filter(function(pokemon){return pokemon.title_1.toLowerCase().includes(keyword.toLowerCase());});setDisplayPokemons(filteredPokemons);}};useEffect(function(){var fetchData=function fetchData(url){var response,responseJson;return _regeneratorRuntime.async(function fetchData$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(fetch(url));case 3:response=_context.sent;_context.next=6;return _regeneratorRuntime.awrap(response.json());case 6:responseJson=_context.sent;setPokemons(responseJson);setDisplayPokemons(responseJson);setKeyword(\"\");setLoading(false);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](0);Alert.alert(\"Cannot connect to Server!\");case 16:case\"end\":return _context.stop();}}},null,null,[[0,13]],Promise);};fetchData(FullPokemonsAPI);},[]);return React.createElement(View,{style:{flex:1}},React.createElement(MainHeader,{title:\"Pokemons\",isMain:true,navigation:navigation}),React.createElement(SearchBar,{placeholder:\"Find Pokemon by name ...\",inputContainerStyle:{backgroundColor:\"#e9e9e9\"},containerStyle:{backgroundColor:\"transparent\"},lightTheme:true,round:true,value:keyword,onChangeText:searchPokemon}),!isLoading?React.createElement(FlatList,{data:displayPokemons,renderItem:renderItem,keyExtractor:function keyExtractor(item){return item.nid;},initialNumToRender:10}):React.createElement(ActivityIndicator,{animating:true,size:\"large\",style:{marginTop:20}}));}var styles=StyleSheet.create({listItemSubtitle:{marginTop:10,color:\"#939393\"}});","map":{"version":3,"sources":["/app/examples/12-pokedex/screens/PokemonList.js"],"names":["React","useEffect","useState","Avatar","ListItem","SearchBar","MainHeader","PokemonType","pokeballIcon","FullPokemonsAPI","PokemonList","navigation","displayPokemons","setDisplayPokemons","pokemons","setPokemons","isLoading","setLoading","keyword","setKeyword","renderItem","item","index","pokemonTypes","field_pokemon_type","split","PokemonTypeElement","map","type","navigate","pokemon","uri","title_1","styles","listItemSubtitle","number","length","slice","flexDirection","searchPokemon","filteredPokemons","filter","toLowerCase","includes","fetchData","url","fetch","response","json","responseJson","Alert","alert","flex","backgroundColor","nid","marginTop","StyleSheet","create","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  FlatList,\n  ActivityIndicator,\n  Alert,\n} from \"react-native\";\nimport { Avatar, ListItem, SearchBar } from \"react-native-elements\";\n\nimport MainHeader from \"../components/MainHeader\";\nimport PokemonType from \"../components/PokemonType\";\nimport pokeballIcon from \"../../../assets/pokedex/pokeball.png\";\nimport { FullPokemonsAPI } from \"../constants\";\n\nexport default function PokemonList({ navigation }) {\n  const [displayPokemons, setDisplayPokemons] = useState([]);\n  const [pokemons, setPokemons] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [keyword, setKeyword] = useState(\"\");\n\n  const renderItem = ({ item, index }) => {\n    const pokemonTypes = item.field_pokemon_type.split(\", \");\n    const PokemonTypeElement = pokemonTypes.map((type, index) => {\n      return (\n        <View key={index}>\n          <PokemonType type={type} />\n        </View>\n      );\n    });\n//ここで移動できればよい\n    return (\n      <ListItem\n        bottomDivider={true}\n        onPress={() => {\n          navigation.navigate(\"PokemonDetail\", {\n            pokemon: displayPokemons[index],\n          });\n        }}\n      >\n        <Avatar\n          source={item.uri ? { uri: item.uri } : pokeballIcon}\n          size=\"medium\"\n        />\n\n        <ListItem.Content>\n          <ListItem.Title>{item.title_1}</ListItem.Title>\n\n          <ListItem.Subtitle style={styles.listItemSubtitle}>\n            #\n            {item.number.length <= 3\n              ? (\"00\" + item.number).slice(-3)\n              : item.number}\n          </ListItem.Subtitle>\n        </ListItem.Content>\n\n        <View style={{ flexDirection: \"row\" }}>{PokemonTypeElement}</View>\n      </ListItem>\n    );\n  };\n\n  const searchPokemon = (keyword) => {\n    setKeyword(keyword);\n\n    if (keyword == \"\") {\n      setDisplayPokemons(pokemons);\n    } else {\n      const filteredPokemons = pokemons.filter((pokemon) => {\n        return pokemon.title_1.toLowerCase().includes(keyword.toLowerCase());\n      });\n      setDisplayPokemons(filteredPokemons);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async (url) => {\n      try {\n        const response = await fetch(url);\n        const responseJson = await response.json();\n\n        setPokemons(responseJson);\n        setDisplayPokemons(responseJson);\n        setKeyword(\"\");\n        setLoading(false);\n      } catch (error) {\n        Alert.alert(\"Cannot connect to Server!\");\n      }\n    };\n\n    fetchData(FullPokemonsAPI);\n  }, []);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <MainHeader\n        title=\"Pokemons\"\n        isMain={true}\n        navigation={navigation}\n      />\n\n      <SearchBar\n        placeholder=\"Find Pokemon by name ...\"\n        inputContainerStyle={{ backgroundColor: \"#e9e9e9\" }}\n        containerStyle={{ backgroundColor: \"transparent\" }}\n        lightTheme={true}\n        round={true}\n        value={keyword}\n        onChangeText={searchPokemon}\n      />\n\n      {!isLoading ? (\n        <FlatList\n          data={displayPokemons}\n          renderItem={renderItem}\n          keyExtractor={(item) => item.nid}\n          initialNumToRender={10}\n        />\n      ) : (\n        <ActivityIndicator animating size=\"large\" style={{ marginTop: 20 }} />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  listItemSubtitle: { marginTop: 10, color: \"#939393\" },\n});\n"]},"metadata":{},"sourceType":"module"}