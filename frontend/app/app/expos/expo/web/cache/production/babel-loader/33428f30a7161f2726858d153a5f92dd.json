{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import PropTypes from'prop-types';import{GiftedChat}from'react-native-gifted-chat';import FirebaseStorage from\"../data/FirebaseStorage\";var ChatScreen=function(_React$Component){_inherits(ChatScreen,_React$Component);var _super=_createSuper(ChatScreen);function ChatScreen(){var _this;_classCallCheck(this,ChatScreen);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={messages:[]};return _this;}_createClass(ChatScreen,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;FirebaseStorage.shared.on(function(message){return _this2.setState(function(previousState){return{messages:GiftedChat.append(previousState.messages,message)};});});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){FirebaseStorage.shared.off();}},{key:\"render\",value:function render(){return React.createElement(SafeAreaView,{style:{flex:1}},React.createElement(GiftedChat,{messages:this.state.messages,onSend:FirebaseStorage.shared.send,user:this.user}));}},{key:\"user\",get:function get(){console.log(this.props.route.params);var _this$props$route$par=this.props.route.params,name=_this$props$route$par.name,chinko=_this$props$route$par.chinko;return{name:name,_id:FirebaseStorage.shared.uid};}}]);return ChatScreen;}(React.Component);var styles=StyleSheet.create({});export default ChatScreen;","map":{"version":3,"sources":["/app/p0005/screens/ChatScreen.js"],"names":["React","PropTypes","GiftedChat","FirebaseStorage","ChatScreen","state","messages","shared","on","message","setState","previousState","append","off","flex","send","user","console","log","props","route","params","name","chinko","_id","uid","Component","styles","StyleSheet","create"],"mappings":"qgCAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,wPAEA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,MAAOC,CAAAA,eAAP,+B,GAMMC,CAAAA,U,0UAEJC,K,CAAQ,CACNC,QAAQ,CAAE,EADJ,C,mGAcc,iBAClBH,eAAe,CAACI,MAAhB,CAAuBC,EAAvB,CAA0B,SAAAC,OAAO,QAC/B,CAAA,MAAI,CAACC,QAAL,CAAc,SAAAC,aAAa,QAAK,CAC9BL,QAAQ,CAAEJ,UAAU,CAACU,MAAX,CAAkBD,aAAa,CAACL,QAAhC,CAA0CG,OAA1C,CADoB,CAAL,EAA3B,CAD+B,EAAjC,EAKH,C,mEAEsB,CACnBN,eAAe,CAACI,MAAhB,CAAuBM,GAAvB,GACH,C,uCAEQ,CACP,MAAO,qBAAC,YAAD,EAAc,KAAK,CAAE,CAACC,IAAI,CAAE,CAAP,CAArB,EACH,oBAAC,UAAD,EACM,QAAQ,CAAE,KAAKT,KAAL,CAAWC,QAD3B,CAEM,MAAM,CAAEH,eAAe,CAACI,MAAhB,CAAuBQ,IAFrC,CAGM,IAAI,CAAE,KAAKC,IAHjB,EADG,CAAP,CAOD,C,gCA9BU,CAETC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAA7B,EAFS,0BAGe,KAAKF,KAAL,CAAWC,KAAX,CAAiBC,MAHhC,CAGDC,IAHC,uBAGDA,IAHC,CAGKC,MAHL,uBAGKA,MAHL,CAIT,MAAO,CACLD,IAAI,CAAEA,IADD,CAELE,GAAG,CAAErB,eAAe,CAACI,MAAhB,CAAuBkB,GAFvB,CAAP,CAID,C,wBAdsBzB,KAAK,CAAC0B,S,EAuC/B,GAAMC,CAAAA,MAAM,CAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf,CAGA,cAAezB,CAAAA,UAAf","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, Platform, SafeAreaView } from 'react-native';\nimport PropTypes from 'prop-types'\nimport { GiftedChat } from 'react-native-gifted-chat'\n\nimport FirebaseStorage from '../data/FirebaseStorage';\n\ntype Props = {\n  name?: string,\n};\n\nclass ChatScreen extends React.Component<Props> {\n  \n  state = {\n    messages: [],\n  };\n\n  get user() {\n    //route parame に設定\n    console.log(this.props.route.params)\n    const { name ,chinko} = this.props.route.params;\n    return {\n      name: name,\n      _id: FirebaseStorage.shared.uid,\n    };\n  }\n\n    componentDidMount() {\n      FirebaseStorage.shared.on(message =>\n        this.setState(previousState => ({\n          messages: GiftedChat.append(previousState.messages, message),\n        }))\n      );\n  }\n  \n  componentWillUnmount() {\n      FirebaseStorage.shared.off();\n  }\n\n  render() {\n    return <SafeAreaView style={{flex: 1}}>\n        <GiftedChat\n              messages={this.state.messages}\n              onSend={FirebaseStorage.shared.send}\n              user={this.user}\n        />\n    </SafeAreaView>\n  }\n}\n\nconst styles = StyleSheet.create({\n});\n\nexport default ChatScreen;\n"]},"metadata":{},"sourceType":"module"}