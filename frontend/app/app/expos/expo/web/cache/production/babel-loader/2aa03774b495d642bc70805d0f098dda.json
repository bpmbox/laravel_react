{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from\"react\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import Image from\"react-native-web/dist/exports/Image\";import Switch from\"react-native-web/dist/exports/Switch\";import Platform from\"react-native-web/dist/exports/Platform\";import{StatusBar}from\"expo-status-bar\";import Constants from\"expo-constants\";import bulbOff from\"../../assets/the-light/bulb-off.jpg\";import bulbOn from\"../../assets/the-light/bulb-on.jpg\";export default function TheLight(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEnabled=_useState2[0],setIsEnabled=_useState2[1];var toggleSwitch=function toggleSwitch(){return setIsEnabled(function(previousState){return!previousState;});};return React.createElement(SafeAreaView,{style:styles.container},React.createElement(StatusBar,{style:\"light\"}),React.createElement(Image,{fadeDuration:0,source:isEnabled?bulbOn:bulbOff,style:styles.image}),React.createElement(Switch,{trackColor:{false:\"#fff\",true:\"#52d964\"},thumbColor:\"#fff\",onValueChange:toggleSwitch,value:isEnabled,style:styles.switch}));}var screenHeight=Dimensions.get(\"window\").height;var styles=StyleSheet.create({container:{flex:1,backgroundColor:\"black\",paddingTop:Constants.statusBarHeight},image:{maxWidth:\"100%\",maxHeight:screenHeight-Constants.statusBarHeight-150,resizeMode:\"contain\",marginBottom:20},switch:{alignSelf:\"center\",transform:Platform.OS===\"android\"?[{scale:1.5}]:[]}});","map":{"version":3,"sources":["/app/examples/3-the-light/1.TheLight.js"],"names":["React","useState","StatusBar","Constants","bulbOff","bulbOn","TheLight","isEnabled","setIsEnabled","toggleSwitch","previousState","styles","container","image","false","true","switch","screenHeight","Dimensions","get","height","StyleSheet","create","flex","backgroundColor","paddingTop","statusBarHeight","maxWidth","maxHeight","resizeMode","marginBottom","alignSelf","transform","Platform","OS","scale"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,oXASA,OAASC,SAAT,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,OAAP,2CACA,MAAOC,CAAAA,MAAP,0CAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,eAECL,QAAQ,CAAC,KAAD,CAFT,wCAE1BM,SAF0B,eAEfC,YAFe,eAGjC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SAAMD,CAAAA,YAAY,CAAC,SAACE,aAAD,QAAmB,CAACA,aAApB,EAAD,CAAlB,EAArB,CAEA,MACE,qBAAC,YAAD,EAAc,KAAK,CAAEC,MAAM,CAACC,SAA5B,EACE,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,EADF,CAGE,oBAAC,KAAD,EACE,YAAY,CAAE,CADhB,CAEE,MAAM,CAAEL,SAAS,CAAGF,MAAH,CAAYD,OAF/B,CAGE,KAAK,CAAEO,MAAM,CAACE,KAHhB,EAHF,CAaE,oBAAC,MAAD,EACE,UAAU,CAAE,CAAEC,KAAK,CAAE,MAAT,CAAiBC,IAAI,CAAE,SAAvB,CADd,CAEE,UAAU,CAAE,MAFd,CAGE,aAAa,CAAEN,YAHjB,CAIE,KAAK,CAAEF,SAJT,CAKE,KAAK,CAAEI,MAAM,CAACK,MALhB,EAbF,CADF,CAuBD,CAGD,GAAMC,CAAAA,YAAY,CAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAA9C,CAEA,GAAMT,CAAAA,MAAM,CAAGU,UAAU,CAACC,MAAX,CAAkB,CAC/BV,SAAS,CAAE,CACTW,IAAI,CAAE,CADG,CAETC,eAAe,CAAE,OAFR,CAGTC,UAAU,CAAEtB,SAAS,CAACuB,eAHb,CADoB,CAM/Bb,KAAK,CAAE,CACLc,QAAQ,CAAE,MADL,CAELC,SAAS,CAAEX,YAAY,CAAGd,SAAS,CAACuB,eAAzB,CAA2C,GAFjD,CAGLG,UAAU,CAAE,SAHP,CAILC,YAAY,CAAE,EAJT,CANwB,CAY/Bd,MAAM,CAAE,CACNe,SAAS,CAAE,QADL,CAINC,SAAS,CAAEC,QAAQ,CAACC,EAAT,GAAgB,SAAhB,CAA4B,CAAC,CAAEC,KAAK,CAAE,GAAT,CAAD,CAA5B,CAA+C,EAJpD,CAZuB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  StyleSheet,\n  SafeAreaView,\n  Image,\n  Switch,\n  Platform,\n} from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Constants from \"expo-constants\";\nimport bulbOff from \"../../assets/the-light/bulb-off.jpg\";\nimport bulbOn from \"../../assets/the-light/bulb-on.jpg\";\n\nexport default function TheLight() {\n  // https://reactjs.org/docs/hooks-reference.html#usestate\n  const [isEnabled, setIsEnabled] = useState(false);\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar style=\"light\" />\n\n      <Image\n        fadeDuration={0}\n        source={isEnabled ? bulbOn : bulbOff}\n        style={styles.image}\n      />\n\n      {/* https://reactnative.dev/docs/switch */}\n      {/* 説明はこういう風に記載がいいかな*/\n      /* 改行もいけるか*/\n      }\n      <Switch\n        trackColor={{ false: \"#fff\", true: \"#52d964\" }}\n        thumbColor={\"#fff\"}\n        onValueChange={toggleSwitch}\n        value={isEnabled}\n        style={styles.switch}\n      />\n    </SafeAreaView>\n  );\n}\n\n// https://reactnative.dev/docs/dimensions\nconst screenHeight = Dimensions.get(\"window\").height;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    paddingTop: Constants.statusBarHeight,\n  },\n  image: {\n    maxWidth: \"100%\",\n    maxHeight: screenHeight - Constants.statusBarHeight - 150,\n    resizeMode: \"contain\",\n    marginBottom: 20,\n  },\n  switch: {\n    alignSelf: \"center\",\n    // https://reactnative.dev/docs/transforms\n    // https://reactnative.dev/docs/platform-specific-code\n    transform: Platform.OS === \"android\" ? [{ scale: 1.5 }] : [],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}