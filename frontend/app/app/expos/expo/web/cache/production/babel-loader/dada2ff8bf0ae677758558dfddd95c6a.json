{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";function Control(_ref){var isRunning=_ref.isRunning,handleLeftButtonPress=_ref.handleLeftButtonPress,handleRightButtonPress=_ref.handleRightButtonPress;return React.createElement(React.Fragment,null,React.createElement(TouchableOpacity,{style:[styles.controlButtonBorder,{backgroundColor:isRunning?\"#333333\":\"#1c1c1e\"}],onPress:handleLeftButtonPress},React.createElement(View,{style:styles.controlButton},React.createElement(Text,{style:{color:isRunning?\"#fff\":\"#9d9ca2\"}},isRunning?\"Step\":\"Reset\"))),React.createElement(TouchableOpacity,{style:[styles.controlButtonBorder,{backgroundColor:isRunning?\"#340e0d\":\"#0a2a12\"}],onPress:handleRightButtonPress},React.createElement(View,{style:styles.controlButton},React.createElement(Text,{style:{color:isRunning?\"#ea4c49\":\"#37d05c\"}},isRunning?\"Stop\":\"Start\"))));}var CENTER={justifyContent:\"center\",alignItems:\"center\"};var styles=StyleSheet.create({controlButtonBorder:_objectSpread(_objectSpread({},CENTER),{},{width:70,height:70,borderRadius:70}),controlButton:_objectSpread(_objectSpread({},CENTER),{},{width:65,height:65,borderRadius:65,borderColor:\"#000\",borderWidth:1})});export default React.memo(Control);","map":{"version":3,"sources":["/app/examples/8-stopwatch/Control.js"],"names":["React","Control","isRunning","handleLeftButtonPress","handleRightButtonPress","styles","controlButtonBorder","backgroundColor","controlButton","color","CENTER","justifyContent","alignItems","StyleSheet","create","width","height","borderRadius","borderColor","borderWidth","memo"],"mappings":"i2BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wPAGA,QAASC,CAAAA,OAAT,MAA+E,IAA5DC,CAAAA,SAA4D,MAA5DA,SAA4D,CAAjDC,qBAAiD,MAAjDA,qBAAiD,CAA1BC,sBAA0B,MAA1BA,sBAA0B,CAC7E,MACE,yCACE,oBAAC,gBAAD,EACE,KAAK,CAAE,CACLC,MAAM,CAACC,mBADF,CAEL,CAAEC,eAAe,CAAEL,SAAS,CAAG,SAAH,CAAe,SAA3C,CAFK,CADT,CAKE,OAAO,CAAEC,qBALX,EAOE,oBAAC,IAAD,EAAM,KAAK,CAAEE,MAAM,CAACG,aAApB,EACE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,KAAK,CAAEP,SAAS,CAAG,MAAH,CAAY,SAA9B,CAAb,EACGA,SAAS,CAAG,MAAH,CAAY,OADxB,CADF,CAPF,CADF,CAeE,oBAAC,gBAAD,EACE,KAAK,CAAE,CACLG,MAAM,CAACC,mBADF,CAEL,CAAEC,eAAe,CAAEL,SAAS,CAAG,SAAH,CAAe,SAA3C,CAFK,CADT,CAKE,OAAO,CAAEE,sBALX,EAOE,oBAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACG,aAApB,EACE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,KAAK,CAAEP,SAAS,CAAG,SAAH,CAAe,SAAjC,CAAb,EACGA,SAAS,CAAG,MAAH,CAAY,OADxB,CADF,CAPF,CAfF,CADF,CA+BD,CAED,GAAMQ,CAAAA,MAAM,CAAG,CACbC,cAAc,CAAE,QADH,CAEbC,UAAU,CAAE,QAFC,CAAf,CAKA,GAAMP,CAAAA,MAAM,CAAGQ,UAAU,CAACC,MAAX,CAAkB,CAC/BR,mBAAmB,gCACdI,MADc,MAEjBK,KAAK,CAAE,EAFU,CAGjBC,MAAM,CAAE,EAHS,CAIjBC,YAAY,CAAE,EAJG,EADY,CAO/BT,aAAa,gCACRE,MADQ,MAEXK,KAAK,CAAE,EAFI,CAGXC,MAAM,CAAE,EAHG,CAIXC,YAAY,CAAE,EAJH,CAKXC,WAAW,CAAE,MALF,CAMXC,WAAW,CAAE,CANF,EAPkB,CAAlB,CAAf,CAiBA,cAAenB,CAAAA,KAAK,CAACoB,IAAN,CAAWnB,OAAX,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\n\nfunction Control({ isRunning, handleLeftButtonPress, handleRightButtonPress }) {\n  return (\n    <>\n      <TouchableOpacity\n        style={[\n          styles.controlButtonBorder,\n          { backgroundColor: isRunning ? \"#333333\" : \"#1c1c1e\" },\n        ]}\n        onPress={handleLeftButtonPress}\n      >\n        <View style={styles.controlButton}>\n          <Text style={{ color: isRunning ? \"#fff\" : \"#9d9ca2\" }}>\n            {isRunning ? \"Step\" : \"Reset\"}\n          </Text>\n        </View>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        style={[\n          styles.controlButtonBorder,\n          { backgroundColor: isRunning ? \"#340e0d\" : \"#0a2a12\" },\n        ]}\n        onPress={handleRightButtonPress}\n      >\n        <View style={styles.controlButton}>\n          <Text style={{ color: isRunning ? \"#ea4c49\" : \"#37d05c\" }}>\n            {isRunning ? \"Stop\" : \"Start\"}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    </>\n  );\n}\n\nconst CENTER = {\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\nconst styles = StyleSheet.create({\n  controlButtonBorder: {\n    ...CENTER,\n    width: 70,\n    height: 70,\n    borderRadius: 70,\n  },\n  controlButton: {\n    ...CENTER,\n    width: 65,\n    height: 65,\n    borderRadius: 65,\n    borderColor: \"#000\",\n    borderWidth: 1,\n  },\n});\n\nexport default React.memo(Control);\n"]},"metadata":{},"sourceType":"module"}