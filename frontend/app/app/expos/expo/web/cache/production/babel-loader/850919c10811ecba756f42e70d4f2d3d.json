{"ast":null,"code":"var colorNames=require('color-name');var swizzle=require('simple-swizzle');var reverseNames={};for(var name in colorNames){if(colorNames.hasOwnProperty(name)){reverseNames[colorNames[name]]=name;}}var cs=module.exports={to:{},get:{}};cs.get=function(string){var prefix=string.substring(0,3).toLowerCase();var val;var model;switch(prefix){case'hsl':val=cs.get.hsl(string);model='hsl';break;case'hwb':val=cs.get.hwb(string);model='hwb';break;default:val=cs.get.rgb(string);model='rgb';break;}if(!val){return null;}return{model:model,value:val};};cs.get.rgb=function(string){if(!string){return null;}var abbr=/^#([a-f0-9]{3,4})$/i;var hex=/^#([a-f0-9]{6})([a-f0-9]{2})?$/i;var rgba=/^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;var per=/^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;var keyword=/(\\D+)/;var rgb=[0,0,0,1];var match;var i;var hexAlpha;if(match=string.match(hex)){hexAlpha=match[2];match=match[1];for(i=0;i<3;i++){var i2=i*2;rgb[i]=parseInt(match.slice(i2,i2+2),16);}if(hexAlpha){rgb[3]=parseInt(hexAlpha,16)/255;}}else if(match=string.match(abbr)){match=match[1];hexAlpha=match[3];for(i=0;i<3;i++){rgb[i]=parseInt(match[i]+match[i],16);}if(hexAlpha){rgb[3]=parseInt(hexAlpha+hexAlpha,16)/255;}}else if(match=string.match(rgba)){for(i=0;i<3;i++){rgb[i]=parseInt(match[i+1],0);}if(match[4]){rgb[3]=parseFloat(match[4]);}}else if(match=string.match(per)){for(i=0;i<3;i++){rgb[i]=Math.round(parseFloat(match[i+1])*2.55);}if(match[4]){rgb[3]=parseFloat(match[4]);}}else if(match=string.match(keyword)){if(match[1]==='transparent'){return[0,0,0,0];}rgb=colorNames[match[1]];if(!rgb){return null;}rgb[3]=1;return rgb;}else{return null;}for(i=0;i<3;i++){rgb[i]=clamp(rgb[i],0,255);}rgb[3]=clamp(rgb[3],0,1);return rgb;};cs.get.hsl=function(string){if(!string){return null;}var hsl=/^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;var match=string.match(hsl);if(match){var alpha=parseFloat(match[4]);var h=(parseFloat(match[1])+360)%360;var s=clamp(parseFloat(match[2]),0,100);var l=clamp(parseFloat(match[3]),0,100);var a=clamp(isNaN(alpha)?1:alpha,0,1);return[h,s,l,a];}return null;};cs.get.hwb=function(string){if(!string){return null;}var hwb=/^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;var match=string.match(hwb);if(match){var alpha=parseFloat(match[4]);var h=(parseFloat(match[1])%360+360)%360;var w=clamp(parseFloat(match[2]),0,100);var b=clamp(parseFloat(match[3]),0,100);var a=clamp(isNaN(alpha)?1:alpha,0,1);return[h,w,b,a];}return null;};cs.to.hex=function(){var rgba=swizzle(arguments);return'#'+hexDouble(rgba[0])+hexDouble(rgba[1])+hexDouble(rgba[2])+(rgba[3]<1?hexDouble(Math.round(rgba[3]*255)):'');};cs.to.rgb=function(){var rgba=swizzle(arguments);return rgba.length<4||rgba[3]===1?'rgb('+Math.round(rgba[0])+', '+Math.round(rgba[1])+', '+Math.round(rgba[2])+')':'rgba('+Math.round(rgba[0])+', '+Math.round(rgba[1])+', '+Math.round(rgba[2])+', '+rgba[3]+')';};cs.to.rgb.percent=function(){var rgba=swizzle(arguments);var r=Math.round(rgba[0]/255*100);var g=Math.round(rgba[1]/255*100);var b=Math.round(rgba[2]/255*100);return rgba.length<4||rgba[3]===1?'rgb('+r+'%, '+g+'%, '+b+'%)':'rgba('+r+'%, '+g+'%, '+b+'%, '+rgba[3]+')';};cs.to.hsl=function(){var hsla=swizzle(arguments);return hsla.length<4||hsla[3]===1?'hsl('+hsla[0]+', '+hsla[1]+'%, '+hsla[2]+'%)':'hsla('+hsla[0]+', '+hsla[1]+'%, '+hsla[2]+'%, '+hsla[3]+')';};cs.to.hwb=function(){var hwba=swizzle(arguments);var a='';if(hwba.length>=4&&hwba[3]!==1){a=', '+hwba[3];}return'hwb('+hwba[0]+', '+hwba[1]+'%, '+hwba[2]+'%'+a+')';};cs.to.keyword=function(rgb){return reverseNames[rgb.slice(0,3)];};function clamp(num,min,max){return Math.min(Math.max(min,num),max);}function hexDouble(num){var str=num.toString(16).toUpperCase();return str.length<2?'0'+str:str;}","map":{"version":3,"sources":["/app/node_modules/react-native-elements/node_modules/color-string/index.js"],"names":["colorNames","require","swizzle","reverseNames","name","hasOwnProperty","cs","module","exports","to","get","string","prefix","substring","toLowerCase","val","model","hsl","hwb","rgb","value","abbr","hex","rgba","per","keyword","match","i","hexAlpha","i2","parseInt","slice","parseFloat","Math","round","clamp","alpha","h","s","l","a","isNaN","w","b","arguments","hexDouble","length","percent","r","g","hsla","hwba","num","min","max","str","toString","toUpperCase"],"mappings":"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","sourcesContent":["/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = (parseFloat(match[1]) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n"]},"metadata":{},"sourceType":"script"}