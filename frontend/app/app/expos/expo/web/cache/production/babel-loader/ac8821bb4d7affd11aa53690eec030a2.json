{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useIMGElementStateWithCache;var _defaultInitialImageDimensions=_interopRequireDefault(require(\"./defaultInitialImageDimensions\"));var _getIMGState=require(\"./getIMGState\");var _useImageConcreteDimensions=_interopRequireDefault(require(\"./useImageConcreteDimensions\"));var _useImageNaturalDimensions=_interopRequireDefault(require(\"./useImageNaturalDimensions\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function useIMGElementStateWithCache(props){var alt=props.alt,altColor=props.altColor,source=props.source,contentWidth=props.contentWidth,computeMaxWidth=props.computeMaxWidth,objectFit=props.objectFit,_props$initialDimensi=props.initialDimensions,initialDimensions=_props$initialDimensi===void 0?_defaultInitialImageDimensions.default:_props$initialDimensi;var _ref=(0,_useImageNaturalDimensions.default)(props),naturalDimensions=_ref.naturalDimensions,specifiedDimensions=_ref.specifiedDimensions,flatStyle=_ref.flatStyle,error=_ref.error,onError=_ref.onError;var concreteDimensions=(0,_useImageConcreteDimensions.default)({flatStyle:flatStyle,naturalDimensions:naturalDimensions,specifiedDimensions:specifiedDimensions,computeMaxWidth:computeMaxWidth,contentWidth:contentWidth});return(0,_getIMGState.getIMGState)({error:error,concreteDimensions:concreteDimensions,containerStyle:flatStyle,initialDimensions:initialDimensions,objectFit:objectFit,onError:onError,source:source,alt:alt,altColor:altColor});}","map":{"version":3,"sources":["useIMGElementStateWithCache.ts"],"names":["initialDimensions","defaultImageInitialDimensions","onError","concreteDimensions","flatStyle","naturalDimensions","specifiedDimensions","computeMaxWidth","contentWidth","error","containerStyle","objectFit","source","alt","altColor"],"mappings":"kHAAA,GAAA,CAAA,8BAAA,CAAA,sBAAA,CAAA,OAAA,mCAAA,CAAA,CACA,GAAA,CAAA,YAAA,CAAA,OAAA,iBAAA,CAMA,GAAA,CAAA,2BAAA,CAAA,sBAAA,CAAA,OAAA,gCAAA,CAAA,CACA,GAAA,CAAA,0BAAA,CAAA,sBAAA,CAAA,OAAA,+BAAA,CAAA,C,mFAOe,QAAA,CAAA,2BAAA,CAAA,KAAA,CAEkC,IACzC,CAAA,GADyC,CAC/C,KAD+C,CACzC,GADyC,CACzC,QADyC,CAC/C,KAD+C,CACzC,QADyC,CACzC,MADyC,CAC/C,KAD+C,CACzC,MADyC,CACzC,YADyC,CAC/C,KAD+C,CACzC,YADyC,CACzC,eADyC,CAC/C,KAD+C,CACzC,eADyC,CACzC,SADyC,CAC/C,KAD+C,CACzC,SADyC,uBAC/C,KAD+C,CAQ7CA,iBAR6C,CAQ7CA,iBAR6C,gCAQzBC,8BAAAA,CAAAA,OARyB,gCAW7C,CAAA,EAAA,0BAAA,CAAA,OAAA,EADF,KACE,CAX6C,CAUzC,iBAVyC,MAUzC,iBAVyC,CAUzC,mBAVyC,MAUzC,mBAVyC,CAUzC,SAVyC,MAUzC,SAVyC,CAUzC,KAVyC,MAUzC,KAVyC,CAUmBC,OAVnB,MAUmBA,OAVnB,CAY/C,GAAMC,CAAAA,kBAAkB,CAAG,CAAA,EAAA,2BAAA,CAAA,OAAA,EAA2B,CACpDC,SADoD,CACpDA,SADoD,CAEpDC,iBAFoD,CAEpDA,iBAFoD,CAGpDC,mBAHoD,CAGpDA,mBAHoD,CAIpDC,eAJoD,CAIpDA,eAJoD,CAKpDC,YAAAA,CAAAA,YALoD,CAA3B,CAA3B,CAOA,MAAO,CAAA,EAAA,YAAA,CAAA,WAAA,EAAY,CACjBC,KADiB,CACjBA,KADiB,CAEjBN,kBAFiB,CAEjBA,kBAFiB,CAGjBO,cAAc,CAHG,SAAA,CAIjBV,iBAJiB,CAIjBA,iBAJiB,CAKjBW,SALiB,CAKjBA,SALiB,CAMjBT,OANiB,CAMjBA,OANiB,CAOjBU,MAPiB,CAOjBA,MAPiB,CAQjBC,GARiB,CAQjBA,GARiB,CASjBC,QAAAA,CAAAA,QATiB,CAAZ,CAAP,CAWD","sourcesContent":["import defaultImageInitialDimensions from './defaultInitialImageDimensions';\nimport { getIMGState } from './getIMGState';\nimport type {\n  UseIMGElementStateWithCacheProps,\n  IMGElementStateError,\n  IMGElementStateSuccess\n} from './img-types';\nimport useImageConcreteDimensions from './useImageConcreteDimensions';\nimport useImageNaturalDimensions from './useImageNaturalDimensions';\n\n/**\n * This hook is useful when one has access to image natural dimensions prior to\n * loading. The `cachedNaturalDimensions` prop must be passed to immediately\n * compute concrete dimensions.\n */\nexport default function useIMGElementStateWithCache(\n  props: UseIMGElementStateWithCacheProps\n): IMGElementStateError | IMGElementStateSuccess {\n  const {\n    alt,\n    altColor,\n    source,\n    contentWidth,\n    computeMaxWidth,\n    objectFit,\n    initialDimensions = defaultImageInitialDimensions\n  } = props;\n  const { naturalDimensions, specifiedDimensions, flatStyle, error, onError } =\n    useImageNaturalDimensions(props);\n  const concreteDimensions = useImageConcreteDimensions({\n    flatStyle,\n    naturalDimensions,\n    specifiedDimensions,\n    computeMaxWidth,\n    contentWidth\n  });\n  return getIMGState({\n    error,\n    concreteDimensions,\n    containerStyle: flatStyle,\n    initialDimensions,\n    objectFit,\n    onError,\n    source,\n    alt,\n    altColor\n  });\n}\n"]},"metadata":{},"sourceType":"script"}