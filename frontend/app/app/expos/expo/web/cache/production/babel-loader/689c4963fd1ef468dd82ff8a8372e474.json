{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var TDefaultTextualRenderer=function TDefaultTextualRenderer(_ref){var tnode=_ref.tnode,style=_ref.style,children=_ref.children,textProps=_ref.textProps,onPress=_ref.onPress;var resolvedStyles=textProps!==null&&textProps!==void 0&&textProps.style?[style,textProps.style]:style;return _react.default.createElement(_reactNative.Text,_objectSpread(_objectSpread({},textProps),{},{onPress:onPress,style:resolvedStyles,testID:tnode.tagName||undefined}),children);};var _default=TDefaultTextualRenderer;exports.default=_default;","map":{"version":3,"sources":["TDefaultTextualRenderer.tsx"],"names":["TDefaultTextualRenderer","onPress","resolvedStyles","textProps","Text","style","testID","tnode","undefined"],"mappings":"g8BAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,2IAKA,GAAMA,CAAAA,uBAA4D,CAAG,QAA/DA,CAAAA,uBAA+D,MAM/D,IANgE,CAAA,KAMhE,MANgE,KAMhE,CANgE,KAMhE,MANgE,KAMhE,CANgE,QAMhE,MANgE,QAMhE,CANgE,SAMhE,MANgE,SAMhE,CADJC,OACI,MADJA,OACI,CACJ,GAAMC,CAAAA,cAAc,CAAGC,SAAS,GAATA,IAAAA,EAAAA,SAAS,GAAA,IAATA,EAAAA,EAAAA,SAAS,CAATA,KAAAA,CAAmB,CAAA,KAAA,CAAQA,SAAS,CAApCA,KAAmB,CAAnBA,CAAvB,KAAA,CACA,MAAO,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CACLC,YAAAA,CADK,IAAA,gCAEL,SAFK,MAIHH,OAFF,CAEEA,OAJG,CAKHI,KAAK,CAHP,cAFK,CAMHC,MAAM,CAAEC,KAAK,CAALA,OAAAA,EAAiBC,SANtB,GAAP,QAAO,CAAP,CARF,CAAA,C,aAoBeR,uB","sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport { TPhrasing, TText } from '@native-html/transient-render-engine';\nimport { TDefaultRenderer } from './shared-types';\n\nconst TDefaultTextualRenderer: TDefaultRenderer<TPhrasing | TText> = ({\n  tnode,\n  style,\n  children,\n  textProps,\n  onPress\n}) => {\n  const resolvedStyles = textProps?.style ? [style, textProps.style] : style;\n  return React.createElement(\n    Text,\n    {\n      ...textProps,\n      onPress,\n      style: resolvedStyles,\n      testID: tnode.tagName || undefined\n    },\n    children\n  );\n};\n\nexport default TDefaultTextualRenderer;\n"]},"metadata":{},"sourceType":"script"}