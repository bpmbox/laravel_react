{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import ExponentAV from\"./ExponentAV\";import{requestFullscreen,exitFullscreen}from\"./FullscreenUtils.web\";export default{get name(){return'ExpoVideoManager';},get ScaleNone(){return'none';},get ScaleToFill(){return'fill';},get ScaleAspectFit(){return'contain';},get ScaleAspectFill(){return'cover';},setFullscreen:function setFullscreen(element,isFullScreenEnabled){return _regeneratorRuntime.async(function setFullscreen$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!isFullScreenEnabled){_context.next=5;break;}_context.next=3;return _regeneratorRuntime.awrap(requestFullscreen(element));case 3:_context.next=7;break;case 5:_context.next=7;return _regeneratorRuntime.awrap(exitFullscreen(element));case 7:return _context.abrupt(\"return\",ExponentAV.getStatusForVideo(element));case 8:case\"end\":return _context.stop();}}},null,null,null,Promise);}};","map":{"version":3,"sources":["../src/ExpoVideoManager.web.ts"],"names":[],"mappings":"4DACA,MAAO,CAAA,UAAP,oBACA,OAAS,iBAAT,CAA4B,cAA5B,6BAEA,cAAe,CACb,GAAI,CAAA,IAAJ,EAAQ,CACN,MAAO,kBAAP,CACD,CAHY,CAIb,GAAI,CAAA,SAAJ,EAAa,CACX,MAAO,MAAP,CACD,CANY,CAOb,GAAI,CAAA,WAAJ,EAAe,CACb,MAAO,MAAP,CACD,CATY,CAUb,GAAI,CAAA,cAAJ,EAAkB,CAChB,MAAO,SAAP,CACD,CAZY,CAab,GAAI,CAAA,eAAJ,EAAmB,CACjB,MAAO,OAAP,CACD,CAfY,CAiBP,aAjBO,wBAkBX,OAlBW,CAmBX,mBAnBW,6HAqBP,mBArBO,0EAsBH,iBAAiB,CAAC,OAAD,CAtBd,uFAwBH,cAAc,CAAC,OAAD,CAxBX,yCA0BJ,UAAU,CAAC,iBAAX,CAA6B,OAA7B,CA1BI,wEAAf","sourcesContent":["import { AVPlaybackStatus } from './AV';\nimport ExponentAV from './ExponentAV';\nimport { requestFullscreen, exitFullscreen } from './FullscreenUtils.web';\n\nexport default {\n  get name(): string {\n    return 'ExpoVideoManager';\n  },\n  get ScaleNone(): string {\n    return 'none';\n  },\n  get ScaleToFill(): string {\n    return 'fill';\n  },\n  get ScaleAspectFit(): string {\n    return 'contain';\n  },\n  get ScaleAspectFill(): string {\n    return 'cover';\n  },\n\n  async setFullscreen(\n    element: HTMLMediaElement,\n    isFullScreenEnabled: boolean\n  ): Promise<AVPlaybackStatus> {\n    if (isFullScreenEnabled) {\n      await requestFullscreen(element);\n    } else {\n      await exitFullscreen(element);\n    }\n    return ExponentAV.getStatusForVideo(element);\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}