{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import React,{useState,useEffect}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import View from\"react-native-web/dist/exports/View\";import BackHandler from\"react-native-web/dist/exports/BackHandler\";import{Alert,Text,ListItem}from\"react-native-elements\";import Constants from\"expo-constants\";import{EXAMPLE_LIST}from\"./example-list\";import useWindowDimensions from\"react-native-web/dist/exports/useWindowDimensions\";import RenderHtml,{HTMLContentModel,defaultHTMLElementModels}from'react-native-render-html';function H1Renderer(_ref){var TDefaultRenderer=_ref.TDefaultRenderer,props=_objectWithoutProperties(_ref,[\"TDefaultRenderer\"]);var onPress=function onPress(){return Alert.alert('pressed!');};return React.createElement(TDefaultRenderer,_extends({},props,{onPress:onPress}));}var tagsStyles={article:{marginHorizontal:10}};var source2={html:\"\\n<article>\\n  <h1>Press me!</h1>\\n  <p>\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\\n    do eiusmod tempor incididunt ut labore et dolore magna aliqua.\\n    Ut enim ad minim veniam.\\n  </p>\\n</article>\\n\"};var renderers={h1:H1Renderer};var a=\"aaasaassa\";var source={html:\"<p style=\\\"text-align:center\\\">\\n  <a href=\\\"https://www.google.com\\\">aaaaaa</a>s\\n  <textbox>aa</textbox>\\n  Those are inline images!<br/><br/>\\n  <input type=\\\"password\\\" name=\\\"pass\\\" size=\\\"6\\\" maxlength=\\\"4\\\">\\n  <strong>\"+a+\"before</strong>\\n  <img src=\\\"https://www.fillmurray.com/50/50\\\" width=\\\"50\\\" height=\\\"50\\\" />&nbsp;\\n  <img src=\\\"https://www.fillmurray.com/70/50\\\" width=\\\"70\\\" height=\\\"50\\\" />&nbsp;\\n  <strong>after</strong>\\n<textbox>ssssssssssssssssssssaa</textbox>\\n  <a href=\\\"https://meliorence.github.io/react-native-render-html/docs/guides/custom-renderers\\\">maji</a>\\n</p>\\n<table border=1>\\n<tr><tr>aaaaaaaaaaaaaaaaaaaaaaa</td></tr>\\nhttps://www.aizulab.com/blog/react-native-render-html/\\nhttps://snack.expo.dev/@miyataken999/001001333333333333main\\n</table>\\n\\n\"};var customHTMLElementModels={img:defaultHTMLElementModels.img.extend({contentModel:HTMLContentModel.mixed})};export default function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),exampleIndex=_useState2[0],setExampleIndex=_useState2[1];useEffect(function(){var backAction=function backAction(){if(exampleIndex!==null){setExampleIndex(null);}else{BackHandler.exitApp();}return true;};var backHandler=BackHandler.addEventListener(\"hardwareBackPress\",backAction);return function(){return backHandler.remove();};},[exampleIndex]);if(exampleIndex!==null)return EXAMPLE_LIST[exampleIndex].component;return React.createElement(SafeAreaView,{style:styles.container},React.createElement(Text,{h4:true,style:styles.heading},\"React Native Expo Examples\"),React.createElement(RenderHtml,{contentWidth:200,source:source2,customHTMLElementModels:customHTMLElementModels}),React.createElement(ScrollView,null,EXAMPLE_LIST.map(function(l,i){return React.createElement(ListItem,{key:i,bottomDivider:true,onPress:function onPress(){return setExampleIndex(i);}},React.createElement(View,null,React.createElement(Text,null,\"Level \",l.level)),React.createElement(ListItem.Content,null,React.createElement(ListItem.Title,{style:styles.title},l.name)));})));}var styles=StyleSheet.create({container:{flex:1,paddingTop:Constants.statusBarHeight},heading:{textAlign:\"center\",padding:12},title:{fontWeight:\"bold\"}});","map":{"version":3,"sources":["/app/App.js"],"names":["React","useState","useEffect","Alert","Text","ListItem","Constants","EXAMPLE_LIST","RenderHtml","HTMLContentModel","defaultHTMLElementModels","H1Renderer","TDefaultRenderer","props","onPress","alert","tagsStyles","article","marginHorizontal","source2","html","renderers","h1","a","source","customHTMLElementModels","img","extend","contentModel","mixed","App","exampleIndex","setExampleIndex","backAction","BackHandler","exitApp","backHandler","addEventListener","remove","component","styles","container","heading","map","l","i","level","title","name","StyleSheet","create","flex","paddingTop","statusBarHeight","textAlign","padding","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  View,\n  BackHandler,\n} from \"react-native\";\nimport { Alert,Text, ListItem } from \"react-native-elements\";\nimport Constants from \"expo-constants\";\nimport { EXAMPLE_LIST } from \"./example-list\";\nimport { useWindowDimensions } from 'react-native';\nimport RenderHtml, { HTMLContentModel, defaultHTMLElementModels } from 'react-native-render-html';\n\nfunction H1Renderer({\n  TDefaultRenderer,\n  ...props\n}) {\n  const onPress = () => Alert.alert('pressed!');\n  return (\n    <TDefaultRenderer\n      {...props}\n      onPress={onPress}\n    />\n  );\n}\n\nconst tagsStyles = {\n  article: {\n    marginHorizontal: 10\n  }\n};\n\nconst source2 = {\n  html: `\n<article>\n  <h1>Press me!</h1>\n  <p>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n    do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    Ut enim ad minim veniam.\n  </p>\n</article>\n`\n};\n\nconst renderers = {\n  h1: H1Renderer\n};\n\nlet a = \"aaasaassa\"\nconst source = {\n  html: `<p style=\"text-align:center\">\n  <a href=\"https://www.google.com\">aaaaaa</a>s\n  <textbox>aa</textbox>\n  Those are inline images!<br/><br/>\n  <input type=\"password\" name=\"pass\" size=\"6\" maxlength=\"4\">\n  <strong>${a}before</strong>\n  <img src=\"https://www.fillmurray.com/50/50\" width=\"50\" height=\"50\" />&nbsp;\n  <img src=\"https://www.fillmurray.com/70/50\" width=\"70\" height=\"50\" />&nbsp;\n  <strong>after</strong>\n<textbox>ssssssssssssssssssssaa</textbox>\n  <a href=\"https://meliorence.github.io/react-native-render-html/docs/guides/custom-renderers\">maji</a>\n</p>\n<table border=1>\n<tr><tr>aaaaaaaaaaaaaaaaaaaaaaa</td></tr>\nhttps://www.aizulab.com/blog/react-native-render-html/\nhttps://snack.expo.dev/@miyataken999/001001333333333333main\n</table>\n\n`\n};\n\nconst customHTMLElementModels = {\n    img: defaultHTMLElementModels.img.extend({\n      contentModel: HTMLContentModel.mixed\n    })\n  };\n\n//https://snack.expo.io/@narcis/custom-back-button カスタムバックボタン\nexport default function App() {\n  const [exampleIndex, setExampleIndex] = useState(null);\n\n  // Handle when user press Hardware Back Button\n  useEffect(() => {\n    const backAction = () => {\n      // Go back to Example List\n      if (exampleIndex !== null) {\n        setExampleIndex(null);\n      } \n      // Exit app if user currently in Example List\n      else {\n        BackHandler.exitApp();\n      }\n\n      return true;\n    };\n\n    // https://reactnative.dev/docs/backhandler\n    const backHandler = BackHandler.addEventListener(\n      \"hardwareBackPress\",\n      backAction\n    );\n\n    return () => backHandler.remove();\n  }, [exampleIndex]);\n\n  if (exampleIndex !== null) return EXAMPLE_LIST[exampleIndex].component;\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Text h4 style={styles.heading}>\n        React Native Expo Examples\n      </Text>\n     <RenderHtml\n      contentWidth={200}\n      source={source2}\n      customHTMLElementModels={customHTMLElementModels}\n    />\n\n      <ScrollView>\n        {EXAMPLE_LIST.map((l, i) => (\n          <ListItem key={i} bottomDivider onPress={() => setExampleIndex(i)}>\n            <View>\n              <Text>Level {l.level}</Text>\n            </View>\n\n            <ListItem.Content>\n              <ListItem.Title style={styles.title}>{l.name}</ListItem.Title>\n            </ListItem.Content>\n          </ListItem>\n        ))}\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight,\n  },\n  heading: {\n    textAlign: \"center\",\n    padding: 12,\n  },\n  title: {\n    fontWeight: \"bold\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}