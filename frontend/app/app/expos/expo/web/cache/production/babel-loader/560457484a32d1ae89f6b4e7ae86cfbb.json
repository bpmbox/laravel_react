{"ast":null,"code":"var Symbol=require(\"./_Symbol\");var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;var nativeObjectToString=objectProto.toString;var symToStringTag=Symbol?Symbol.toStringTag:undefined;function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=undefined;var unmasked=true;}catch(e){}var result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag]=tag;}else{delete value[symToStringTag];}}return result;}module.exports=getRawTag;","map":{"version":3,"sources":["/app/node_modules/react-native-ratings/node_modules/lodash/_getRawTag.js"],"names":["Symbol","require","objectProto","Object","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","getRawTag","value","isOwn","call","tag","unmasked","e","result","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,MAAM,CAAGC,OAAO,aAApB,CAGA,GAAIC,CAAAA,WAAW,CAAGC,MAAM,CAACC,SAAzB,CAGA,GAAIC,CAAAA,cAAc,CAAGH,WAAW,CAACG,cAAjC,CAOA,GAAIC,CAAAA,oBAAoB,CAAGJ,WAAW,CAACK,QAAvC,CAGA,GAAIC,CAAAA,cAAc,CAAGR,MAAM,CAAGA,MAAM,CAACS,WAAV,CAAwBC,SAAnD,CASA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACxB,GAAIC,CAAAA,KAAK,CAAGR,cAAc,CAACS,IAAf,CAAoBF,KAApB,CAA2BJ,cAA3B,CAAZ,CACIO,GAAG,CAAGH,KAAK,CAACJ,cAAD,CADf,CAGA,GAAI,CACFI,KAAK,CAACJ,cAAD,CAAL,CAAwBE,SAAxB,CACA,GAAIM,CAAAA,QAAQ,CAAG,IAAf,CACD,CAAC,MAAOC,CAAP,CAAU,CAAE,CAEd,GAAIC,CAAAA,MAAM,CAAGZ,oBAAoB,CAACQ,IAArB,CAA0BF,KAA1B,CAAb,CACA,GAAII,QAAJ,CAAc,CACZ,GAAIH,KAAJ,CAAW,CACTD,KAAK,CAACJ,cAAD,CAAL,CAAwBO,GAAxB,CACD,CAFD,IAEO,CACL,MAAOH,CAAAA,KAAK,CAACJ,cAAD,CAAZ,CACD,CACF,CACD,MAAOU,CAAAA,MAAP,CACD,CAEDC,MAAM,CAACC,OAAP,CAAiBT,SAAjB","sourcesContent":["var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n"]},"metadata":{},"sourceType":"script"}