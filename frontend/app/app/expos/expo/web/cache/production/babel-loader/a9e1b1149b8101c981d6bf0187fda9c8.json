{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import _ from'lodash';import React,{Component}from'react';import View from\"react-native-web/dist/exports/View\";import{shouldUpdate,extractComponentProps}from\"../../../component-updater\";import styleConstructor from\"./style\";import Dot from\"../dot\";export var MarkingTypes;(function(MarkingTypes){MarkingTypes[\"DOT\"]=\"dot\";MarkingTypes[\"MULTI_DOT\"]=\"multi-dot\";MarkingTypes[\"PERIOD\"]=\"period\";MarkingTypes[\"MULTI_PERIOD\"]=\"multi-period\";MarkingTypes[\"CUSTOM\"]=\"custom\";})(MarkingTypes||(MarkingTypes={}));var Marking=function(_Component){_inherits(Marking,_Component);var _super=_createSuper(Marking);function Marking(props){var _this;_classCallCheck(this,Marking);_this=_super.call(this,props);_this.style=styleConstructor(props.theme);return _this;}_createClass(Marking,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps){return shouldUpdate(this.props,nextProps,['type','selected','marked','today','disabled','inactive','disableTouchEvent','activeOpacity','selectedColor','selectedTextColor','dotColor','dots','periods']);}},{key:\"getItems\",value:function getItems(items){var _this2=this;var type=this.props.type;if(items&&Array.isArray(items)&&items.length>0){var validItems=_.filter(items,function(o){return o.color;});return validItems.map(function(item,index){return type===MarkingTypes.MULTI_DOT?_this2.renderDot(index,item):_this2.renderPeriod(index,item);});}}},{key:\"renderMarkingByType\",value:function renderMarkingByType(){var _this$props=this.props,type=_this$props.type,dots=_this$props.dots,periods=_this$props.periods;switch(type){case MarkingTypes.MULTI_DOT:return this.renderMultiMarkings(this.style.dots,dots);case MarkingTypes.MULTI_PERIOD:return this.renderMultiMarkings(this.style.periods,periods);default:return this.renderDot();}}},{key:\"renderMultiMarkings\",value:function renderMultiMarkings(containerStyle,items){return React.createElement(View,{style:containerStyle},this.getItems(items));}},{key:\"renderPeriod\",value:function renderPeriod(index,item){var color=item.color,startingDay=item.startingDay,endingDay=item.endingDay;var style=[this.style.period,{backgroundColor:color}];if(startingDay){style.push(this.style.startingDay);}if(endingDay){style.push(this.style.endingDay);}return React.createElement(View,{key:index,style:style});}},{key:\"renderDot\",value:function renderDot(index,item){var _this$props2=this.props,selected=_this$props2.selected,dotColor=_this$props2.dotColor;var dotProps=extractComponentProps(Dot,this.props);var key=index;var color=dotColor;if(item){if(item.key){key=item.key;}color=selected&&item.selectedDotColor?item.selectedDotColor:item.color;}return React.createElement(Dot,_extends({},dotProps,{key:key,color:color}));}},{key:\"render\",value:function render(){return this.renderMarkingByType();}}]);return Marking;}(Component);Marking.displayName='IGNORE';Marking.markingTypes=MarkingTypes;export{Marking as default};","map":{"version":3,"sources":["/app/node_modules/react-native-calendars/src/calendar/day/marking/index.js"],"names":["_","React","Component","shouldUpdate","extractComponentProps","styleConstructor","Dot","MarkingTypes","Marking","props","style","theme","nextProps","items","type","Array","isArray","length","validItems","filter","o","color","map","item","index","MULTI_DOT","renderDot","renderPeriod","dots","periods","renderMultiMarkings","MULTI_PERIOD","containerStyle","getItems","startingDay","endingDay","period","backgroundColor","push","selected","dotColor","dotProps","key","selectedDotColor","renderMarkingByType","displayName","markingTypes"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { View } from 'react-native';\n// @ts-expect-error\nimport { shouldUpdate, extractComponentProps } from '../../../component-updater';\nimport styleConstructor from './style';\nimport Dot from '../dot';\nexport var MarkingTypes;\n(function (MarkingTypes) {\n    MarkingTypes[\"DOT\"] = \"dot\";\n    MarkingTypes[\"MULTI_DOT\"] = \"multi-dot\";\n    MarkingTypes[\"PERIOD\"] = \"period\";\n    MarkingTypes[\"MULTI_PERIOD\"] = \"multi-period\";\n    MarkingTypes[\"CUSTOM\"] = \"custom\";\n})(MarkingTypes || (MarkingTypes = {}));\nexport default class Marking extends Component {\n    static displayName = 'IGNORE';\n    static markingTypes = MarkingTypes;\n    style;\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n    }\n    shouldComponentUpdate(nextProps) {\n        return shouldUpdate(this.props, nextProps, [\n            'type',\n            'selected',\n            'marked',\n            'today',\n            'disabled',\n            'inactive',\n            'disableTouchEvent',\n            'activeOpacity',\n            'selectedColor',\n            'selectedTextColor',\n            'dotColor',\n            'dots',\n            'periods'\n        ]);\n    }\n    getItems(items) {\n        const { type } = this.props;\n        if (items && Array.isArray(items) && items.length > 0) {\n            // Filter out items so that we process only those which have color property\n            const validItems = _.filter(items, function (o) { return o.color; });\n            return validItems.map((item, index) => {\n                return type === MarkingTypes.MULTI_DOT ? this.renderDot(index, item) : this.renderPeriod(index, item);\n            });\n        }\n    }\n    renderMarkingByType() {\n        const { type, dots, periods } = this.props;\n        switch (type) {\n            case MarkingTypes.MULTI_DOT:\n                return this.renderMultiMarkings(this.style.dots, dots);\n            case MarkingTypes.MULTI_PERIOD:\n                return this.renderMultiMarkings(this.style.periods, periods);\n            default:\n                return this.renderDot();\n        }\n    }\n    renderMultiMarkings(containerStyle, items) {\n        return <View style={containerStyle}>{this.getItems(items)}</View>;\n    }\n    renderPeriod(index, item) {\n        const { color, startingDay, endingDay } = item;\n        const style = [\n            this.style.period,\n            {\n                backgroundColor: color\n            }\n        ];\n        if (startingDay) {\n            style.push(this.style.startingDay);\n        }\n        if (endingDay) {\n            style.push(this.style.endingDay);\n        }\n        return <View key={index} style={style}/>;\n    }\n    renderDot(index, item) {\n        const { selected, dotColor } = this.props;\n        const dotProps = extractComponentProps(Dot, this.props);\n        let key = index;\n        let color = dotColor;\n        if (item) {\n            if (item.key) {\n                key = item.key;\n            }\n            color = selected && item.selectedDotColor ? item.selectedDotColor : item.color;\n        }\n        return <Dot {...dotProps} key={key} color={color}/>;\n    }\n    render() {\n        return this.renderMarkingByType();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}