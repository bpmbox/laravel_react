{"ast":null,"code":"import React from\"react\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{FontAwesome5}from\"@expo/vector-icons\";import Modal from\"react-native-modal\";import Slider from\"@react-native-community/slider\";import sliderThumbImageAndroid from\"../../assets/music-player/slider-thumb-android.png\";import sliderThumbImageIOS from\"../../assets/music-player/slider-thumb-ios.png\";import{displayTime}from\"./util\";import{styles}from\"./PlayerModal.style\";import{PRIMARY_COLOR}from\"./style\";export default function PlayerModal(_ref){var isModalVisible=_ref.isModalVisible,closeModal=_ref.closeModal,playingSong=_ref.playingSong,isPlaying=_ref.isPlaying,isBuffering=_ref.isBuffering,currentSongIndex=_ref.currentSongIndex,currentPosition=_ref.currentPosition,setcurrentPosition=_ref.setcurrentPosition,setRewinding=_ref.setRewinding,updatePosition=_ref.updatePosition,pauseOrResumeSong=_ref.pauseOrResumeSong,changeSong=_ref.changeSong;var opacity=isBuffering?0.5:1;return React.createElement(Modal,{isVisible:isModalVisible,hasBackdrop:false,onBackButtonPress:closeModal,style:{margin:0}},React.createElement(SafeAreaView,{style:styles.container},React.createElement(View,{style:styles.content},React.createElement(TouchableOpacity,{onPress:closeModal,style:styles.closeButton},React.createElement(FontAwesome5,{name:\"times\",size:20,color:\"#757575\"})),React.createElement(Image,{source:{uri:playingSong.coverImage},style:styles.coverImage}),React.createElement(Text,{style:styles.songName},playingSong.name),React.createElement(Text,{style:styles.singerName},playingSong.singer),React.createElement(View,{style:styles.progress},React.createElement(View,{style:styles.time},React.createElement(Text,{style:styles.timeText},displayTime(currentPosition)),React.createElement(Text,{style:styles.timeText},displayTime(playingSong.duration))),React.createElement(Slider,{style:styles.slider,minimumValue:0,maximumValue:playingSong.duration,minimumTrackTintColor:PRIMARY_COLOR,maximumTrackTintColor:\"#dfdfdf\",tapToSeek:true,thumbImage:Platform.OS===\"ios\"?sliderThumbImageIOS:sliderThumbImageAndroid,onValueChange:setcurrentPosition,onSlidingStart:function onSlidingStart(){return setRewinding(true);},onSlidingComplete:updatePosition,value:currentPosition,disabled:isBuffering})),React.createElement(View,{style:styles.controls},React.createElement(TouchableOpacity,{onPress:function onPress(){return changeSong(currentSongIndex-1);},disabled:isBuffering},React.createElement(FontAwesome5,{name:\"backward\",style:[styles.secondaryControlIcon,{opacity:opacity}]})),React.createElement(TouchableOpacity,{onPress:pauseOrResumeSong,disabled:isBuffering},React.createElement(FontAwesome5,{name:isPlaying?\"pause-circle\":\"play-circle\",style:[styles.primaryControlIcon,{opacity:opacity}]})),React.createElement(TouchableOpacity,{onPress:function onPress(){return changeSong(currentSongIndex+1);},disabled:isBuffering},React.createElement(FontAwesome5,{name:\"forward\",style:[styles.secondaryControlIcon,{opacity:opacity}]}))))));}","map":{"version":3,"sources":["/app/examples/10-music-player/PlayerModal.js"],"names":["React","FontAwesome5","Modal","Slider","sliderThumbImageAndroid","sliderThumbImageIOS","displayTime","styles","PRIMARY_COLOR","PlayerModal","isModalVisible","closeModal","playingSong","isPlaying","isBuffering","currentSongIndex","currentPosition","setcurrentPosition","setRewinding","updatePosition","pauseOrResumeSong","changeSong","opacity","margin","container","content","closeButton","uri","coverImage","songName","name","singerName","singer","progress","time","timeText","duration","slider","Platform","OS","controls","secondaryControlIcon","primaryControlIcon"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,ibAUA,OAASC,YAAT,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,CACA,MAAOC,CAAAA,uBAAP,0DACA,MAAOC,CAAAA,mBAAP,sDACA,OAASC,WAAT,cACA,OAASC,MAAT,2BACA,OAASC,aAAT,eAEA,cAAe,SAASC,CAAAA,WAAT,MAaZ,IAZDC,CAAAA,cAYC,MAZDA,cAYC,CAXDC,UAWC,MAXDA,UAWC,CAVDC,WAUC,MAVDA,WAUC,CATDC,SASC,MATDA,SASC,CARDC,WAQC,MARDA,WAQC,CAPDC,gBAOC,MAPDA,gBAOC,CANDC,eAMC,MANDA,eAMC,CALDC,kBAKC,MALDA,kBAKC,CAJDC,YAIC,MAJDA,YAIC,CAHDC,cAGC,MAHDA,cAGC,CAFDC,iBAEC,MAFDA,iBAEC,CADDC,UACC,MADDA,UACC,CACD,GAAMC,CAAAA,OAAO,CAAGR,WAAW,CAAG,GAAH,CAAS,CAApC,CAEA,MAEE,qBAAC,KAAD,EACE,SAAS,CAAEJ,cADb,CAEE,WAAW,CAAE,KAFf,CAGE,iBAAiB,CAAEC,UAHrB,CAIE,KAAK,CAAE,CAAEY,MAAM,CAAE,CAAV,CAJT,EAME,oBAAC,YAAD,EAAc,KAAK,CAAEhB,MAAM,CAACiB,SAA5B,EACE,oBAAC,IAAD,EAAM,KAAK,CAAEjB,MAAM,CAACkB,OAApB,EACE,oBAAC,gBAAD,EAAkB,OAAO,CAAEd,UAA3B,CAAuC,KAAK,CAAEJ,MAAM,CAACmB,WAArD,EACE,oBAAC,YAAD,EAAc,IAAI,CAAC,OAAnB,CAA2B,IAAI,CAAE,EAAjC,CAAqC,KAAK,CAAC,SAA3C,EADF,CADF,CAKE,oBAAC,KAAD,EACE,MAAM,CAAE,CAAEC,GAAG,CAAEf,WAAW,CAACgB,UAAnB,CADV,CAEE,KAAK,CAAErB,MAAM,CAACqB,UAFhB,EALF,CAUE,oBAAC,IAAD,EAAM,KAAK,CAAErB,MAAM,CAACsB,QAApB,EAA+BjB,WAAW,CAACkB,IAA3C,CAVF,CAYE,oBAAC,IAAD,EAAM,KAAK,CAAEvB,MAAM,CAACwB,UAApB,EAAiCnB,WAAW,CAACoB,MAA7C,CAZF,CAcE,oBAAC,IAAD,EAAM,KAAK,CAAEzB,MAAM,CAAC0B,QAApB,EACE,oBAAC,IAAD,EAAM,KAAK,CAAE1B,MAAM,CAAC2B,IAApB,EACE,oBAAC,IAAD,EAAM,KAAK,CAAE3B,MAAM,CAAC4B,QAApB,EACG7B,WAAW,CAACU,eAAD,CADd,CADF,CAKE,oBAAC,IAAD,EAAM,KAAK,CAAET,MAAM,CAAC4B,QAApB,EACG7B,WAAW,CAACM,WAAW,CAACwB,QAAb,CADd,CALF,CADF,CAWE,oBAAC,MAAD,EACE,KAAK,CAAE7B,MAAM,CAAC8B,MADhB,CAEE,YAAY,CAAE,CAFhB,CAGE,YAAY,CAAEzB,WAAW,CAACwB,QAH5B,CAIE,qBAAqB,CAAE5B,aAJzB,CAKE,qBAAqB,CAAC,SALxB,CAME,SAAS,CAAE,IANb,CAOE,UAAU,CACR8B,QAAQ,CAACC,EAAT,GAAgB,KAAhB,CACIlC,mBADJ,CAEID,uBAVR,CAYE,aAAa,CAAEa,kBAZjB,CAaE,cAAc,CAAE,gCAAMC,CAAAA,YAAY,CAAC,IAAD,CAAlB,EAblB,CAcE,iBAAiB,CAAEC,cAdrB,CAeE,KAAK,CAAEH,eAfT,CAgBE,QAAQ,CAAEF,WAhBZ,EAXF,CAdF,CA6CE,oBAAC,IAAD,EAAM,KAAK,CAAEP,MAAM,CAACiC,QAApB,EACE,oBAAC,gBAAD,EACE,OAAO,CAAE,yBAAMnB,CAAAA,UAAU,CAACN,gBAAgB,CAAG,CAApB,CAAhB,EADX,CAEE,QAAQ,CAAED,WAFZ,EAIE,oBAAC,YAAD,EACE,IAAI,CAAC,UADP,CAEE,KAAK,CAAE,CAACP,MAAM,CAACkC,oBAAR,CAA8B,CAAEnB,OAAO,CAAPA,OAAF,CAA9B,CAFT,EAJF,CADF,CAWE,oBAAC,gBAAD,EACE,OAAO,CAAEF,iBADX,CAEE,QAAQ,CAAEN,WAFZ,EAIE,oBAAC,YAAD,EACE,IAAI,CAAED,SAAS,CAAG,cAAH,CAAoB,aADrC,CAEE,KAAK,CAAE,CAACN,MAAM,CAACmC,kBAAR,CAA4B,CAAEpB,OAAO,CAAPA,OAAF,CAA5B,CAFT,EAJF,CAXF,CAqBE,oBAAC,gBAAD,EACE,OAAO,CAAE,yBAAMD,CAAAA,UAAU,CAACN,gBAAgB,CAAG,CAApB,CAAhB,EADX,CAEE,QAAQ,CAAED,WAFZ,EAIE,oBAAC,YAAD,EACE,IAAI,CAAC,SADP,CAEE,KAAK,CAAE,CAACP,MAAM,CAACkC,oBAAR,CAA8B,CAAEnB,OAAO,CAAPA,OAAF,CAA9B,CAFT,EAJF,CArBF,CA7CF,CADF,CANF,CAFF,CAyFD","sourcesContent":["import React from \"react\";\nimport {\n  Platform,\n  StyleSheet,\n  SafeAreaView,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport Modal from \"react-native-modal\";\nimport Slider from \"@react-native-community/slider\";\nimport sliderThumbImageAndroid from \"../../assets/music-player/slider-thumb-android.png\";\nimport sliderThumbImageIOS from \"../../assets/music-player/slider-thumb-ios.png\";\nimport { displayTime } from \"./util\";\nimport { styles } from \"./PlayerModal.style\";\nimport { PRIMARY_COLOR } from \"./style\";\n\nexport default function PlayerModal({\n  isModalVisible,\n  closeModal,\n  playingSong,\n  isPlaying,\n  isBuffering,\n  currentSongIndex,\n  currentPosition,\n  setcurrentPosition,\n  setRewinding,\n  updatePosition,\n  pauseOrResumeSong,\n  changeSong,\n}) {\n  const opacity = isBuffering ? 0.5 : 1;\n\n  return (\n    // https://github.com/react-native-modal/react-native-modal\n    <Modal\n      isVisible={isModalVisible}\n      hasBackdrop={false}\n      onBackButtonPress={closeModal}\n      style={{ margin: 0 }}\n    >\n      <SafeAreaView style={styles.container}>\n        <View style={styles.content}>\n          <TouchableOpacity onPress={closeModal} style={styles.closeButton}>\n            <FontAwesome5 name=\"times\" size={20} color=\"#757575\" />\n          </TouchableOpacity>\n\n          <Image\n            source={{ uri: playingSong.coverImage }}\n            style={styles.coverImage}\n          />\n\n          <Text style={styles.songName}>{playingSong.name}</Text>\n\n          <Text style={styles.singerName}>{playingSong.singer}</Text>\n\n          <View style={styles.progress}>\n            <View style={styles.time}>\n              <Text style={styles.timeText}>\n                {displayTime(currentPosition)}\n              </Text>\n\n              <Text style={styles.timeText}>\n                {displayTime(playingSong.duration)}\n              </Text>\n            </View>\n\n            <Slider\n              style={styles.slider}\n              minimumValue={0}\n              maximumValue={playingSong.duration}\n              minimumTrackTintColor={PRIMARY_COLOR}\n              maximumTrackTintColor=\"#dfdfdf\"\n              tapToSeek={true}\n              thumbImage={\n                Platform.OS === \"ios\"\n                  ? sliderThumbImageIOS\n                  : sliderThumbImageAndroid\n              }\n              onValueChange={setcurrentPosition}\n              onSlidingStart={() => setRewinding(true)}\n              onSlidingComplete={updatePosition}\n              value={currentPosition}\n              disabled={isBuffering}\n            />\n          </View>\n\n          <View style={styles.controls}>\n            <TouchableOpacity\n              onPress={() => changeSong(currentSongIndex - 1)}\n              disabled={isBuffering}\n            >\n              <FontAwesome5\n                name=\"backward\"\n                style={[styles.secondaryControlIcon, { opacity }]}\n              />\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={pauseOrResumeSong}\n              disabled={isBuffering}\n            >\n              <FontAwesome5\n                name={isPlaying ? \"pause-circle\" : \"play-circle\"}\n                style={[styles.primaryControlIcon, { opacity }]}\n              />\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => changeSong(currentSongIndex + 1)}\n              disabled={isBuffering}\n            >\n              <FontAwesome5\n                name=\"forward\"\n                style={[styles.secondaryControlIcon, { opacity }]}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </SafeAreaView>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}