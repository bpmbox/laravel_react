{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useIMGElementState;var _react=require(\"react\");var _reactNative=require(\"react-native-web/dist/index\");var _useImageNaturalDimensions=_interopRequireDefault(require(\"./useImageNaturalDimensions\"));var _useImageConcreteDimensions=_interopRequireDefault(require(\"./useImageConcreteDimensions\"));var _defaultInitialImageDimensions=_interopRequireDefault(require(\"./defaultInitialImageDimensions\"));var _getIMGState=require(\"./getIMGState\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function getImageSizeAsync(_ref){var uri=_ref.uri,headers=_ref.headers;return new Promise(function(onsuccess,onerror){var onImageDimensionsSuccess=function onImageDimensionsSuccess(width,height){return onsuccess({width:width,height:height});};if(headers){_reactNative.Image.getSizeWithHeaders(uri,headers,onImageDimensionsSuccess,onerror);}else{_reactNative.Image.getSize(uri,onImageDimensionsSuccess,onerror);}});}function useFetchedNaturalDimensions(props){var source=props.source,cachedNaturalDimensions=props.cachedNaturalDimensions;var _ref2=(0,_useImageNaturalDimensions.default)(props),error=_ref2.error,flatStyle=_ref2.flatStyle,naturalDimensions=_ref2.naturalDimensions,specifiedDimensions=_ref2.specifiedDimensions,onError=_ref2.onError,onNaturalDimensions=_ref2.onNaturalDimensions;var hasCachedDimensions=!!cachedNaturalDimensions;(0,_react.useEffect)(function fetchPhysicalDimensions(){var cancelled=false;if(source.uri&&!hasCachedDimensions){getImageSizeAsync({uri:source.uri,headers:source.headers}).then(function(dimensions){return!cancelled&&onNaturalDimensions(dimensions);}).catch(function(e){return!cancelled&&onError(e||{});});return function(){cancelled=true;};}},[source.uri,source.headers,onNaturalDimensions,onError,hasCachedDimensions]);return{specifiedDimensions:specifiedDimensions,flatStyle:flatStyle,naturalDimensions:naturalDimensions,error:error,onError:onError,onNaturalDimensions:onNaturalDimensions};}function useIMGElementState(props){var alt=props.alt,altColor=props.altColor,source=props.source,contentWidth=props.contentWidth,computeMaxWidth=props.computeMaxWidth,objectFit=props.objectFit,_props$initialDimensi=props.initialDimensions,initialDimensions=_props$initialDimensi===void 0?_defaultInitialImageDimensions.default:_props$initialDimensi;var _useFetchedNaturalDim=useFetchedNaturalDimensions(props),naturalDimensions=_useFetchedNaturalDim.naturalDimensions,specifiedDimensions=_useFetchedNaturalDim.specifiedDimensions,flatStyle=_useFetchedNaturalDim.flatStyle,onError=_useFetchedNaturalDim.onError,error=_useFetchedNaturalDim.error;var concreteDimensions=(0,_useImageConcreteDimensions.default)({flatStyle:flatStyle,naturalDimensions:naturalDimensions,specifiedDimensions:specifiedDimensions,computeMaxWidth:computeMaxWidth,contentWidth:contentWidth});return(0,_getIMGState.getIMGState)({error:error,alt:alt,altColor:altColor,concreteDimensions:concreteDimensions,containerStyle:flatStyle,initialDimensions:initialDimensions,objectFit:objectFit,onError:onError,source:source});}","map":{"version":3,"sources":["useIMGElementState.ts"],"names":["headers","onImageDimensionsSuccess","onsuccess","width","height","Image","cachedNaturalDimensions","onNaturalDimensions","hasCachedDimensions","cancelled","source","getImageSizeAsync","uri","dimensions","e","onError","specifiedDimensions","flatStyle","naturalDimensions","error","initialDimensions","defaultImageInitialDimensions","useFetchedNaturalDimensions","concreteDimensions","computeMaxWidth","contentWidth","alt","altColor","containerStyle","objectFit"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { Image } from 'react-native';\nimport type { UseIMGElementStateProps, IMGElementState } from './img-types';\nimport useImageNaturalDimensions from './useImageNaturalDimensions';\nimport useImageConcreteDimensions from './useImageConcreteDimensions';\nimport defaultImageInitialDimensions from './defaultInitialImageDimensions';\nimport { ImageDimensions } from '../shared-types';\nimport { getIMGState } from './getIMGState';\n\nfunction getImageSizeAsync({\n  uri,\n  headers\n}: {\n  uri: string;\n  headers: any;\n}): Promise<ImageDimensions> {\n  return new Promise<ImageDimensions>((onsuccess, onerror) => {\n    const onImageDimensionsSuccess = (width: number, height: number) =>\n      onsuccess({ width, height });\n    if (headers) {\n      Image.getSizeWithHeaders(uri, headers, onImageDimensionsSuccess, onerror);\n    } else {\n      Image.getSize(uri, onImageDimensionsSuccess, onerror);\n    }\n  });\n}\n\nfunction useFetchedNaturalDimensions(props: UseIMGElementStateProps) {\n  const { source, cachedNaturalDimensions } = props;\n  const {\n    error,\n    flatStyle,\n    naturalDimensions,\n    specifiedDimensions,\n    onError,\n    onNaturalDimensions\n  } = useImageNaturalDimensions(props);\n  const hasCachedDimensions = !!cachedNaturalDimensions;\n  useEffect(\n    function fetchPhysicalDimensions() {\n      let cancelled = false;\n      if (source.uri && !hasCachedDimensions) {\n        getImageSizeAsync({ uri: source.uri, headers: source.headers })\n          .then((dimensions) => !cancelled && onNaturalDimensions(dimensions))\n          .catch((e) => !cancelled && onError(e || {}));\n        return () => {\n          cancelled = true;\n        };\n      }\n    },\n    [\n      source.uri,\n      source.headers,\n      onNaturalDimensions,\n      onError,\n      hasCachedDimensions\n    ]\n  );\n  return {\n    specifiedDimensions,\n    flatStyle,\n    naturalDimensions,\n    error,\n    onError,\n    onNaturalDimensions\n  };\n}\n\n/**\n * This hook will compute concrete dimensions from image natural dimensions and\n * constraints. It will fetch the image and get its dimensions.\n *\n * @remarks If you know the dimensions beforehand, use\n * {@link useIMGElementStateWithCache} instead to save a network request and\n * prevent a layout shift.\n */\nexport default function useIMGElementState(\n  props: UseIMGElementStateProps\n): IMGElementState {\n  const {\n    alt,\n    altColor,\n    source,\n    contentWidth,\n    computeMaxWidth,\n    objectFit,\n    initialDimensions = defaultImageInitialDimensions\n  } = props;\n  const { naturalDimensions, specifiedDimensions, flatStyle, onError, error } =\n    useFetchedNaturalDimensions(props);\n  const concreteDimensions = useImageConcreteDimensions({\n    flatStyle,\n    naturalDimensions,\n    specifiedDimensions,\n    computeMaxWidth,\n    contentWidth\n  });\n  return getIMGState({\n    error,\n    alt,\n    altColor,\n    concreteDimensions,\n    containerStyle: flatStyle,\n    initialDimensions,\n    objectFit,\n    onError,\n    source\n  });\n}\n"]},"metadata":{},"sourceType":"script"}