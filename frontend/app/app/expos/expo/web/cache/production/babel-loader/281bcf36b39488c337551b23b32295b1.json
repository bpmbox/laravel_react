{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import AnimatedText from\"../../Typography/AnimatedText\";import{useTheme}from\"../../../core/theming\";var LabelBackground=function LabelBackground(_ref){var parentState=_ref.parentState,_ref$labelProps=_ref.labelProps,placeholderStyle=_ref$labelProps.placeholderStyle,baseLabelTranslateX=_ref$labelProps.baseLabelTranslateX,topPosition=_ref$labelProps.topPosition,hasActiveOutline=_ref$labelProps.hasActiveOutline,label=_ref$labelProps.label,backgroundColor=_ref$labelProps.backgroundColor,labelStyle=_ref.labelStyle;var hasFocus=hasActiveOutline||parentState.value;var opacity=parentState.labeled.interpolate({inputRange:[0,1],outputRange:[hasFocus?1:0,0]});var _useTheme=useTheme(),roundness=_useTheme.roundness;var labelTranslationX={transform:[{translateX:parentState.labeled.interpolate({inputRange:[0,1],outputRange:[-baseLabelTranslateX,0]})}]};return label?[React.createElement(Animated.View,{key:\"labelBackground-view\",pointerEvents:\"none\",style:[StyleSheet.absoluteFill,styles.view,{backgroundColor:backgroundColor,opacity:opacity,bottom:Math.max(roundness,2)},labelTranslationX]}),React.createElement(AnimatedText,{key:\"labelBackground-text\",style:[placeholderStyle,labelStyle,styles.outlinedLabel,{top:topPosition+1,backgroundColor:backgroundColor,opacity:opacity,transform:[].concat(_toConsumableArray(labelStyle.transform),[{scaleY:parentState.labeled.interpolate({inputRange:[0,1],outputRange:[0.2,1]})}])}],numberOfLines:1},label)]:null;};export default LabelBackground;var styles=StyleSheet.create({view:{position:'absolute',top:6,left:10,width:8},outlinedLabel:{position:'absolute',left:18,paddingHorizontal:0,color:'transparent'}});","map":{"version":3,"sources":["LabelBackground.tsx"],"names":["LabelBackground","labelProps","backgroundColor","labelStyle","hasFocus","hasActiveOutline","parentState","opacity","inputRange","outputRange","roundness","useTheme","labelTranslationX","transform","translateX","label","StyleSheet","styles","bottom","Math","top","topPosition","scaleY","view","position","left","width","outlinedLabel","paddingHorizontal","color"],"mappings":"yEAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,8HAGA,MAAA,CAAA,YAAA,qCACA,OAAA,QAAA,6BAIA,GAAMA,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAWI,IAXH,CAAA,WAWG,MAXH,WAWG,sBAT1BC,UAS0B,CATd,gBASc,iBATd,gBASc,CATd,mBASc,iBATd,mBASc,CATd,WASc,iBATd,WASc,CATd,gBASc,iBATd,gBASc,CATd,KASc,iBATd,KASc,CAHxBC,eAGwB,iBAHxBA,eAGwB,CAD1BC,UAC0B,MAD1BA,UAC0B,CAC1B,GAAMC,CAAAA,QAAQ,CAAGC,gBAAgB,EAAIC,WAAW,CAAhD,KAAA,CACA,GAAMC,CAAAA,OAAO,CAAG,WAAW,CAAX,OAAA,CAAA,WAAA,CAAgC,CAC9CC,UAAU,CAAE,CAAA,CAAA,CADkC,CAClC,CADkC,CAE9CC,WAAW,CAAE,CAACL,QAAQ,CAAA,CAAA,CAAT,CAAA,CAAA,CAAA,CAFiC,CAAhC,CAAhB,CAF0B,cAMJO,QAAtB,EAN0B,CAMlBD,SANkB,WAMlBA,SANkB,CAQ1B,GAAME,CAAAA,iBAAiB,CAAG,CACxBC,SAAS,CAAE,CACT,CACEC,UAAU,CAAE,WAAW,CAAX,OAAA,CAAA,WAAA,CAAgC,CAC1CN,UAAU,CAAE,CAAA,CAAA,CAD8B,CAC9B,CAD8B,CAE1CC,WAAW,CAAE,CAAC,CAAD,mBAAA,CAAA,CAAA,CAF6B,CAAhC,CADd,CADS,CADa,CAA1B,CAWA,MAAOM,CAAAA,KAAK,CACR,CACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,CAAA,CACE,GAAG,CADL,sBAAA,CAEE,aAAa,CAFf,MAAA,CAGE,KAAK,CAAE,CACLC,UAAU,CADL,YAAA,CAELC,MAAM,CAFD,IAAA,CAGL,CACEf,eADF,CACEA,eADF,CAEEK,OAFF,CAEEA,OAFF,CAGEW,MAAM,CAAEC,IAAI,CAAJA,GAAAA,CAAAA,SAAAA,CAAAA,CAAAA,CAHV,CAHK,CAAA,iBAAA,CAHT,CAAA,CADF,CAeE,KAAA,CAAA,aAAA,CAAA,YAAA,CAAA,CACE,GAAG,CADL,sBAAA,CAEE,KAAK,CAAE,CAAA,gBAAA,CAAA,UAAA,CAGLF,MAAM,CAHD,aAAA,CAIL,CACEG,GAAG,CAAEC,WAAW,CADlB,CAAA,CAEEnB,eAFF,CAEEA,eAFF,CAGEK,OAHF,CAGEA,OAHF,CAIEM,SAAS,8BACJV,UAAU,CADJ,SAAF,GAEP,CACEmB,MAAM,CAAE,WAAW,CAAX,OAAA,CAAA,WAAA,CAAgC,CACtCd,UAAU,CAAE,CAAA,CAAA,CAD0B,CAC1B,CAD0B,CAEtCC,WAAW,CAAE,CAAA,GAAA,CAAA,CAAA,CAFyB,CAAhC,CADV,CAFO,EAJX,CAJK,CAFT,CAqBE,aAAa,CAAE,CArBjB,CAAA,CAhBM,KAgBN,CAfF,CADQ,CAAZ,IAAA,CA9BF,CAAA,CA2EA,cAAA,CAAA,eAAA,CAEA,GAAMQ,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BM,IAAI,CAAE,CACJC,QAAQ,CADJ,UAAA,CAEJJ,GAAG,CAFC,CAAA,CAGJK,IAAI,CAHA,EAAA,CAIJC,KAAK,CAAE,CAJH,CADyB,CAO/BC,aAAa,CAAE,CACbH,QAAQ,CADK,UAAA,CAEbC,IAAI,CAFS,EAAA,CAGbG,iBAAiB,CAHJ,CAAA,CAIbC,KAAK,CAAE,aAJM,CAPgB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\nimport { useTheme } from '../../../core/theming';\n\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n  },\n  labelStyle,\n}: LabelBackgroundProps) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0],\n  });\n  const { roundness } = useTheme();\n\n  const labelTranslationX = {\n    transform: [\n      {\n        translateX: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-baseLabelTranslateX, 0],\n        }),\n      },\n    ],\n  };\n\n  return label\n    ? [\n        <Animated.View\n          key=\"labelBackground-view\"\n          pointerEvents=\"none\"\n          style={[\n            StyleSheet.absoluteFill,\n            styles.view,\n            {\n              backgroundColor,\n              opacity,\n              bottom: Math.max(roundness, 2),\n            },\n            labelTranslationX,\n          ]}\n        />,\n        <AnimatedText\n          key=\"labelBackground-text\"\n          style={[\n            placeholderStyle,\n            labelStyle,\n            styles.outlinedLabel,\n            {\n              top: topPosition + 1,\n              backgroundColor,\n              opacity,\n              transform: [\n                ...labelStyle.transform,\n                {\n                  scaleY: parentState.labeled.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.2, 1],\n                  }),\n                },\n              ],\n            },\n          ]}\n          numberOfLines={1}\n        >\n          {label}\n        </AnimatedText>,\n      ]\n    : null;\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 8,\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}