{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import _ from'lodash';import PropTypes from'prop-types';import memoize from'memoize-one';import XDate from'xdate';import React,{Component,Fragment}from'react';import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Platform from\"react-native-web/dist/exports/Platform\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Image from\"react-native-web/dist/exports/Image\";import{shouldUpdate}from\"../../component-updater\";import{weekDayNames}from\"../../dateutils\";import{CHANGE_MONTH_LEFT_ARROW,CHANGE_MONTH_RIGHT_ARROW,HEADER_DAY_NAMES,HEADER_LOADING_INDICATOR,HEADER_MONTH_NAME}from\"../../testIDs\";import styleConstructor from\"./style\";var CalendarHeader=function(_Component){_inherits(CalendarHeader,_Component);var _super=_createSuper(CalendarHeader);function CalendarHeader(props){var _this;_classCallCheck(this,CalendarHeader);_this=_super.call(this,props);_this.addMonth=function(){var addMonth=_this.props.addMonth;addMonth==null?void 0:addMonth(1);};_this.subtractMonth=function(){var addMonth=_this.props.addMonth;addMonth==null?void 0:addMonth(-1);};_this.onPressLeft=function(){var _this$props=_this.props,onPressArrowLeft=_this$props.onPressArrowLeft,month=_this$props.month;if(typeof onPressArrowLeft==='function'){return onPressArrowLeft(_this.subtractMonth,month);}return _this.subtractMonth();};_this.onPressRight=function(){var _this$props2=_this.props,onPressArrowRight=_this$props2.onPressArrowRight,month=_this$props2.month;if(typeof onPressArrowRight==='function'){return onPressArrowRight(_this.addMonth,month);}return _this.addMonth();};_this.renderWeekDays=memoize(function(weekDaysNames){var disabledDaysIndexes=_this.props.disabledDaysIndexes;return weekDaysNames.map(function(day,idx){var dayStyle=[_this.style.dayHeader];if(_.includes(disabledDaysIndexes,idx)){dayStyle.push(_this.style.disabledDayHeader);}if(_this.style[\"dayTextAtIndex\"+idx]){dayStyle.push(_this.style[\"dayTextAtIndex\"+idx]);}return React.createElement(Text,{allowFontScaling:false,key:idx,style:dayStyle,numberOfLines:1,accessibilityLabel:''},day);});});_this.renderHeader=function(){var _this$props3=_this.props,renderHeader=_this$props3.renderHeader,month=_this$props3.month,monthFormat=_this$props3.monthFormat,testID=_this$props3.testID,webAriaLevel=_this$props3.webAriaLevel;var webProps=Platform.OS==='web'?{'aria-level':webAriaLevel}:{};if(renderHeader){return renderHeader(month);}return React.createElement(Fragment,null,React.createElement(Text,_extends({allowFontScaling:false,style:_this.style.monthText,testID:testID?HEADER_MONTH_NAME+\"-\"+testID:HEADER_MONTH_NAME},webProps),month==null?void 0:month.toString(monthFormat)));};_this.onAccessibilityAction=function(event){switch(event.nativeEvent.actionName){case'decrement':_this.onPressLeft();break;case'increment':_this.onPressRight();break;default:break;}};_this.style=styleConstructor(props.theme);return _this;}_createClass(CalendarHeader,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps){var _nextProps$month,_this$props$month;if(((_nextProps$month=nextProps.month)==null?void 0:_nextProps$month.toString('yyyy MM'))!==((_this$props$month=this.props.month)==null?void 0:_this$props$month.toString('yyyy MM'))){return true;}return shouldUpdate(this.props,nextProps,['displayLoadingIndicator','hideDayNames','firstDay','showWeekNumbers','monthFormat','renderArrow','disableArrowLeft','disableArrowRight']);}},{key:\"renderArrow\",value:function renderArrow(direction){var _this$props4=this.props,hideArrows=_this$props4.hideArrows,disableArrowLeft=_this$props4.disableArrowLeft,disableArrowRight=_this$props4.disableArrowRight,renderArrow=_this$props4.renderArrow,testID=_this$props4.testID;if(hideArrows){return React.createElement(View,null);}var isLeft=direction==='left';var id=isLeft?CHANGE_MONTH_LEFT_ARROW:CHANGE_MONTH_RIGHT_ARROW;var testId=testID?id+\"-\"+testID:id;var onPress=isLeft?this.onPressLeft:this.onPressRight;var imageSource=isLeft?require(\"../img/previous.png\"):require(\"../img/next.png\");var renderArrowDirection=isLeft?'left':'right';var shouldDisable=isLeft?disableArrowLeft:disableArrowRight;return React.createElement(TouchableOpacity,{onPress:!shouldDisable?onPress:undefined,disabled:shouldDisable,style:this.style.arrow,hitSlop:{left:20,right:20,top:20,bottom:20},testID:testId},renderArrow?renderArrow(renderArrowDirection):React.createElement(Image,{source:imageSource,style:shouldDisable?this.style.disabledArrowImage:this.style.arrowImage}));}},{key:\"renderIndicator\",value:function renderIndicator(){var _this$props5=this.props,displayLoadingIndicator=_this$props5.displayLoadingIndicator,theme=_this$props5.theme,testID=_this$props5.testID;if(displayLoadingIndicator){return React.createElement(ActivityIndicator,{color:theme==null?void 0:theme.indicatorColor,testID:testID?HEADER_LOADING_INDICATOR+\"-\"+testID:HEADER_LOADING_INDICATOR});}}},{key:\"renderDayNames\",value:function renderDayNames(){var _this$props6=this.props,firstDay=_this$props6.firstDay,hideDayNames=_this$props6.hideDayNames,showWeekNumbers=_this$props6.showWeekNumbers,testID=_this$props6.testID;var weekDaysNames=weekDayNames(firstDay);if(!hideDayNames){return React.createElement(View,{style:this.style.week,testID:testID?HEADER_DAY_NAMES+\"-\"+testID:HEADER_DAY_NAMES},showWeekNumbers&&React.createElement(Text,{allowFontScaling:false,style:this.style.dayHeader}),this.renderWeekDays(weekDaysNames));}}},{key:\"render\",value:function render(){var _this$props7=this.props,style=_this$props7.style,testID=_this$props7.testID;return React.createElement(View,{testID:testID,style:style,accessible:true,accessibilityRole:'adjustable',accessibilityActions:[{name:'increment',label:'increment'},{name:'decrement',label:'decrement'}],onAccessibilityAction:this.onAccessibilityAction,accessibilityElementsHidden:this.props.accessibilityElementsHidden,importantForAccessibility:this.props.importantForAccessibility},React.createElement(View,{style:this.style.header},this.renderArrow('left'),React.createElement(View,{style:this.style.headerContainer},this.renderHeader(),this.renderIndicator()),this.renderArrow('right')),this.renderDayNames());}}]);return CalendarHeader;}(Component);CalendarHeader.displayName='IGNORE';CalendarHeader.propTypes={theme:PropTypes.object,firstDay:PropTypes.number,displayLoadingIndicator:PropTypes.bool,showWeekNumbers:PropTypes.bool,month:PropTypes.instanceOf(XDate),addMonth:PropTypes.func,monthFormat:PropTypes.string,hideDayNames:PropTypes.bool,hideArrows:PropTypes.bool,renderArrow:PropTypes.func,onPressArrowLeft:PropTypes.func,onPressArrowRight:PropTypes.func,disableArrowLeft:PropTypes.bool,disableArrowRight:PropTypes.bool,disabledDaysIndexes:PropTypes.arrayOf(PropTypes.number),renderHeader:PropTypes.any,webAriaLevel:PropTypes.number};CalendarHeader.defaultProps={monthFormat:'MMMM yyyy',webAriaLevel:1};export default CalendarHeader;","map":{"version":3,"sources":["/app/node_modules/react-native-calendars/src/calendar/header/index.js"],"names":["_","PropTypes","memoize","XDate","React","Component","Fragment","shouldUpdate","weekDayNames","CHANGE_MONTH_LEFT_ARROW","CHANGE_MONTH_RIGHT_ARROW","HEADER_DAY_NAMES","HEADER_LOADING_INDICATOR","HEADER_MONTH_NAME","styleConstructor","CalendarHeader","props","addMonth","subtractMonth","onPressLeft","onPressArrowLeft","month","onPressRight","onPressArrowRight","renderWeekDays","weekDaysNames","disabledDaysIndexes","map","day","idx","dayStyle","style","dayHeader","includes","push","disabledDayHeader","renderHeader","monthFormat","testID","webAriaLevel","webProps","Platform","OS","monthText","toString","onAccessibilityAction","event","nativeEvent","actionName","theme","nextProps","direction","hideArrows","disableArrowLeft","disableArrowRight","renderArrow","isLeft","id","testId","onPress","imageSource","require","renderArrowDirection","shouldDisable","undefined","arrow","left","right","top","bottom","disabledArrowImage","arrowImage","displayLoadingIndicator","indicatorColor","firstDay","hideDayNames","showWeekNumbers","week","name","label","accessibilityElementsHidden","importantForAccessibility","header","headerContainer","renderIndicator","renderDayNames","displayName","propTypes","object","number","bool","instanceOf","func","string","arrayOf","any","defaultProps"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport XDate from 'xdate';\nimport React, { Component, Fragment } from 'react';\nimport { ActivityIndicator, Platform, View, Text, TouchableOpacity, Image } from 'react-native';\n// @ts-expect-error\nimport { shouldUpdate } from '../../component-updater';\n// @ts-expect-error\nimport { weekDayNames } from '../../dateutils';\nimport { CHANGE_MONTH_LEFT_ARROW, CHANGE_MONTH_RIGHT_ARROW, HEADER_DAY_NAMES, HEADER_LOADING_INDICATOR, HEADER_MONTH_NAME\n// @ts-expect-error\n } from '../../testIDs';\nimport styleConstructor from './style';\nclass CalendarHeader extends Component {\n    static displayName = 'IGNORE';\n    static propTypes = {\n        theme: PropTypes.object,\n        firstDay: PropTypes.number,\n        displayLoadingIndicator: PropTypes.bool,\n        showWeekNumbers: PropTypes.bool,\n        month: PropTypes.instanceOf(XDate),\n        addMonth: PropTypes.func,\n        /** Month format in the title. Formatting values: http://arshaw.com/xdate/#Formatting */\n        monthFormat: PropTypes.string,\n        /**  Hide day names. Default = false */\n        hideDayNames: PropTypes.bool,\n        /** Hide month navigation arrows. Default = false */\n        hideArrows: PropTypes.bool,\n        /** Replace default arrows with custom ones (direction can be 'left' or 'right') */\n        renderArrow: PropTypes.func,\n        /** Handler which gets executed when press arrow icon left. It receive a callback can go back month */\n        onPressArrowLeft: PropTypes.func,\n        /** Handler which gets executed when press arrow icon right. It receive a callback can go next month */\n        onPressArrowRight: PropTypes.func,\n        /** Disable left arrow. Default = false */\n        disableArrowLeft: PropTypes.bool,\n        /** Disable right arrow. Default = false */\n        disableArrowRight: PropTypes.bool,\n        /** Apply custom disable color to selected day indexes */\n        disabledDaysIndexes: PropTypes.arrayOf(PropTypes.number),\n        /** Replace default month and year title with custom one. the function receive a date as parameter. */\n        renderHeader: PropTypes.any,\n        /** Provide aria-level for calendar heading for proper accessibility when used with web (react-native-web) */\n        webAriaLevel: PropTypes.number\n    };\n    static defaultProps = {\n        monthFormat: 'MMMM yyyy',\n        webAriaLevel: 1\n    };\n    style;\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n    }\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.month?.toString('yyyy MM') !== this.props.month?.toString('yyyy MM')) {\n            return true;\n        }\n        return shouldUpdate(this.props, nextProps, [\n            'displayLoadingIndicator',\n            'hideDayNames',\n            'firstDay',\n            'showWeekNumbers',\n            'monthFormat',\n            'renderArrow',\n            'disableArrowLeft',\n            'disableArrowRight'\n        ]);\n    }\n    addMonth = () => {\n        const { addMonth } = this.props;\n        addMonth?.(1);\n    };\n    subtractMonth = () => {\n        const { addMonth } = this.props;\n        addMonth?.(-1);\n    };\n    onPressLeft = () => {\n        const { onPressArrowLeft, month } = this.props;\n        if (typeof onPressArrowLeft === 'function') {\n            return onPressArrowLeft(this.subtractMonth, month);\n        }\n        return this.subtractMonth();\n    };\n    onPressRight = () => {\n        const { onPressArrowRight, month } = this.props;\n        if (typeof onPressArrowRight === 'function') {\n            return onPressArrowRight(this.addMonth, month);\n        }\n        return this.addMonth();\n    };\n    renderWeekDays = memoize(weekDaysNames => {\n        const { disabledDaysIndexes } = this.props;\n        return weekDaysNames.map((day, idx) => {\n            const dayStyle = [this.style.dayHeader];\n            if (_.includes(disabledDaysIndexes, idx)) {\n                dayStyle.push(this.style.disabledDayHeader);\n            }\n            if (this.style[`dayTextAtIndex${idx}`]) {\n                dayStyle.push(this.style[`dayTextAtIndex${idx}`]);\n            }\n            return (<Text allowFontScaling={false} key={idx} style={dayStyle} numberOfLines={1} accessibilityLabel={''}>\n          {day}\n        </Text>);\n        });\n    });\n    renderHeader = () => {\n        const { renderHeader, month, monthFormat, testID, webAriaLevel } = this.props;\n        const webProps = Platform.OS === 'web' ? { 'aria-level': webAriaLevel } : {};\n        if (renderHeader) {\n            return renderHeader(month);\n        }\n        return (<Fragment>\n        <Text allowFontScaling={false} style={this.style.monthText} testID={testID ? `${HEADER_MONTH_NAME}-${testID}` : HEADER_MONTH_NAME} {...webProps}>\n          {month?.toString(monthFormat)}\n        </Text>\n      </Fragment>);\n    };\n    renderArrow(direction) {\n        const { hideArrows, disableArrowLeft, disableArrowRight, renderArrow, testID } = this.props;\n        if (hideArrows) {\n            return <View />;\n        }\n        const isLeft = direction === 'left';\n        const id = isLeft ? CHANGE_MONTH_LEFT_ARROW : CHANGE_MONTH_RIGHT_ARROW;\n        const testId = testID ? `${id}-${testID}` : id;\n        const onPress = isLeft ? this.onPressLeft : this.onPressRight;\n        const imageSource = isLeft ? require('../img/previous.png') : require('../img/next.png');\n        const renderArrowDirection = isLeft ? 'left' : 'right';\n        const shouldDisable = isLeft ? disableArrowLeft : disableArrowRight;\n        return (<TouchableOpacity onPress={!shouldDisable ? onPress : undefined} disabled={shouldDisable} style={this.style.arrow} hitSlop={{ left: 20, right: 20, top: 20, bottom: 20 }} testID={testId}>\n        {renderArrow ? (renderArrow(renderArrowDirection)) : (<Image source={imageSource} style={shouldDisable ? this.style.disabledArrowImage : this.style.arrowImage}/>)}\n      </TouchableOpacity>);\n    }\n    renderIndicator() {\n        const { displayLoadingIndicator, theme, testID } = this.props;\n        if (displayLoadingIndicator) {\n            return (<ActivityIndicator color={theme?.indicatorColor} testID={testID ? `${HEADER_LOADING_INDICATOR}-${testID}` : HEADER_LOADING_INDICATOR}/>);\n        }\n    }\n    renderDayNames() {\n        const { firstDay, hideDayNames, showWeekNumbers, testID } = this.props;\n        const weekDaysNames = weekDayNames(firstDay);\n        if (!hideDayNames) {\n            return (<View style={this.style.week} testID={testID ? `${HEADER_DAY_NAMES}-${testID}` : HEADER_DAY_NAMES}>\n          {showWeekNumbers && <Text allowFontScaling={false} style={this.style.dayHeader}></Text>}\n          {this.renderWeekDays(weekDaysNames)}\n        </View>);\n        }\n    }\n    render() {\n        const { style, testID } = this.props;\n        return (<View testID={testID} style={style} accessible accessibilityRole={'adjustable'} accessibilityActions={[\n                { name: 'increment', label: 'increment' },\n                { name: 'decrement', label: 'decrement' }\n            ]} onAccessibilityAction={this.onAccessibilityAction} accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n         importantForAccessibility={this.props.importantForAccessibility} // Android\n        >\n        <View style={this.style.header}>\n          {this.renderArrow('left')}\n          <View style={this.style.headerContainer}>\n            {this.renderHeader()}\n            {this.renderIndicator()}\n          </View>\n          {this.renderArrow('right')}\n        </View>\n        {this.renderDayNames()}\n      </View>);\n    }\n    onAccessibilityAction = (event) => {\n        switch (event.nativeEvent.actionName) {\n            case 'decrement':\n                this.onPressLeft();\n                break;\n            case 'increment':\n                this.onPressRight();\n                break;\n            default:\n                break;\n        }\n    };\n}\nexport default CalendarHeader;\n"]},"metadata":{},"sourceType":"module"}