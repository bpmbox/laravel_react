{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import _ from'lodash';import PropTypes from'prop-types';import XDate from'xdate';import React,{Component}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import{xdateToData}from\"../../interface\";import{isToday}from\"../../dateutils\";import{RESERVATION_DATE}from\"../../testIDs\";import styleConstructor from\"./style\";var Reservation=function(_Component){_inherits(Reservation,_Component);var _super=_createSuper(Reservation);function Reservation(props){var _this;_classCallCheck(this,Reservation);_this=_super.call(this,props);_this.style=styleConstructor(props.theme);return _this;}_createClass(Reservation,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps){var r1=this.props.item;var r2=nextProps.item;var changed=true;if(!r1&&!r2){changed=false;}else if(r1&&r2){if(r1.day.getTime()!==r2.day.getTime()){changed=true;}else if(!r1.reservation&&!r2.reservation){changed=false;}else if(r1.reservation&&r2.reservation){if(!r1.date&&!r2.date||r1.date&&r2.date){if(_.isFunction(this.props.rowHasChanged)){changed=this.props.rowHasChanged(r1.reservation,r2.reservation);}}}}return changed;}},{key:\"renderDate\",value:function renderDate(date,item){if(_.isFunction(this.props.renderDay)){return this.props.renderDay(date?xdateToData(date):undefined,item);}var today=isToday(date)?this.style.today:undefined;var dayNames=XDate.locales[XDate.defaultLocale].dayNamesShort;if(date){return React.createElement(View,{style:this.style.day,testID:RESERVATION_DATE},React.createElement(Text,{allowFontScaling:false,style:[this.style.dayNum,today]},date.getDate()),React.createElement(Text,{allowFontScaling:false,style:[this.style.dayText,today]},dayNames?dayNames[date.getDay()]:undefined));}else{return React.createElement(View,{style:this.style.day});}}},{key:\"render\",value:function render(){var _this$props$item=this.props.item,reservation=_this$props$item.reservation,date=_this$props$item.date;var content;if(reservation){var firstItem=date?true:false;if(_.isFunction(this.props.renderItem)){content=this.props.renderItem(reservation,firstItem);}}else if(_.isFunction(this.props.renderEmptyDate)){content=this.props.renderEmptyDate(date);}return React.createElement(View,{style:this.style.container},this.renderDate(date,reservation),React.createElement(View,{style:this.style.innerContainer},content));}}]);return Reservation;}(Component);Reservation.displayName='IGNORE';Reservation.propTypes={item:PropTypes.any,theme:PropTypes.object,rowHasChanged:PropTypes.func,renderDay:PropTypes.func,renderItem:PropTypes.func,renderEmptyDate:PropTypes.func};export default Reservation;","map":{"version":3,"sources":["/app/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js"],"names":["_","PropTypes","XDate","React","Component","xdateToData","isToday","RESERVATION_DATE","styleConstructor","Reservation","props","style","theme","nextProps","r1","item","r2","changed","day","getTime","reservation","date","isFunction","rowHasChanged","renderDay","undefined","today","dayNames","locales","defaultLocale","dayNamesShort","dayNum","getDate","dayText","getDay","content","firstItem","renderItem","renderEmptyDate","container","renderDate","innerContainer","displayName","propTypes","any","object","func"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { View, Text } from 'react-native';\n// @ts-expect-error\nimport { xdateToData } from '../../interface';\n// @ts-expect-error\nimport { isToday } from '../../dateutils';\n// @ts-expect-error\nimport { RESERVATION_DATE } from '../../testIDs';\nimport styleConstructor from './style';\nclass Reservation extends Component {\n    static displayName = 'IGNORE';\n    static propTypes = {\n        item: PropTypes.any,\n        /** Specify theme properties to override specific styles for reservation parts. Default = {} */\n        theme: PropTypes.object,\n        /** specify your item comparison function for increased performance */\n        rowHasChanged: PropTypes.func,\n        /** specify how each date should be rendered. day can be undefined if the item is not first in that day */\n        renderDay: PropTypes.func,\n        /** specify how each item should be rendered in agenda */\n        renderItem: PropTypes.func,\n        /** specify how empty date content with no items should be rendered */\n        renderEmptyDate: PropTypes.func\n    };\n    style;\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n    }\n    shouldComponentUpdate(nextProps) {\n        const r1 = this.props.item;\n        const r2 = nextProps.item;\n        let changed = true;\n        if (!r1 && !r2) {\n            changed = false;\n        }\n        else if (r1 && r2) {\n            if (r1.day.getTime() !== r2.day.getTime()) {\n                changed = true;\n            }\n            else if (!r1.reservation && !r2.reservation) {\n                changed = false;\n            }\n            else if (r1.reservation && r2.reservation) {\n                if ((!r1.date && !r2.date) || (r1.date && r2.date)) {\n                    if (_.isFunction(this.props.rowHasChanged)) {\n                        changed = this.props.rowHasChanged(r1.reservation, r2.reservation);\n                    }\n                }\n            }\n        }\n        return changed;\n    }\n    renderDate(date, item) {\n        if (_.isFunction(this.props.renderDay)) {\n            return this.props.renderDay(date ? xdateToData(date) : undefined, item);\n        }\n        const today = isToday(date) ? this.style.today : undefined;\n        const dayNames = XDate.locales[XDate.defaultLocale].dayNamesShort;\n        if (date) {\n            return (<View style={this.style.day} testID={RESERVATION_DATE}>\n          <Text allowFontScaling={false} style={[this.style.dayNum, today]}>\n            {date.getDate()}\n          </Text>\n          <Text allowFontScaling={false} style={[this.style.dayText, today]}>\n            {dayNames ? dayNames[date.getDay()] : undefined}\n          </Text>\n        </View>);\n        }\n        else {\n            return <View style={this.style.day}/>;\n        }\n    }\n    render() {\n        const { reservation, date } = this.props.item;\n        let content;\n        if (reservation) {\n            const firstItem = date ? true : false;\n            if (_.isFunction(this.props.renderItem)) {\n                content = this.props.renderItem(reservation, firstItem);\n            }\n        }\n        else if (_.isFunction(this.props.renderEmptyDate)) {\n            content = this.props.renderEmptyDate(date);\n        }\n        return (<View style={this.style.container}>\n        {this.renderDate(date, reservation)}\n        <View style={this.style.innerContainer}>{content}</View>\n      </View>);\n    }\n}\nexport default Reservation;\n"]},"metadata":{},"sourceType":"module"}