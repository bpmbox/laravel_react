{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import*as React from'react';import createElement from'react-native-web/dist/exports/createElement';import ExponentAV from\"./ExponentAV\";import{addFullscreenListener}from\"./FullscreenUtils.web\";export var FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT=0;export var FULLSCREEN_UPDATE_PLAYER_DID_PRESENT=1;export var FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS=2;export var FULLSCREEN_UPDATE_PLAYER_DID_DISMISS=3;export var IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT=FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT;export var IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT=FULLSCREEN_UPDATE_PLAYER_DID_PRESENT;export var IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS=FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS;export var IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS=FULLSCREEN_UPDATE_PLAYER_DID_DISMISS;var Video=React.forwardRef(function(props,ref){return createElement('video',_objectSpread(_objectSpread({},props),{},{ref:ref}));});var ExponentVideo=function(_React$Component){_inherits(ExponentVideo,_React$Component);var _super=_createSuper(ExponentVideo);function ExponentVideo(){var _this;_classCallCheck(this,ExponentVideo);_this=_super.apply(this,arguments);_this.onFullscreenChange=function(isFullscreen){if(!_this.props.onFullscreenUpdate)return;if(isFullscreen){_this.props.onFullscreenUpdate({nativeEvent:{fullscreenUpdate:FULLSCREEN_UPDATE_PLAYER_DID_PRESENT}});}else{_this.props.onFullscreenUpdate({nativeEvent:{fullscreenUpdate:FULLSCREEN_UPDATE_PLAYER_DID_DISMISS}});}};_this.onStatusUpdate=function _callee(){var nativeEvent;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(_this.props.onStatusUpdate){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return _regeneratorRuntime.awrap(ExponentAV.getStatusForVideo(_this._video));case 4:nativeEvent=_context.sent;_this.props.onStatusUpdate({nativeEvent:nativeEvent});case 6:case\"end\":return _context.stop();}}},null,null,null,Promise);};_this.onLoadStart=function(){if(!_this.props.onLoadStart){return;}_this.props.onLoadStart();_this.onStatusUpdate();};_this.onLoadedData=function(event){if(!_this.props.onLoad){return;}_this.props.onLoad(event);_this.onStatusUpdate();};_this.onError=function(event){if(!_this.props.onError){return;}_this.props.onError(event);_this.onStatusUpdate();};_this.onProgress=function(){_this.onStatusUpdate();};_this.onSeeking=function(){_this.onStatusUpdate();};_this.onEnded=function(){_this.onStatusUpdate();};_this.onLoadedMetadata=function(){_this.onStatusUpdate();};_this.onCanPlay=function(event){if(!_this.props.onReadyForDisplay){return;}_this.props.onReadyForDisplay(event);_this.onStatusUpdate();};_this.onStalled=function(){_this.onStatusUpdate();};_this.onRef=function(ref){_this._video=ref;_this._removeFullscreenListener==null?void 0:_this._removeFullscreenListener();_this._removeFullscreenListener=addFullscreenListener(_this._video,_this.onFullscreenChange);_this.onStatusUpdate();};return _this;}_createClass(ExponentVideo,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){var _this$_removeFullscre;(_this$_removeFullscre=this._removeFullscreenListener)==null?void 0:_this$_removeFullscre.call(this);}},{key:\"render\",value:function render(){var _this$props=this.props,source=_this$props.source,_this$props$status=_this$props.status,status=_this$props$status===void 0?{}:_this$props$status,objectFit=_this$props.resizeMode,useNativeControls=_this$props.useNativeControls,style=_this$props.style;var customStyle={position:undefined,objectFit:objectFit,overflow:'hidden'};return React.createElement(Video,{ref:this.onRef,onLoadStart:this.onLoadStart,onLoadedData:this.onLoadedData,onError:this.onError,onTimeUpdate:this.onProgress,onSeeking:this.onSeeking,onEnded:this.onEnded,onLoadedMetadata:this.onLoadedMetadata,onCanPlay:this.onCanPlay,onStalled:this.onStalled,src:(source||{uri:undefined}).uri,muted:status.isMuted,loop:status.isLooping,autoPlay:status.shouldPlay,controls:useNativeControls,style:[style,customStyle]});}}]);return ExponentVideo;}(React.Component);export{ExponentVideo as default};","map":{"version":3,"sources":["../src/ExponentVideo.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport createElement from 'react-native-web/dist/exports/createElement';\n\nimport { AVPlaybackNativeSource, AVPlaybackStatus, AVPlaybackStatusToSet } from './AV';\nimport ExponentAV from './ExponentAV';\nimport { addFullscreenListener } from './FullscreenUtils.web';\n\ntype ExponentVideoProps = {\n  source: AVPlaybackNativeSource | null;\n  resizeMode?: object;\n  status?: AVPlaybackStatusToSet;\n  useNativeControls?: boolean;\n  onStatusUpdate?: (event: { nativeEvent: AVPlaybackStatus }) => void;\n  onReadyForDisplay?: (event: { nativeEvent: object }) => void;\n  onFullscreenUpdate?: (event: { nativeEvent: object }) => void;\n  onLoadStart: () => void;\n  onLoad: (event: { nativeEvent: AVPlaybackStatus }) => void;\n  onError: (event: { nativeEvent: { error: string } }) => void;\n  // Required by react-native\n  scaleX?: number;\n  scaleY?: number;\n  translateX?: number;\n  translateY?: number;\n  rotation?: number;\n} & React.ComponentProps<typeof View>;\n\nexport type NaturalSize = {\n  width: number;\n  height: number;\n  orientation: 'portrait' | 'landscape';\n};\n\nexport const FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = 0;\nexport const FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = 1;\nexport const FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = 2;\nexport const FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = 3;\n\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = FULLSCREEN_UPDATE_PLAYER_DID_PRESENT;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = FULLSCREEN_UPDATE_PLAYER_DID_DISMISS;\n\nconst Video: any = React.forwardRef((props, ref) => createElement('video', { ...props, ref }));\n\nexport default class ExponentVideo extends React.Component<ExponentVideoProps> {\n  _video?: HTMLVideoElement;\n  _removeFullscreenListener?: () => any;\n\n  componentWillUnmount() {\n    this._removeFullscreenListener?.();\n  }\n\n  onFullscreenChange = (isFullscreen: boolean) => {\n    if (!this.props.onFullscreenUpdate) return;\n    if (isFullscreen) {\n      this.props.onFullscreenUpdate({\n        nativeEvent: { fullscreenUpdate: FULLSCREEN_UPDATE_PLAYER_DID_PRESENT },\n      });\n    } else {\n      this.props.onFullscreenUpdate({\n        nativeEvent: { fullscreenUpdate: FULLSCREEN_UPDATE_PLAYER_DID_DISMISS },\n      });\n    }\n  };\n\n  onStatusUpdate = async () => {\n    if (!this.props.onStatusUpdate) {\n      return;\n    }\n    const nativeEvent = await ExponentAV.getStatusForVideo(this._video);\n    this.props.onStatusUpdate({ nativeEvent });\n  };\n\n  onLoadStart = () => {\n    if (!this.props.onLoadStart) {\n      return;\n    }\n    this.props.onLoadStart();\n    this.onStatusUpdate();\n  };\n\n  onLoadedData = event => {\n    if (!this.props.onLoad) {\n      return;\n    }\n    this.props.onLoad(event);\n    this.onStatusUpdate();\n  };\n\n  onError = event => {\n    if (!this.props.onError) {\n      return;\n    }\n    this.props.onError(event);\n    this.onStatusUpdate();\n  };\n\n  onProgress = () => {\n    this.onStatusUpdate();\n  };\n\n  onSeeking = () => {\n    this.onStatusUpdate();\n  };\n\n  onEnded = () => {\n    this.onStatusUpdate();\n  };\n\n  onLoadedMetadata = () => {\n    this.onStatusUpdate();\n  };\n\n  onCanPlay = event => {\n    if (!this.props.onReadyForDisplay) {\n      return;\n    }\n    this.props.onReadyForDisplay(event);\n    this.onStatusUpdate();\n  };\n\n  onStalled = () => {\n    this.onStatusUpdate();\n  };\n\n  onRef = (ref: HTMLVideoElement) => {\n    this._video = ref;\n    this._removeFullscreenListener?.();\n    this._removeFullscreenListener = addFullscreenListener(this._video, this.onFullscreenChange);\n    this.onStatusUpdate();\n  };\n\n  render() {\n    const { source, status = {}, resizeMode: objectFit, useNativeControls, style } = this.props;\n\n    const customStyle = {\n      position: undefined,\n      objectFit,\n      overflow: 'hidden',\n    };\n    return (\n      <Video\n        ref={this.onRef}\n        onLoadStart={this.onLoadStart}\n        onLoadedData={this.onLoadedData}\n        onError={this.onError}\n        onTimeUpdate={this.onProgress}\n        onSeeking={this.onSeeking}\n        onEnded={this.onEnded}\n        onLoadedMetadata={this.onLoadedMetadata}\n        onCanPlay={this.onCanPlay}\n        onStalled={this.onStalled}\n        src={(source || { uri: undefined }).uri}\n        muted={status.isMuted}\n        loop={status.isLooping}\n        autoPlay={status.shouldPlay}\n        controls={useNativeControls}\n        style={[style, customStyle]}\n      />\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}