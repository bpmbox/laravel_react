{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/app/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { xdateToData } from \"../../interface\";\nimport { isToday } from \"../../dateutils\";\nimport { RESERVATION_DATE } from \"../../testIDs\";\nimport styleConstructor from \"./style\";\n\nvar Reservation = function (_Component) {\n  _inherits(Reservation, _Component);\n\n  var _super = _createSuper(Reservation);\n\n  function Reservation(props) {\n    var _this;\n\n    _classCallCheck(this, Reservation);\n\n    _this = _super.call(this, props);\n    _this.style = styleConstructor(props.theme);\n    return _this;\n  }\n\n  _createClass(Reservation, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var r1 = this.props.item;\n      var r2 = nextProps.item;\n      var changed = true;\n\n      if (!r1 && !r2) {\n        changed = false;\n      } else if (r1 && r2) {\n        if (r1.day.getTime() !== r2.day.getTime()) {\n          changed = true;\n        } else if (!r1.reservation && !r2.reservation) {\n          changed = false;\n        } else if (r1.reservation && r2.reservation) {\n          if (!r1.date && !r2.date || r1.date && r2.date) {\n            if (_.isFunction(this.props.rowHasChanged)) {\n              changed = this.props.rowHasChanged(r1.reservation, r2.reservation);\n            }\n          }\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"renderDate\",\n    value: function renderDate(date, item) {\n      if (_.isFunction(this.props.renderDay)) {\n        return this.props.renderDay(date ? xdateToData(date) : undefined, item);\n      }\n\n      var today = isToday(date) ? this.style.today : undefined;\n      var dayNames = XDate.locales[XDate.defaultLocale].dayNamesShort;\n\n      if (date) {\n        return React.createElement(View, {\n          style: this.style.day,\n          testID: RESERVATION_DATE,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          allowFontScaling: false,\n          style: [this.style.dayNum, today],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }\n        }, date.getDate()), React.createElement(Text, {\n          allowFontScaling: false,\n          style: [this.style.dayText, today],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }\n        }, dayNames ? dayNames[date.getDay()] : undefined));\n      } else {\n        return React.createElement(View, {\n          style: this.style.day,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 20\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$item = this.props.item,\n          reservation = _this$props$item.reservation,\n          date = _this$props$item.date;\n      var content;\n\n      if (reservation) {\n        var firstItem = date ? true : false;\n\n        if (_.isFunction(this.props.renderItem)) {\n          content = this.props.renderItem(reservation, firstItem);\n        }\n      } else if (_.isFunction(this.props.renderEmptyDate)) {\n        content = this.props.renderEmptyDate(date);\n      }\n\n      return React.createElement(View, {\n        style: this.style.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, this.renderDate(date, reservation), React.createElement(View, {\n        style: this.style.innerContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, content));\n    }\n  }]);\n\n  return Reservation;\n}(Component);\n\nReservation.displayName = 'IGNORE';\nReservation.propTypes = {\n  item: PropTypes.any,\n  theme: PropTypes.object,\n  rowHasChanged: PropTypes.func,\n  renderDay: PropTypes.func,\n  renderItem: PropTypes.func,\n  renderEmptyDate: PropTypes.func\n};\nexport default Reservation;","map":{"version":3,"sources":["/app/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js"],"names":["_","PropTypes","XDate","React","Component","xdateToData","isToday","RESERVATION_DATE","styleConstructor","Reservation","props","style","theme","nextProps","r1","item","r2","changed","day","getTime","reservation","date","isFunction","rowHasChanged","renderDay","undefined","today","dayNames","locales","defaultLocale","dayNamesShort","dayNum","getDate","dayText","getDay","content","firstItem","renderItem","renderEmptyDate","container","renderDate","innerContainer","displayName","propTypes","any","object","func"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { View, Text } from 'react-native';\n// @ts-expect-error\nimport { xdateToData } from '../../interface';\n// @ts-expect-error\nimport { isToday } from '../../dateutils';\n// @ts-expect-error\nimport { RESERVATION_DATE } from '../../testIDs';\nimport styleConstructor from './style';\nclass Reservation extends Component {\n    static displayName = 'IGNORE';\n    static propTypes = {\n        item: PropTypes.any,\n        /** Specify theme properties to override specific styles for reservation parts. Default = {} */\n        theme: PropTypes.object,\n        /** specify your item comparison function for increased performance */\n        rowHasChanged: PropTypes.func,\n        /** specify how each date should be rendered. day can be undefined if the item is not first in that day */\n        renderDay: PropTypes.func,\n        /** specify how each item should be rendered in agenda */\n        renderItem: PropTypes.func,\n        /** specify how empty date content with no items should be rendered */\n        renderEmptyDate: PropTypes.func\n    };\n    style;\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n    }\n    shouldComponentUpdate(nextProps) {\n        const r1 = this.props.item;\n        const r2 = nextProps.item;\n        let changed = true;\n        if (!r1 && !r2) {\n            changed = false;\n        }\n        else if (r1 && r2) {\n            if (r1.day.getTime() !== r2.day.getTime()) {\n                changed = true;\n            }\n            else if (!r1.reservation && !r2.reservation) {\n                changed = false;\n            }\n            else if (r1.reservation && r2.reservation) {\n                if ((!r1.date && !r2.date) || (r1.date && r2.date)) {\n                    if (_.isFunction(this.props.rowHasChanged)) {\n                        changed = this.props.rowHasChanged(r1.reservation, r2.reservation);\n                    }\n                }\n            }\n        }\n        return changed;\n    }\n    renderDate(date, item) {\n        if (_.isFunction(this.props.renderDay)) {\n            return this.props.renderDay(date ? xdateToData(date) : undefined, item);\n        }\n        const today = isToday(date) ? this.style.today : undefined;\n        const dayNames = XDate.locales[XDate.defaultLocale].dayNamesShort;\n        if (date) {\n            return (<View style={this.style.day} testID={RESERVATION_DATE}>\n          <Text allowFontScaling={false} style={[this.style.dayNum, today]}>\n            {date.getDate()}\n          </Text>\n          <Text allowFontScaling={false} style={[this.style.dayText, today]}>\n            {dayNames ? dayNames[date.getDay()] : undefined}\n          </Text>\n        </View>);\n        }\n        else {\n            return <View style={this.style.day}/>;\n        }\n    }\n    render() {\n        const { reservation, date } = this.props.item;\n        let content;\n        if (reservation) {\n            const firstItem = date ? true : false;\n            if (_.isFunction(this.props.renderItem)) {\n                content = this.props.renderItem(reservation, firstItem);\n            }\n        }\n        else if (_.isFunction(this.props.renderEmptyDate)) {\n            content = this.props.renderEmptyDate(date);\n        }\n        return (<View style={this.style.container}>\n        {this.renderDate(date, reservation)}\n        <View style={this.style.innerContainer}>{content}</View>\n      </View>);\n    }\n}\nexport default Reservation;\n"]},"metadata":{},"sourceType":"module"}