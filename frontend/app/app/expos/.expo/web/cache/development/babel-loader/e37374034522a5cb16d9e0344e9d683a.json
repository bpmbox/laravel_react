{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useImageNaturalDimensions;\n\nvar _react = require(\"react\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _getDimensionsWithAspectRatio = _interopRequireDefault(require(\"./getDimensionsWithAspectRatio\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction normalizeSize(dimension, options) {\n  var containerDimension = options.containerDimension || null;\n  var enablePercentWidth = options.enablePercentWidth || false;\n\n  if (dimension === null || dimension === undefined || Number.isNaN(dimension)) {\n    return null;\n  }\n\n  if (typeof dimension === 'number') {\n    return dimension;\n  }\n\n  if (dimension.search('%') !== -1 && enablePercentWidth && typeof containerDimension === 'number') {\n    return parseFloat(dimension) * containerDimension / 100;\n  } else if (dimension.trim().match(/^[\\d.]+$/)) {\n    return parseFloat(dimension);\n  }\n\n  return null;\n}\n\nfunction deriveSpecifiedDimensionsFromProps(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      contentWidth = _ref.contentWidth,\n      flatStyle = _ref.flatStyle,\n      enablePercentWidth = _ref.enableExperimentalPercentWidth;\n  var normalizeOptionsWidth = {\n    enablePercentWidth: enablePercentWidth,\n    containerDimension: contentWidth\n  };\n  var normalizeOptionsHeight = {\n    enablePercentWidth: false\n  };\n  var widthProp = normalizeSize(width, normalizeOptionsWidth);\n  var heightProp = normalizeSize(height, normalizeOptionsHeight);\n  var styleWidth = normalizeSize(flatStyle.width, normalizeOptionsWidth);\n  var styleHeight = normalizeSize(flatStyle.height, normalizeOptionsHeight);\n  return (0, _getDimensionsWithAspectRatio.default)(styleWidth !== null && styleWidth !== void 0 ? styleWidth : widthProp, styleHeight !== null && styleHeight !== void 0 ? styleHeight : heightProp, flatStyle.aspectRatio);\n}\n\nfunction useImageNaturalDimensions(props) {\n  var source = props.source,\n      contentWidth = props.contentWidth,\n      enableExperimentalPercentWidth = props.enableExperimentalPercentWidth,\n      width = props.width,\n      height = props.height,\n      style = props.style,\n      cachedNaturalDimensions = props.cachedNaturalDimensions;\n\n  var _ref2 = (0, _react.useState)(cachedNaturalDimensions || null),\n      _ref3 = _slicedToArray(_ref2, 2),\n      naturalDimensions = _ref3[0],\n      setNaturalDimensions = _ref3[1];\n\n  var flatStyle = (0, _react.useMemo)(function () {\n    return _reactNative.StyleSheet.flatten(style) || {};\n  }, [style]);\n\n  var _ref4 = cachedNaturalDimensions || {},\n      cachedNaturalWidth = _ref4.width,\n      cachedNaturalHeight = _ref4.height;\n\n  var specifiedDimensions = (0, _react.useMemo)(function () {\n    return deriveSpecifiedDimensionsFromProps({\n      contentWidth: contentWidth,\n      enableExperimentalPercentWidth: enableExperimentalPercentWidth,\n      width: width,\n      height: height,\n      flatStyle: flatStyle\n    });\n  }, [contentWidth, enableExperimentalPercentWidth, flatStyle, height, width]);\n\n  var _ref5 = (0, _react.useState)(null),\n      _ref6 = _slicedToArray(_ref5, 2),\n      error = _ref6[0],\n      setError = _ref6[1];\n\n  (0, _react.useEffect)(function resetOnURIChange() {\n    setNaturalDimensions(cachedNaturalWidth != null && cachedNaturalHeight != null ? {\n      width: cachedNaturalWidth,\n      height: cachedNaturalHeight\n    } : null);\n    setError(null);\n  }, [cachedNaturalHeight, cachedNaturalWidth, source.uri]);\n  return {\n    onNaturalDimensions: setNaturalDimensions,\n    onError: setError,\n    naturalDimensions: naturalDimensions,\n    specifiedDimensions: specifiedDimensions,\n    flatStyle: flatStyle,\n    error: error\n  };\n}","map":{"version":3,"sources":["useImageNaturalDimensions.ts"],"names":["containerDimension","options","enablePercentWidth","dimension","Number","parseFloat","enableExperimentalPercentWidth","normalizeOptionsWidth","contentWidth","normalizeOptionsHeight","widthProp","normalizeSize","heightProp","styleWidth","flatStyle","styleHeight","cachedNaturalDimensions","StyleSheet","width","height","cachedNaturalHeight","specifiedDimensions","deriveSpecifiedDimensionsFromProps","setNaturalDimensions","setError","source","onNaturalDimensions","onError","naturalDimensions","error"],"mappings":"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","sourcesContent":["import { useState, useMemo, useEffect } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ImageDimensions } from '../shared-types';\nimport getDimensionsWithAspectRatio from './getDimensionsWithAspectRatio';\nimport { UseIMGElementStateProps } from './img-types';\n\ninterface IncompleteImageDimensions {\n  width: number | null;\n  height: number | null;\n}\n\nfunction normalizeSize(\n  dimension: string | number | null | undefined,\n  options: Partial<{\n    containerDimension: number | null;\n    enablePercentWidth: boolean;\n  }>\n) {\n  const containerDimension = options.containerDimension || null;\n  const enablePercentWidth = options.enablePercentWidth || false;\n  if (\n    dimension === null ||\n    dimension === undefined ||\n    Number.isNaN(dimension)\n  ) {\n    return null;\n  }\n  if (typeof dimension === 'number') {\n    return dimension;\n  }\n  if (\n    dimension.search('%') !== -1 &&\n    enablePercentWidth &&\n    typeof containerDimension === 'number'\n  ) {\n    return (parseFloat(dimension) * containerDimension) / 100;\n  } else if (dimension.trim().match(/^[\\d.]+$/)) {\n    return parseFloat(dimension);\n  }\n  return null;\n}\n\n/**\n * Extract specified dimensions from props.\n */\nfunction deriveSpecifiedDimensionsFromProps({\n  width,\n  height,\n  contentWidth,\n  flatStyle,\n  enableExperimentalPercentWidth: enablePercentWidth\n}: Pick<\n  UseIMGElementStateProps,\n  'width' | 'height' | 'contentWidth' | 'enableExperimentalPercentWidth'\n> & { flatStyle: Record<string, any> }): IncompleteImageDimensions {\n  const normalizeOptionsWidth = {\n    enablePercentWidth,\n    containerDimension: contentWidth\n  };\n  const normalizeOptionsHeight = {\n    enablePercentWidth: false\n  };\n  const widthProp = normalizeSize(width, normalizeOptionsWidth);\n  const heightProp = normalizeSize(height, normalizeOptionsHeight);\n  const styleWidth = normalizeSize(flatStyle.width, normalizeOptionsWidth);\n  const styleHeight = normalizeSize(flatStyle.height, normalizeOptionsHeight);\n  return getDimensionsWithAspectRatio(\n    styleWidth ?? widthProp,\n    styleHeight ?? heightProp,\n    flatStyle.aspectRatio\n  );\n}\n\nexport default function useImageNaturalDimensions<\n  P extends UseIMGElementStateProps\n>(props: P) {\n  const {\n    source,\n    contentWidth,\n    enableExperimentalPercentWidth,\n    width,\n    height,\n    style,\n    cachedNaturalDimensions\n  } = props;\n  const [naturalDimensions, setNaturalDimensions] = useState<\n    P['cachedNaturalDimensions'] extends ImageDimensions\n      ? ImageDimensions\n      : ImageDimensions | null\n  >((cachedNaturalDimensions as any) || null);\n  const flatStyle = useMemo(() => StyleSheet.flatten(style) || {}, [style]);\n  const { width: cachedNaturalWidth, height: cachedNaturalHeight } =\n    cachedNaturalDimensions || {};\n  const specifiedDimensions = useMemo(\n    () =>\n      deriveSpecifiedDimensionsFromProps({\n        contentWidth,\n        enableExperimentalPercentWidth,\n        width,\n        height,\n        flatStyle\n      }),\n    [contentWidth, enableExperimentalPercentWidth, flatStyle, height, width]\n  );\n  const [error, setError] = useState<null | Error>(null);\n  useEffect(\n    function resetOnURIChange() {\n      setNaturalDimensions(\n        (cachedNaturalWidth != null && cachedNaturalHeight != null\n          ? { width: cachedNaturalWidth, height: cachedNaturalHeight }\n          : null) as any\n      );\n      setError(null);\n    },\n    [cachedNaturalHeight, cachedNaturalWidth, source.uri]\n  );\n  return {\n    onNaturalDimensions: setNaturalDimensions,\n    onError: setError,\n    naturalDimensions,\n    specifiedDimensions,\n    flatStyle,\n    error\n  };\n}\n"]},"metadata":{},"sourceType":"script"}