{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/app/node_modules/react-native-calendars/src/calendar/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport { page, isGTE, isLTE, sameMonth } from \"../dateutils\";\nimport { xdateToData, parseDate, toMarkingFormat } from \"../interface\";\nimport { getState } from \"../day-state-manager\";\nimport { extractComponentProps } from \"../component-updater\";\nimport { WEEK_NUMBER } from \"../testIDs\";\nimport styleConstructor from \"./style\";\nimport CalendarHeader from \"./header\";\nimport Day from \"./day/index\";\nimport BasicDay from \"./day/basic\";\n\nvar Calendar = function (_Component) {\n  _inherits(Calendar, _Component);\n\n  var _super = _createSuper(Calendar);\n\n  function Calendar() {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      currentMonth: _this.props.current ? parseDate(_this.props.current) : new XDate()\n    };\n    _this.style = styleConstructor(_this.props.theme);\n    _this.header = React.createRef();\n\n    _this.addMonth = function (count) {\n      _this.updateMonth(_this.state.currentMonth.clone().addMonths(count, true));\n    };\n\n    _this.updateMonth = function (day) {\n      var doNotTriggerListeners = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (day.toString('yyyy MM') === _this.state.currentMonth.toString('yyyy MM')) {\n        return;\n      }\n\n      _this.setState({\n        currentMonth: day.clone()\n      }, function () {\n        if (!doNotTriggerListeners) {\n          var currMont = _this.state.currentMonth.clone();\n\n          _.invoke(_this.props, 'onMonthChange', xdateToData(currMont));\n\n          _.invoke(_this.props, 'onVisibleMonthsChange', [xdateToData(currMont)]);\n        }\n      });\n    };\n\n    _this.pressDay = function (date) {\n      _this.handleDayInteraction(date, _this.props.onDayPress);\n    };\n\n    _this.longPressDay = function (date) {\n      _this.handleDayInteraction(date, _this.props.onDayLongPress);\n    };\n\n    _this.swipeProps = {\n      onSwipe: function onSwipe(direction) {\n        return _this.onSwipe(direction);\n      }\n    };\n\n    _this.onSwipe = function (gestureName) {\n      var SWIPE_UP = swipeDirections.SWIPE_UP,\n          SWIPE_DOWN = swipeDirections.SWIPE_DOWN,\n          SWIPE_LEFT = swipeDirections.SWIPE_LEFT,\n          SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT;\n\n      switch (gestureName) {\n        case SWIPE_UP:\n        case SWIPE_DOWN:\n          break;\n\n        case SWIPE_LEFT:\n          _this.onSwipeLeft();\n\n          break;\n\n        case SWIPE_RIGHT:\n          _this.onSwipeRight();\n\n          break;\n      }\n    };\n\n    _this.onSwipeLeft = function () {\n      var _this$header, _this$header$current;\n\n      (_this$header = _this.header) == null ? void 0 : (_this$header$current = _this$header.current) == null ? void 0 : _this$header$current.onPressRight();\n    };\n\n    _this.onSwipeRight = function () {\n      var _this$header2, _this$header2$current;\n\n      (_this$header2 = _this.header) == null ? void 0 : (_this$header2$current = _this$header2.current) == null ? void 0 : _this$header2$current.onPressLeft();\n    };\n\n    _this.renderWeekNumber = memoize(function (weekNumber) {\n      return React.createElement(View, {\n        style: _this.style.dayContainer,\n        key: \"week-container-\" + weekNumber,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, React.createElement(BasicDay, {\n        key: \"week-\" + weekNumber,\n        marking: {\n          disabled: true,\n          disableTouchEvent: true\n        },\n        theme: _this.props.theme,\n        testID: WEEK_NUMBER + \"-\" + weekNumber,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, weekNumber));\n    });\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"handleDayInteraction\",\n    value: function handleDayInteraction(date, interaction) {\n      var disableMonthChange = this.props.disableMonthChange;\n      var day = parseDate(date);\n      var minDate = parseDate(this.props.minDate);\n      var maxDate = parseDate(this.props.maxDate);\n\n      if (!(minDate && !isGTE(day, minDate)) && !(maxDate && !isLTE(day, maxDate))) {\n        var shouldUpdateMonth = disableMonthChange === undefined || !disableMonthChange;\n\n        if (shouldUpdateMonth) {\n          this.updateMonth(day);\n        }\n\n        if (interaction) {\n          interaction(xdateToData(day));\n        }\n      }\n    }\n  }, {\n    key: \"renderDay\",\n    value: function renderDay(day, id) {\n      var _this$props = this.props,\n          hideExtraDays = _this$props.hideExtraDays,\n          markedDates = _this$props.markedDates;\n      var dayProps = extractComponentProps(Day, this.props);\n\n      if (!sameMonth(day, this.state.currentMonth) && hideExtraDays) {\n        return React.createElement(View, {\n          key: id,\n          style: this.style.emptyDayContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: this.style.dayContainer,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, React.createElement(Day, _extends({}, dayProps, {\n        day: day,\n        state: getState(day, this.state.currentMonth, this.props),\n        marking: markedDates == null ? void 0 : markedDates[toMarkingFormat(day)],\n        onPress: this.pressDay,\n        onLongPress: this.longPressDay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"renderWeek\",\n    value: function renderWeek(days, id) {\n      var _this2 = this;\n\n      var week = [];\n      days.forEach(function (day, id2) {\n        week.push(_this2.renderDay(day, id2));\n      }, this);\n\n      if (this.props.showWeekNumbers) {\n        week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n      }\n\n      return React.createElement(View, {\n        style: this.style.week,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, week);\n    }\n  }, {\n    key: \"renderMonth\",\n    value: function renderMonth() {\n      var currentMonth = this.state.currentMonth;\n      var _this$props2 = this.props,\n          firstDay = _this$props2.firstDay,\n          showSixWeeks = _this$props2.showSixWeeks,\n          hideExtraDays = _this$props2.hideExtraDays;\n      var shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n      var days = page(currentMonth, firstDay, shouldShowSixWeeks);\n      var weeks = [];\n\n      while (days.length) {\n        weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n      }\n\n      return React.createElement(View, {\n        style: this.style.monthView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 16\n        }\n      }, weeks);\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var _this$props3 = this.props,\n          customHeader = _this$props3.customHeader,\n          headerStyle = _this$props3.headerStyle,\n          displayLoadingIndicator = _this$props3.displayLoadingIndicator,\n          markedDates = _this$props3.markedDates,\n          testID = _this$props3.testID;\n      var current = parseDate(this.props.current);\n      var indicator;\n\n      if (current) {\n        var lastMonthOfDay = toMarkingFormat(current.clone().addMonths(1, true).setDate(1).addDays(-1));\n\n        if (displayLoadingIndicator && !(markedDates != null && markedDates[lastMonthOfDay])) {\n          indicator = true;\n        }\n      }\n\n      var headerProps = extractComponentProps(CalendarHeader, this.props);\n      var CustomHeader = customHeader;\n      var HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n      return React.createElement(HeaderComponent, _extends({}, headerProps, {\n        testID: testID,\n        style: headerStyle,\n        ref: this.header,\n        month: this.state.currentMonth,\n        addMonth: this.addMonth,\n        displayLoadingIndicator: indicator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          enableSwipeMonths = _this$props4.enableSwipeMonths,\n          style = _this$props4.style;\n      var GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n      var gestureProps = enableSwipeMonths ? this.swipeProps : undefined;\n      return React.createElement(GestureComponent, _extends({}, gestureProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: [this.style.container, style],\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        importantForAccessibility: this.props.importantForAccessibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, this.renderHeader(), this.renderMonth()));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = _objectSpread(_objectSpread(_objectSpread({}, CalendarHeader.propTypes), Day.propTypes), {}, {\n  theme: PropTypes.object,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n  current: PropTypes.any,\n  minDate: PropTypes.any,\n  maxDate: PropTypes.any,\n  firstDay: PropTypes.number,\n  markedDates: PropTypes.object,\n  displayLoadingIndicator: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  hideExtraDays: PropTypes.bool,\n  showSixWeeks: PropTypes.bool,\n  onDayPress: PropTypes.func,\n  onDayLongPress: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  onVisibleMonthsChange: PropTypes.func,\n  disableMonthChange: PropTypes.bool,\n  enableSwipeMonths: PropTypes.bool,\n  disabledByDefault: PropTypes.bool,\n  headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  customHeader: PropTypes.any\n});\nCalendar.defaultProps = {\n  enableSwipeMonths: false\n};\nexport default Calendar;","map":{"version":3,"sources":["/app/node_modules/react-native-calendars/src/calendar/index.js"],"names":["_","PropTypes","XDate","memoize","React","Component","GestureRecognizer","swipeDirections","page","isGTE","isLTE","sameMonth","xdateToData","parseDate","toMarkingFormat","getState","extractComponentProps","WEEK_NUMBER","styleConstructor","CalendarHeader","Day","BasicDay","Calendar","state","currentMonth","props","current","style","theme","header","createRef","addMonth","count","updateMonth","clone","addMonths","day","doNotTriggerListeners","toString","setState","currMont","invoke","pressDay","date","handleDayInteraction","onDayPress","longPressDay","onDayLongPress","swipeProps","onSwipe","direction","gestureName","SWIPE_UP","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","onSwipeLeft","onSwipeRight","onPressRight","onPressLeft","renderWeekNumber","weekNumber","dayContainer","disabled","disableTouchEvent","interaction","disableMonthChange","minDate","maxDate","shouldUpdateMonth","undefined","id","hideExtraDays","markedDates","dayProps","emptyDayContainer","days","week","forEach","id2","push","renderDay","showWeekNumbers","unshift","length","getWeek","firstDay","showSixWeeks","shouldShowSixWeeks","weeks","renderWeek","splice","monthView","customHeader","headerStyle","displayLoadingIndicator","testID","indicator","lastMonthOfDay","setDate","addDays","headerProps","CustomHeader","HeaderComponent","enableSwipeMonths","GestureComponent","View","gestureProps","container","accessibilityElementsHidden","importantForAccessibility","renderHeader","renderMonth","displayName","propTypes","object","oneOfType","array","number","any","bool","func","onMonthChange","onVisibleMonthsChange","disabledByDefault","defaultProps"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport { View } from 'react-native';\n// @ts-expect-error\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\n// @ts-expect-error\nimport { page, isGTE, isLTE, sameMonth } from '../dateutils';\n// @ts-expect-error\nimport { xdateToData, parseDate, toMarkingFormat } from '../interface';\n// @ts-expect-error\nimport { getState } from '../day-state-manager';\n// import shouldComponentUpdate from './updater';\n// @ts-expect-error\nimport { extractComponentProps } from '../component-updater';\n// @ts-expect-error\nimport { WEEK_NUMBER } from '../testIDs';\nimport styleConstructor from './style';\nimport CalendarHeader from './header';\nimport Day from './day/index';\nimport BasicDay from './day/basic';\n/**\n * @description: Calendar component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/calendar.gif\n */\nclass Calendar extends Component {\n    static displayName = 'Calendar';\n    static propTypes = {\n        ...CalendarHeader.propTypes,\n        ...Day.propTypes,\n        /** Specify theme properties to override specific styles for calendar parts. Default = {} */\n        theme: PropTypes.object,\n        /** Specify style for calendar container element. Default = {} */\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n        /** Initially visible month. Default = Date() */\n        current: PropTypes.any,\n        /** Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined */\n        minDate: PropTypes.any,\n        /** Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined */\n        maxDate: PropTypes.any,\n        /** If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday. */\n        firstDay: PropTypes.number,\n        /** Collection of dates that have to be marked. Default = {} */\n        markedDates: PropTypes.object,\n        /** Display loading indicator. Default = false */\n        displayLoadingIndicator: PropTypes.bool,\n        /** Show week numbers. Default = false */\n        showWeekNumbers: PropTypes.bool,\n        /** Do not show days of other months in month page. Default = false */\n        hideExtraDays: PropTypes.bool,\n        /** Always show six weeks on each month (only when hideExtraDays = false). Default = false */\n        showSixWeeks: PropTypes.bool,\n        /** Handler which gets executed on day press. Default = undefined */\n        onDayPress: PropTypes.func,\n        /** Handler which gets executed on day long press. Default = undefined */\n        onDayLongPress: PropTypes.func,\n        /** Handler which gets executed when month changes in calendar. Default = undefined */\n        onMonthChange: PropTypes.func,\n        /** Handler which gets executed when visible month changes in calendar. Default = undefined */\n        onVisibleMonthsChange: PropTypes.func,\n        /** Disables changing month when click on days of other months (when hideExtraDays is false). Default = false */\n        disableMonthChange: PropTypes.bool,\n        /** Enable the option to swipe between months. Default: false */\n        enableSwipeMonths: PropTypes.bool,\n        /** Disable days by default. Default = false */\n        disabledByDefault: PropTypes.bool,\n        /** Style passed to the header */\n        headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n        /** Allow rendering of a totally custom header */\n        customHeader: PropTypes.any\n    };\n    static defaultProps = {\n        enableSwipeMonths: false\n    };\n    state = {\n        currentMonth: this.props.current ? parseDate(this.props.current) : new XDate()\n    };\n    style = styleConstructor(this.props.theme);\n    header = React.createRef();\n    addMonth = (count) => {\n        this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n    };\n    updateMonth = (day, doNotTriggerListeners = false) => {\n        if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n            return;\n        }\n        this.setState({ currentMonth: day.clone() }, () => {\n            if (!doNotTriggerListeners) {\n                const currMont = this.state.currentMonth.clone();\n                _.invoke(this.props, 'onMonthChange', xdateToData(currMont));\n                _.invoke(this.props, 'onVisibleMonthsChange', [xdateToData(currMont)]);\n            }\n        });\n    };\n    handleDayInteraction(date, interaction) {\n        const { disableMonthChange } = this.props;\n        const day = parseDate(date);\n        const minDate = parseDate(this.props.minDate);\n        const maxDate = parseDate(this.props.maxDate);\n        if (!(minDate && !isGTE(day, minDate)) && !(maxDate && !isLTE(day, maxDate))) {\n            const shouldUpdateMonth = disableMonthChange === undefined || !disableMonthChange;\n            if (shouldUpdateMonth) {\n                this.updateMonth(day);\n            }\n            if (interaction) {\n                interaction(xdateToData(day));\n            }\n        }\n    }\n    pressDay = (date) => {\n        this.handleDayInteraction(date, this.props.onDayPress);\n    };\n    longPressDay = (date) => {\n        this.handleDayInteraction(date, this.props.onDayLongPress);\n    };\n    swipeProps = { onSwipe: (direction) => this.onSwipe(direction) };\n    onSwipe = (gestureName) => {\n        const { SWIPE_UP, SWIPE_DOWN, SWIPE_LEFT, SWIPE_RIGHT } = swipeDirections;\n        switch (gestureName) {\n            case SWIPE_UP:\n            case SWIPE_DOWN:\n                break;\n            case SWIPE_LEFT:\n                this.onSwipeLeft();\n                break;\n            case SWIPE_RIGHT:\n                this.onSwipeRight();\n                break;\n        }\n    };\n    onSwipeLeft = () => {\n        this.header?.current?.onPressRight();\n    };\n    onSwipeRight = () => {\n        this.header?.current?.onPressLeft();\n    };\n    renderWeekNumber = memoize(weekNumber => {\n        return (<View style={this.style.dayContainer} key={`week-container-${weekNumber}`}>\n        <BasicDay key={`week-${weekNumber}`} marking={{ disabled: true, disableTouchEvent: true }} \n        // state='disabled'\n        theme={this.props.theme} testID={`${WEEK_NUMBER}-${weekNumber}`}>\n          {weekNumber}\n        </BasicDay>\n      </View>);\n    });\n    renderDay(day, id) {\n        const { hideExtraDays, markedDates } = this.props;\n        const dayProps = extractComponentProps(Day, this.props);\n        if (!sameMonth(day, this.state.currentMonth) && hideExtraDays) {\n            return <View key={id} style={this.style.emptyDayContainer}/>;\n        }\n        return (<View style={this.style.dayContainer} key={id}>\n        <Day {...dayProps} day={day} state={getState(day, this.state.currentMonth, this.props)} marking={markedDates?.[toMarkingFormat(day)]} onPress={this.pressDay} onLongPress={this.longPressDay}/>\n      </View>);\n    }\n    renderWeek(days, id) {\n        const week = [];\n        days.forEach((day, id2) => {\n            week.push(this.renderDay(day, id2));\n        }, this);\n        if (this.props.showWeekNumbers) {\n            week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n        }\n        return (<View style={this.style.week} key={id}>\n        {week}\n      </View>);\n    }\n    renderMonth() {\n        const { currentMonth } = this.state;\n        const { firstDay, showSixWeeks, hideExtraDays } = this.props;\n        const shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n        const days = page(currentMonth, firstDay, shouldShowSixWeeks);\n        const weeks = [];\n        while (days.length) {\n            weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n        }\n        return <View style={this.style.monthView}>{weeks}</View>;\n    }\n    renderHeader() {\n        const { customHeader, headerStyle, displayLoadingIndicator, markedDates, testID } = this.props;\n        const current = parseDate(this.props.current);\n        let indicator;\n        if (current) {\n            const lastMonthOfDay = toMarkingFormat(current.clone().addMonths(1, true).setDate(1).addDays(-1));\n            if (displayLoadingIndicator && !markedDates?.[lastMonthOfDay]) {\n                indicator = true;\n            }\n        }\n        const headerProps = extractComponentProps(CalendarHeader, this.props);\n        const CustomHeader = customHeader;\n        const HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n        return (<HeaderComponent {...headerProps} testID={testID} style={headerStyle} ref={this.header} month={this.state.currentMonth} addMonth={this.addMonth} displayLoadingIndicator={indicator}/>);\n    }\n    render() {\n        const { enableSwipeMonths, style } = this.props;\n        const GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n        const gestureProps = enableSwipeMonths ? this.swipeProps : undefined;\n        return (<GestureComponent {...gestureProps}>\n        <View style={[this.style.container, style]} accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n         importantForAccessibility={this.props.importantForAccessibility} // Android\n        >\n          {this.renderHeader()}\n          {this.renderMonth()}\n        </View>\n      </GestureComponent>);\n    }\n}\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}