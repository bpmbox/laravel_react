{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/app/node_modules/react-native-calendars/src/calendar/day/marking/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { shouldUpdate, extractComponentProps } from \"../../../component-updater\";\nimport styleConstructor from \"./style\";\nimport Dot from \"../dot\";\nexport var MarkingTypes;\n\n(function (MarkingTypes) {\n  MarkingTypes[\"DOT\"] = \"dot\";\n  MarkingTypes[\"MULTI_DOT\"] = \"multi-dot\";\n  MarkingTypes[\"PERIOD\"] = \"period\";\n  MarkingTypes[\"MULTI_PERIOD\"] = \"multi-period\";\n  MarkingTypes[\"CUSTOM\"] = \"custom\";\n})(MarkingTypes || (MarkingTypes = {}));\n\nvar Marking = function (_Component) {\n  _inherits(Marking, _Component);\n\n  var _super = _createSuper(Marking);\n\n  function Marking(props) {\n    var _this;\n\n    _classCallCheck(this, Marking);\n\n    _this = _super.call(this, props);\n    _this.style = styleConstructor(props.theme);\n    return _this;\n  }\n\n  _createClass(Marking, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return shouldUpdate(this.props, nextProps, ['type', 'selected', 'marked', 'today', 'disabled', 'inactive', 'disableTouchEvent', 'activeOpacity', 'selectedColor', 'selectedTextColor', 'dotColor', 'dots', 'periods']);\n    }\n  }, {\n    key: \"getItems\",\n    value: function getItems(items) {\n      var _this2 = this;\n\n      var type = this.props.type;\n\n      if (items && Array.isArray(items) && items.length > 0) {\n        var validItems = _.filter(items, function (o) {\n          return o.color;\n        });\n\n        return validItems.map(function (item, index) {\n          return type === MarkingTypes.MULTI_DOT ? _this2.renderDot(index, item) : _this2.renderPeriod(index, item);\n        });\n      }\n    }\n  }, {\n    key: \"renderMarkingByType\",\n    value: function renderMarkingByType() {\n      var _this$props = this.props,\n          type = _this$props.type,\n          dots = _this$props.dots,\n          periods = _this$props.periods;\n\n      switch (type) {\n        case MarkingTypes.MULTI_DOT:\n          return this.renderMultiMarkings(this.style.dots, dots);\n\n        case MarkingTypes.MULTI_PERIOD:\n          return this.renderMultiMarkings(this.style.periods, periods);\n\n        default:\n          return this.renderDot();\n      }\n    }\n  }, {\n    key: \"renderMultiMarkings\",\n    value: function renderMultiMarkings(containerStyle, items) {\n      return React.createElement(View, {\n        style: containerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }\n      }, this.getItems(items));\n    }\n  }, {\n    key: \"renderPeriod\",\n    value: function renderPeriod(index, item) {\n      var color = item.color,\n          startingDay = item.startingDay,\n          endingDay = item.endingDay;\n      var style = [this.style.period, {\n        backgroundColor: color\n      }];\n\n      if (startingDay) {\n        style.push(this.style.startingDay);\n      }\n\n      if (endingDay) {\n        style.push(this.style.endingDay);\n      }\n\n      return React.createElement(View, {\n        key: index,\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"renderDot\",\n    value: function renderDot(index, item) {\n      var _this$props2 = this.props,\n          selected = _this$props2.selected,\n          dotColor = _this$props2.dotColor;\n      var dotProps = extractComponentProps(Dot, this.props);\n      var key = index;\n      var color = dotColor;\n\n      if (item) {\n        if (item.key) {\n          key = item.key;\n        }\n\n        color = selected && item.selectedDotColor ? item.selectedDotColor : item.color;\n      }\n\n      return React.createElement(Dot, _extends({}, dotProps, {\n        key: key,\n        color: color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 16\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.renderMarkingByType();\n    }\n  }]);\n\n  return Marking;\n}(Component);\n\nMarking.displayName = 'IGNORE';\nMarking.markingTypes = MarkingTypes;\nexport { Marking as default };","map":{"version":3,"sources":["/app/node_modules/react-native-calendars/src/calendar/day/marking/index.js"],"names":["_","React","Component","shouldUpdate","extractComponentProps","styleConstructor","Dot","MarkingTypes","Marking","props","style","theme","nextProps","items","type","Array","isArray","length","validItems","filter","o","color","map","item","index","MULTI_DOT","renderDot","renderPeriod","dots","periods","renderMultiMarkings","MULTI_PERIOD","containerStyle","getItems","startingDay","endingDay","period","backgroundColor","push","selected","dotColor","dotProps","key","selectedDotColor","renderMarkingByType","displayName","markingTypes"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { View } from 'react-native';\n// @ts-expect-error\nimport { shouldUpdate, extractComponentProps } from '../../../component-updater';\nimport styleConstructor from './style';\nimport Dot from '../dot';\nexport var MarkingTypes;\n(function (MarkingTypes) {\n    MarkingTypes[\"DOT\"] = \"dot\";\n    MarkingTypes[\"MULTI_DOT\"] = \"multi-dot\";\n    MarkingTypes[\"PERIOD\"] = \"period\";\n    MarkingTypes[\"MULTI_PERIOD\"] = \"multi-period\";\n    MarkingTypes[\"CUSTOM\"] = \"custom\";\n})(MarkingTypes || (MarkingTypes = {}));\nexport default class Marking extends Component {\n    static displayName = 'IGNORE';\n    static markingTypes = MarkingTypes;\n    style;\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n    }\n    shouldComponentUpdate(nextProps) {\n        return shouldUpdate(this.props, nextProps, [\n            'type',\n            'selected',\n            'marked',\n            'today',\n            'disabled',\n            'inactive',\n            'disableTouchEvent',\n            'activeOpacity',\n            'selectedColor',\n            'selectedTextColor',\n            'dotColor',\n            'dots',\n            'periods'\n        ]);\n    }\n    getItems(items) {\n        const { type } = this.props;\n        if (items && Array.isArray(items) && items.length > 0) {\n            // Filter out items so that we process only those which have color property\n            const validItems = _.filter(items, function (o) { return o.color; });\n            return validItems.map((item, index) => {\n                return type === MarkingTypes.MULTI_DOT ? this.renderDot(index, item) : this.renderPeriod(index, item);\n            });\n        }\n    }\n    renderMarkingByType() {\n        const { type, dots, periods } = this.props;\n        switch (type) {\n            case MarkingTypes.MULTI_DOT:\n                return this.renderMultiMarkings(this.style.dots, dots);\n            case MarkingTypes.MULTI_PERIOD:\n                return this.renderMultiMarkings(this.style.periods, periods);\n            default:\n                return this.renderDot();\n        }\n    }\n    renderMultiMarkings(containerStyle, items) {\n        return <View style={containerStyle}>{this.getItems(items)}</View>;\n    }\n    renderPeriod(index, item) {\n        const { color, startingDay, endingDay } = item;\n        const style = [\n            this.style.period,\n            {\n                backgroundColor: color\n            }\n        ];\n        if (startingDay) {\n            style.push(this.style.startingDay);\n        }\n        if (endingDay) {\n            style.push(this.style.endingDay);\n        }\n        return <View key={index} style={style}/>;\n    }\n    renderDot(index, item) {\n        const { selected, dotColor } = this.props;\n        const dotProps = extractComponentProps(Dot, this.props);\n        let key = index;\n        let color = dotColor;\n        if (item) {\n            if (item.key) {\n                key = item.key;\n            }\n            color = selected && item.selectedDotColor ? item.selectedDotColor : item.color;\n        }\n        return <Dot {...dotProps} key={key} color={color}/>;\n    }\n    render() {\n        return this.renderMarkingByType();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}