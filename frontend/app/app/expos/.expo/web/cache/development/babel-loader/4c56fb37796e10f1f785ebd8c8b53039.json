{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nvar GRAPHQL_API_URL = 'https://swapi-graphql.netlify.app/.netlify/functions/index';\nvar TOKEN = '';\nvar asyncAuthLink = setContext(function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            headers: {\n              Authorization: TOKEN\n            }\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\nvar httpLink = new createHttpLink({\n  uri: GRAPHQL_API_URL\n});\nexport var apolloClient = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: asyncAuthLink.concat(httpLink)\n});","map":{"version":3,"sources":["/app/examples/with-apollo/apollo.js"],"names":["ApolloClient","InMemoryCache","createHttpLink","setContext","GRAPHQL_API_URL","TOKEN","asyncAuthLink","headers","Authorization","httpLink","uri","apolloClient","cache","link","concat"],"mappings":";AAGA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAGA,IAAMC,eAAe,GAAG,4DAAxB;AAQA,IAAMC,KAAK,GAAG,EAAd;AACA,IAAMC,aAAa,GAAGH,UAAU,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,2CACxB;AACLI,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAEH;AADR;AADJ,WADwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD,CAAhC;AAUA,IAAMI,QAAQ,GAAG,IAAIP,cAAJ,CAAmB;AAClCQ,EAAAA,GAAG,EAAEN;AAD6B,CAAnB,CAAjB;AAIA,OAAO,IAAMO,YAAY,GAAG,IAAIX,YAAJ,CAAiB;AAC3CY,EAAAA,KAAK,EAAE,IAAIX,aAAJ,EADoC;AAG3CY,EAAAA,IAAI,EAAEP,aAAa,CAACQ,MAAd,CAAqBL,QAArB;AAHqC,CAAjB,CAArB","sourcesContent":["//import { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\n//import { setContext } from '@apollo/link-context';\n\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\n\n// see: https://github.com/graphql/swapi-graphql\nconst GRAPHQL_API_URL = 'https://swapi-graphql.netlify.app/.netlify/functions/index';\n\n/*\nuncomment the code below in case you are using a GraphQL API that requires some form of\nauthentication. asyncAuthLink will run every time your request is made and use the token\nyou provide while making the request.\n*/\n\nconst TOKEN = '';\nconst asyncAuthLink = setContext(async () => {\n  return {\n    headers: {\n      Authorization: TOKEN,\n    },\n  };\n});\n\n\n\nconst httpLink = new createHttpLink({\n  uri: GRAPHQL_API_URL,\n});\n\nexport const apolloClient = new ApolloClient({\n  cache: new InMemoryCache(),\n // link: httpLink,\n  link: asyncAuthLink.concat(httpLink),\n});\n"]},"metadata":{},"sourceType":"module"}