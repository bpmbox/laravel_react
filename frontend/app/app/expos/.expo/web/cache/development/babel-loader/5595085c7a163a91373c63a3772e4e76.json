{"ast":null,"code":"var _jsxFileName = \"/app/examples/10-music-player/PlayerModal.js\";\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport Modal from \"react-native-modal\";\nimport Slider from \"@react-native-community/slider\";\nimport sliderThumbImageAndroid from \"../../assets/music-player/slider-thumb-android.png\";\nimport sliderThumbImageIOS from \"../../assets/music-player/slider-thumb-ios.png\";\nimport { displayTime } from \"./util\";\nimport { styles } from \"./PlayerModal.style\";\nimport { PRIMARY_COLOR } from \"./style\";\nexport default function PlayerModal(_ref) {\n  var isModalVisible = _ref.isModalVisible,\n      closeModal = _ref.closeModal,\n      playingSong = _ref.playingSong,\n      isPlaying = _ref.isPlaying,\n      isBuffering = _ref.isBuffering,\n      currentSongIndex = _ref.currentSongIndex,\n      currentPosition = _ref.currentPosition,\n      setcurrentPosition = _ref.setcurrentPosition,\n      setRewinding = _ref.setRewinding,\n      updatePosition = _ref.updatePosition,\n      pauseOrResumeSong = _ref.pauseOrResumeSong,\n      changeSong = _ref.changeSong;\n  var opacity = isBuffering ? 0.5 : 1;\n  return React.createElement(Modal, {\n    isVisible: isModalVisible,\n    hasBackdrop: false,\n    onBackButtonPress: closeModal,\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: closeModal,\n    style: styles.closeButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"times\",\n    size: 20,\n    color: \"#757575\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })), React.createElement(Image, {\n    source: {\n      uri: playingSong.coverImage\n    },\n    style: styles.coverImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.songName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, playingSong.name), React.createElement(Text, {\n    style: styles.singerName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, playingSong.singer), React.createElement(View, {\n    style: styles.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.timeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, displayTime(currentPosition)), React.createElement(Text, {\n    style: styles.timeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, displayTime(playingSong.duration))), React.createElement(Slider, {\n    style: styles.slider,\n    minimumValue: 0,\n    maximumValue: playingSong.duration,\n    minimumTrackTintColor: PRIMARY_COLOR,\n    maximumTrackTintColor: \"#dfdfdf\",\n    tapToSeek: true,\n    thumbImage: Platform.OS === \"ios\" ? sliderThumbImageIOS : sliderThumbImageAndroid,\n    onValueChange: setcurrentPosition,\n    onSlidingStart: function onSlidingStart() {\n      return setRewinding(true);\n    },\n    onSlidingComplete: updatePosition,\n    value: currentPosition,\n    disabled: isBuffering,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.controls,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeSong(currentSongIndex - 1);\n    },\n    disabled: isBuffering,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"backward\",\n    style: [styles.secondaryControlIcon, {\n      opacity: opacity\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: pauseOrResumeSong,\n    disabled: isBuffering,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, React.createElement(FontAwesome5, {\n    name: isPlaying ? \"pause-circle\" : \"play-circle\",\n    style: [styles.primaryControlIcon, {\n      opacity: opacity\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeSong(currentSongIndex + 1);\n    },\n    disabled: isBuffering,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"forward\",\n    style: [styles.secondaryControlIcon, {\n      opacity: opacity\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/app/examples/10-music-player/PlayerModal.js"],"names":["React","FontAwesome5","Modal","Slider","sliderThumbImageAndroid","sliderThumbImageIOS","displayTime","styles","PRIMARY_COLOR","PlayerModal","isModalVisible","closeModal","playingSong","isPlaying","isBuffering","currentSongIndex","currentPosition","setcurrentPosition","setRewinding","updatePosition","pauseOrResumeSong","changeSong","opacity","margin","container","content","closeButton","uri","coverImage","songName","name","singerName","singer","progress","time","timeText","duration","slider","Platform","OS","controls","secondaryControlIcon","primaryControlIcon"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Platform,\n  StyleSheet,\n  SafeAreaView,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport Modal from \"react-native-modal\";\nimport Slider from \"@react-native-community/slider\";\nimport sliderThumbImageAndroid from \"../../assets/music-player/slider-thumb-android.png\";\nimport sliderThumbImageIOS from \"../../assets/music-player/slider-thumb-ios.png\";\nimport { displayTime } from \"./util\";\nimport { styles } from \"./PlayerModal.style\";\nimport { PRIMARY_COLOR } from \"./style\";\n\nexport default function PlayerModal({\n  isModalVisible,\n  closeModal,\n  playingSong,\n  isPlaying,\n  isBuffering,\n  currentSongIndex,\n  currentPosition,\n  setcurrentPosition,\n  setRewinding,\n  updatePosition,\n  pauseOrResumeSong,\n  changeSong,\n}) {\n  const opacity = isBuffering ? 0.5 : 1;\n\n  return (\n    // https://github.com/react-native-modal/react-native-modal\n    <Modal\n      isVisible={isModalVisible}\n      hasBackdrop={false}\n      onBackButtonPress={closeModal}\n      style={{ margin: 0 }}\n    >\n      <SafeAreaView style={styles.container}>\n        <View style={styles.content}>\n          <TouchableOpacity onPress={closeModal} style={styles.closeButton}>\n            <FontAwesome5 name=\"times\" size={20} color=\"#757575\" />\n          </TouchableOpacity>\n\n          <Image\n            source={{ uri: playingSong.coverImage }}\n            style={styles.coverImage}\n          />\n\n          <Text style={styles.songName}>{playingSong.name}</Text>\n\n          <Text style={styles.singerName}>{playingSong.singer}</Text>\n\n          <View style={styles.progress}>\n            <View style={styles.time}>\n              <Text style={styles.timeText}>\n                {displayTime(currentPosition)}\n              </Text>\n\n              <Text style={styles.timeText}>\n                {displayTime(playingSong.duration)}\n              </Text>\n            </View>\n\n            <Slider\n              style={styles.slider}\n              minimumValue={0}\n              maximumValue={playingSong.duration}\n              minimumTrackTintColor={PRIMARY_COLOR}\n              maximumTrackTintColor=\"#dfdfdf\"\n              tapToSeek={true}\n              thumbImage={\n                Platform.OS === \"ios\"\n                  ? sliderThumbImageIOS\n                  : sliderThumbImageAndroid\n              }\n              onValueChange={setcurrentPosition}\n              onSlidingStart={() => setRewinding(true)}\n              onSlidingComplete={updatePosition}\n              value={currentPosition}\n              disabled={isBuffering}\n            />\n          </View>\n\n          <View style={styles.controls}>\n            <TouchableOpacity\n              onPress={() => changeSong(currentSongIndex - 1)}\n              disabled={isBuffering}\n            >\n              <FontAwesome5\n                name=\"backward\"\n                style={[styles.secondaryControlIcon, { opacity }]}\n              />\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={pauseOrResumeSong}\n              disabled={isBuffering}\n            >\n              <FontAwesome5\n                name={isPlaying ? \"pause-circle\" : \"play-circle\"}\n                style={[styles.primaryControlIcon, { opacity }]}\n              />\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => changeSong(currentSongIndex + 1)}\n              disabled={isBuffering}\n            >\n              <FontAwesome5\n                name=\"forward\"\n                style={[styles.secondaryControlIcon, { opacity }]}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </SafeAreaView>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}