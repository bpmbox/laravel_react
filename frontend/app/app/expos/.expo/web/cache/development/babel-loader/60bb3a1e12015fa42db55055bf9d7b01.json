{"ast":null,"code":"var _jsxFileName = \"/app/examples/4-register-form/RegisterForm.js\";\nimport React from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { Formik } from \"formik\";\nimport { validationSchema } from \"./validation\";\nimport { styles } from \"./styles\";\nimport FormField from \"./FormField\";\nexport default function RegisterForm() {\n  var _this = this;\n\n  function onSubmitHandler(values) {\n    Alert.alert(\"Register Successfully!\", \"Form data: \" + JSON.stringify(values));\n  }\n\n  function isFormValid(isValid, touched) {\n    return isValid && Object.keys(touched).length !== 0;\n  }\n\n  function handleSubmit() {\n    Alert.alert(\"sssss\");\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(SafeAreaView, {\n    style: styles.topSafeArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Register\")), React.createElement(KeyboardAwareScrollView, {\n    style: styles.content,\n    showsVerticalScrollIndicator: false,\n    keyboardShouldPersistTaps: \"handled\",\n    extraScrollHeight: 140,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: onSubmitHandler,\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        isValid = _ref.isValid;\n    return React.createElement(React.Fragment, null, React.createElement(FormField, {\n      field: \"firstName\",\n      label: \"First Name\",\n      autoCapitalize: \"words\",\n      values: values,\n      touched: touched,\n      errors: errors,\n      handleChange: handleChange,\n      handleBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), React.createElement(FormField, {\n      field: \"lastName\",\n      label: \"Last Name\",\n      autoCapitalize: \"words\",\n      values: values,\n      touched: touched,\n      errors: errors,\n      handleChange: handleChange,\n      handleBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), React.createElement(FormField, {\n      field: \"email\",\n      label: \"Email Address\",\n      values: values,\n      touched: touched,\n      errors: errors,\n      handleChange: handleChange,\n      handleBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), React.createElement(FormField, {\n      field: \"password\",\n      label: \"Password\",\n      secureTextEntry: true,\n      values: values,\n      touched: touched,\n      errors: errors,\n      handleChange: handleChange,\n      handleBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }), React.createElement(FormField, {\n      field: \"confirmPassword\",\n      label: \"Confirm Password\",\n      secureTextEntry: true,\n      values: values,\n      touched: touched,\n      errors: errors,\n      handleChange: handleChange,\n      handleBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), React.createElement(TouchableOpacity, {\n      disabled: !isFormValid(isValid, touched),\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: [styles.button, {\n        opacity: isFormValid(isValid, touched) ? 1 : 0.5\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, \"SUBMIT\"))));\n  }))));\n}","map":{"version":3,"sources":["/app/examples/4-register-form/RegisterForm.js"],"names":["React","StatusBar","KeyboardAwareScrollView","Formik","validationSchema","styles","FormField","RegisterForm","onSubmitHandler","values","Alert","alert","JSON","stringify","isFormValid","isValid","touched","Object","keys","length","handleSubmit","topSafeArea","container","header","headerText","content","firstName","lastName","email","password","confirmPassword","handleChange","handleBlur","errors","button","opacity","buttonText"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  SafeAreaView,\n  View,\n  Text,\n  TouchableOpacity,\n  TextInput,\n  Alert,\n} from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { Formik } from \"formik\";\nimport { validationSchema } from \"./validation\";\nimport { styles } from \"./styles\";\nimport FormField from \"./FormField\";\n\nexport default function RegisterForm() {\n  function onSubmitHandler(values) {\n    // https://reactnative.dev/docs/alert\n    Alert.alert(\n      \"Register Successfully!\",\n      \"Form data: \" + JSON.stringify(values)\n    );\n  }\n\n  function isFormValid(isValid, touched) {\n    return isValid && Object.keys(touched).length !== 0;\n  }\n\n  function handleSubmit(){\n    Alert.alert(\"sssss\")\n  }\n\n  return (\n    <>\n      <SafeAreaView style={styles.topSafeArea} />\n\n      <StatusBar style=\"light\" />\n\n      <SafeAreaView style={styles.container}>\n        <View style={styles.header}>\n          <Text style={styles.headerText}>Register</Text>\n        </View>\n\n        {/* https://github.com/APSL/react-native-keyboard-aware-scroll-view */}\n        <KeyboardAwareScrollView\n          style={styles.content}\n          showsVerticalScrollIndicator={false}\n          keyboardShouldPersistTaps=\"handled\"\n          extraScrollHeight={140}\n        >\n          {/* https://formik.org/docs/overview */}\n          <Formik\n            initialValues={{\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\",\n              password: \"\",\n              confirmPassword: \"\",\n            }}\n            onSubmit={onSubmitHandler}\n            validationSchema={validationSchema}\n          >\n            {({\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              values,\n              errors,\n              touched,\n              isValid,\n            }) => (\n              <>\n                <FormField\n                  field=\"firstName\"\n                  label=\"First Name\"\n                  autoCapitalize=\"words\"\n                  values={values}\n                  touched={touched}\n                  errors={errors}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                />\n\n                <FormField\n                  field=\"lastName\"\n                  label=\"Last Name\"\n                  autoCapitalize=\"words\"\n                  values={values}\n                  touched={touched}\n                  errors={errors}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                />\n\n                <FormField\n                  field=\"email\"\n                  label=\"Email Address\"\n                  values={values}\n                  touched={touched}\n                  errors={errors}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                />\n\n                <FormField\n                  field=\"password\"\n                  label=\"Password\"\n                  secureTextEntry={true}\n                  values={values}\n                  touched={touched}\n                  errors={errors}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                />\n\n                <FormField\n                  field=\"confirmPassword\"\n                  label=\"Confirm Password\"\n                  secureTextEntry={true}\n                  values={values}\n                  touched={touched}\n                  errors={errors}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                />\n\n                <TouchableOpacity\n                  disabled={!isFormValid(isValid, touched)}\n                  onPress={handleSubmit}\n                >\n                  <View\n                    style={[\n                      styles.button,\n                      {\n                        opacity: isFormValid(isValid, touched) ? 1 : 0.5,\n                      },\n                    ]}\n                  >\n                    <Text style={styles.buttonText}>SUBMIT</Text>\n                  </View>\n                </TouchableOpacity>\n              </>\n            )}\n          </Formik>\n        </KeyboardAwareScrollView>\n      </SafeAreaView>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}