{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.collapseTopMarginForChild = collapseTopMarginForChild;\nexports.default = exports.tchildrenRendererDefaultProps = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _TNodeRenderer = _interopRequireDefault(require(\"./TNodeRenderer\"));\n\nvar _getCollapsedMarginTop = _interopRequireDefault(require(\"./helpers/getCollapsedMarginTop\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction isCollapsible(tnode) {\n  return tnode.type === 'block' || tnode.type === 'phrasing';\n}\n\nfunction collapseTopMarginForChild(n, tchildren) {\n  var childTnode = tchildren[n];\n\n  if (isCollapsible(childTnode) && n > 0 && isCollapsible(tchildren[n - 1])) {\n    return (0, _getCollapsedMarginTop.default)(tchildren[n - 1], childTnode);\n  }\n\n  return null;\n}\n\nvar mapCollapsibleChildren = function mapCollapsibleChildren(propsForChildren, renderChild, disableMarginCollapsing, childTnode, n, tchildren) {\n  var collapsedMarginTop = disableMarginCollapsing ? null : collapseTopMarginForChild(n, tchildren);\n\n  var propsFromParent = _objectSpread(_objectSpread({}, propsForChildren), {}, {\n    collapsedMarginTop: collapsedMarginTop\n  });\n\n  var key = childTnode.nodeIndex;\n\n  var childElement = _react.default.createElement(_TNodeRenderer.default, {\n    propsFromParent: propsFromParent,\n    tnode: childTnode,\n    key: key\n  });\n\n  return typeof renderChild === 'function' ? renderChild({\n    key: key,\n    childElement: childElement,\n    index: n,\n    childTnode: childTnode,\n    propsFromParent: propsFromParent\n  }) : childElement;\n};\n\nfunction TChildrenRenderer(_ref) {\n  var tchildren = _ref.tchildren,\n      propsForChildren = _ref.propsForChildren,\n      disableMarginCollapsing = _ref.disableMarginCollapsing,\n      renderChild = _ref.renderChild;\n  var elements = tchildren.map(mapCollapsibleChildren.bind(null, propsForChildren, renderChild, disableMarginCollapsing));\n  return _react.default.createElement(_react.default.Fragment, null, elements);\n}\n\nvar tchildrenRendererDefaultProps = {\n  propsForChildren: {}\n};\nexports.tchildrenRendererDefaultProps = tchildrenRendererDefaultProps;\nTChildrenRenderer.defaultProps = tchildrenRendererDefaultProps;\nvar _default = TChildrenRenderer;\nexports.default = _default;","map":{"version":3,"sources":["TChildrenRenderer.tsx"],"names":["tnode","childTnode","tchildren","isCollapsible","n","mapCollapsibleChildren","collapsedMarginTop","disableMarginCollapsing","collapseTopMarginForChild","propsFromParent","key","childElement","TNodeRenderer","renderChild","index","elements","tchildrenRendererDefaultProps","propsForChildren","TChildrenRenderer"],"mappings":";;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,mBAAA,CAAA;;AAEA,IAAA,sBAAA,GAAA,sBAAA,CAAA,OAAA,mCAAA,CAAA;;;;;;;;AAEA,SAAA,aAAA,CAAA,KAAA,EAAqC;AACnC,SAAOA,KAAK,CAALA,IAAAA,KAAAA,OAAAA,IAA0BA,KAAK,CAALA,IAAAA,KAAjC,UAAA;AACD;;AAWM,SAAA,yBAAA,CAAA,CAAA,EAAA,SAAA,EAGU;AACf,MAAMC,UAAU,GAAGC,SAAS,CAA5B,CAA4B,CAA5B;;AACA,MAAIC,aAAa,CAAbA,UAAa,CAAbA,IAA6BC,CAAC,GAA9BD,CAAAA,IAAsCA,aAAa,CAACD,SAAS,CAACE,CAAC,GAAnE,CAAiE,CAAV,CAAvD,EAA2E;AACzE,WAAO,CAAA,GAAA,sBAAA,CAAA,OAAA,EAAsBF,SAAS,CAACE,CAAC,GAAjC,CAA+B,CAA/B,EAAP,UAAO,CAAP;AACD;;AACD,SAAA,IAAA;AACD;;AAED,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAA,gBAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,UAAA,EAAA,CAAA,EAAA,SAAA,EAO1B;AACH,MAAMC,kBAAkB,GAAGC,uBAAuB,GAAA,IAAA,GAE9CC,yBAAyB,CAAA,CAAA,EAF7B,SAE6B,CAF7B;;AAGA,MAAMC,eAAe,mCAAG,gBAAH;AAA0BH,IAAAA,kBAAAA,EAAAA;AAA1B,IAArB;;AACA,MAAMI,GAAG,GAAGT,UAAU,CAAtB,SAAA;;AACA,MAAMU,YAAY,GAAG,MAAA,CAAA,OAAA,CAAA,aAAA,CAAoBC,cAAAA,CAApB,OAAA,EAAmC;AACtDH,IAAAA,eADsD,EACtDA,eADsD;AAEtDT,IAAAA,KAAK,EAFiD,UAAA;AAGtDU,IAAAA,GAAAA,EAAAA;AAHsD,GAAnC,CAArB;;AAKA,SAAO,OAAA,WAAA,KAAA,UAAA,GACHG,WAAW,CAAC;AACVH,IAAAA,GADU,EACVA,GADU;AAEVC,IAAAA,YAFU,EAEVA,YAFU;AAGVG,IAAAA,KAAK,EAHK,CAAA;AAIVb,IAAAA,UAJU,EAIVA,UAJU;AAKVQ,IAAAA,eAAAA,EAAAA;AALU,GAAD,CADR,GAAP,YAAA;AAlBF,CAAA;;AAiCA,SAAA,iBAAA,OAKyC;AAAA,MALd,SAKc,QALd,SAKc;AAAA,MALd,gBAKc,QALd,gBAKc;AAAA,MALd,uBAKc,QALd,uBAKc;AAAA,MADvCI,WACuC,QADvCA,WACuC;AACvC,MAAME,QAAQ,GAAGb,SAAS,CAATA,GAAAA,CACfG,sBAAsB,CAAtBA,IAAAA,CAAAA,IAAAA,EAAAA,gBAAAA,EAAAA,WAAAA,EADF,uBACEA,CADeH,CAAjB;AAQA,SAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,CAAA,OAAA,CAAA,QAAA,EAAA,IAAA,EAAP,QAAO,CAAP;AACD;;AAEM,IAAMc,6BAGZ,GAAG;AACFC,EAAAA,gBAAgB,EAAE;AADhB,CAHG;;AAUPC,iBAAiB,CAAjBA,YAAAA,GAAAA,6BAAAA;eAEeA,iB","sourcesContent":["import React, { ReactElement } from 'react';\nimport { TNode } from '@native-html/transient-render-engine';\nimport TNodeRenderer from './TNodeRenderer';\nimport { TChildrenRendererProps } from './shared-types';\nimport getCollapsedMarginTop from './helpers/getCollapsedMarginTop';\n\nfunction isCollapsible(tnode: TNode) {\n  return tnode.type === 'block' || tnode.type === 'phrasing';\n}\n\n/**\n * Compute top collapsed margin for the nth {@link TNode}-child of a list of\n * TNodes.\n *\n * @param n - The index for which the top margin should be collapsed.\n * @param tchildren - The list of {@link TNode} children.\n * @returns `null` when no margin collapsing should apply, a number otherwise.\n * @public\n */\nexport function collapseTopMarginForChild(\n  n: number,\n  tchildren: readonly TNode[]\n): number | null {\n  const childTnode = tchildren[n];\n  if (isCollapsible(childTnode) && n > 0 && isCollapsible(tchildren[n - 1])) {\n    return getCollapsedMarginTop(tchildren[n - 1], childTnode);\n  }\n  return null;\n}\n\nconst mapCollapsibleChildren = (\n  propsForChildren: TChildrenRendererProps['propsForChildren'],\n  renderChild: TChildrenRendererProps['renderChild'],\n  disableMarginCollapsing: boolean | undefined,\n  childTnode: TNode,\n  n: number,\n  tchildren: readonly TNode[]\n) => {\n  const collapsedMarginTop = disableMarginCollapsing\n    ? null\n    : collapseTopMarginForChild(n, tchildren);\n  const propsFromParent = { ...propsForChildren, collapsedMarginTop };\n  const key = childTnode.nodeIndex;\n  const childElement = React.createElement(TNodeRenderer, {\n    propsFromParent,\n    tnode: childTnode,\n    key\n  });\n  return typeof renderChild === 'function'\n    ? renderChild({\n        key,\n        childElement,\n        index: n,\n        childTnode,\n        propsFromParent\n      })\n    : childElement;\n};\n\n/**\n * A component to render collections of tnodes.\n * Especially useful when used with {@link useTNodeChildrenProps}.\n */\nfunction TChildrenRenderer({\n  tchildren,\n  propsForChildren,\n  disableMarginCollapsing,\n  renderChild\n}: TChildrenRendererProps): ReactElement {\n  const elements = tchildren.map(\n    mapCollapsibleChildren.bind(\n      null,\n      propsForChildren,\n      renderChild,\n      disableMarginCollapsing\n    )\n  );\n  return <>{elements}</>;\n}\n\nexport const tchildrenRendererDefaultProps: Pick<\n  TChildrenRendererProps,\n  'propsForChildren'\n> = {\n  propsForChildren: {}\n};\n\n/**\n * @ignore\n */\nTChildrenRenderer.defaultProps = tchildrenRendererDefaultProps;\n\nexport default TChildrenRenderer;\n"]},"metadata":{},"sourceType":"script"}